{"version":3,"file":"glpower.js","sources":["../src/Power.ts","../src/GLPowerVAO.ts","../src/GLPowerProgram.ts","../src/GLPowerBuffer.ts","../src/Math/Vector.ts","../src/GLPowerTexture.ts","../src/GLPowerFrameBuffer.ts","../src/GLPowerFrameBufferCube.ts","../src/GLPowerTextureCube.ts","../src/GLPowerTransformFeedback.ts","../src/Math/Matrix.ts","../src/Math/Euler.ts","../src/Math/Quaternion.ts","../src/Math/Random.ts","../src/utils/EventEmitter.ts","../src/Animation/Bezier.ts","../src/Animation/Easings.ts","../src/Animation/Lerps.ts","../src/Animation/Animator.ts","../src/Animation/FCurve.ts","../src/Animation/FCurveGroup.ts","../src/Animation/FCurveKeyFrame.ts","../src/utils/Uniform.ts","../src/utils/ID.ts"],"sourcesContent":["export class Power {\r\n\r\n\tpublic gl: WebGL2RenderingContext;\r\n\r\n\tpublic extDisJointTimerQuery: any;\r\n\r\n\tconstructor( gl: WebGL2RenderingContext ) {\r\n\r\n\t\tthis.gl = gl;\r\n\r\n\t\tthis.gl.pixelStorei( gl.UNPACK_FLIP_Y_WEBGL, true );\r\n\r\n\t\t// ext\r\n\r\n\t\tthis.gl.getExtension( \"EXT_color_buffer_float\" );\r\n\t\tthis.gl.getExtension( \"EXT_color_buffer_half_float\" );\r\n\t\tthis.extDisJointTimerQuery = this.gl.getExtension( \"EXT_disjoint_timer_query_webgl2\" );\r\n\r\n\t}\r\n\r\n}\r\n\r\n","import { GLPowerBuffer, TArrayBuffer } from \"./GLPowerBuffer\";\r\n\r\nexport type Attribute = {\r\n\tarray: TArrayBuffer;\r\n\tsize: number;\r\n}\r\n\r\nexport type AttributeOptions = {\r\n\tinstanceDivisor?: number;\r\n}\r\n\r\nexport type AttributeBuffer = {\r\n\tbuffer: GLPowerBuffer;\r\n\tsize: number;\r\n\tcount: number;\r\n\tlocation?: number;\r\n} & AttributeOptions\r\n\r\nexport class GLPowerVAO {\r\n\r\n\tprivate gl: WebGL2RenderingContext;\r\n\r\n\tpublic vao: WebGLVertexArrayObject | null;\r\n\r\n\tpublic program: WebGLProgram;\r\n\r\n\tpublic indexBuffer: GLPowerBuffer | null;\r\n\r\n\tprotected attributes: Map<string, AttributeBuffer>;\r\n\r\n\tpublic vertCount: number;\r\n\tpublic indexCount: number;\r\n\r\n\tpublic instanceCount: number;\r\n\r\n\tconstructor( gl: WebGL2RenderingContext, program: WebGLProgram ) {\r\n\r\n\t\tthis.gl = gl;\r\n\r\n\t\tthis.program = program;\r\n\r\n\t\tthis.vao = this.gl.createVertexArray();\r\n\t\tthis.attributes = new Map();\r\n\t\tthis.indexBuffer = null;\r\n\r\n\t\tthis.vertCount = 0;\r\n\t\tthis.indexCount = 0;\r\n\t\tthis.instanceCount = 0;\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tAttribute\r\n\t-------------------------------*/\r\n\r\n\tpublic setAttribute( name: string, buffer: GLPowerBuffer, size: number, opt?: AttributeOptions ) {\r\n\r\n\t\tconst attr = this.attributes.get( name );\r\n\r\n\t\tconst count = buffer.array ? buffer.array.length / size : 0;\r\n\r\n\t\tthis.attributes.set( name, {\r\n\t\t\t...attr,\r\n\t\t\t...{\r\n\t\t\t\tbuffer,\r\n\t\t\t\tsize,\r\n\t\t\t\tcount,\r\n\t\t\t\t...opt\r\n\t\t\t},\r\n\t\t\tlocation: undefined\r\n\t\t} );\r\n\r\n\t\tthis.updateAttributes();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic removeAttribute( name: string ) {\r\n\r\n\t\tthis.attributes.delete( name );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic updateAttributes( force?: boolean ) {\r\n\r\n\t\tif ( ! this.vao ) return;\r\n\r\n\t\tthis.vertCount = 0;\r\n\t\tthis.instanceCount = 0;\r\n\r\n\t\tthis.gl.bindVertexArray( this.vao );\r\n\r\n\t\tthis.attributes.forEach( ( attribute, name ) => {\r\n\r\n\t\t\tif ( ( attribute.location === undefined || force ) ) {\r\n\r\n\t\t\t\tattribute.location = this.gl.getAttribLocation( this.program, name );\r\n\r\n\t\t\t\tif ( attribute.location > - 1 ) {\r\n\r\n\t\t\t\t\tthis.gl.bindBuffer( this.gl.ARRAY_BUFFER, attribute.buffer.buffer );\r\n\t\t\t\t\tthis.gl.enableVertexAttribArray( attribute.location );\r\n\t\t\t\t\tthis.gl.vertexAttribPointer( attribute.location, attribute.size, this.gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t\tif ( attribute.instanceDivisor !== undefined ) {\r\n\r\n\t\t\t\t\t\tthis.gl.vertexAttribDivisor( attribute.location, attribute.instanceDivisor );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( attribute.instanceDivisor == undefined && name != 'index' ) {\r\n\r\n\t\t\t\tthis.vertCount = Math.max( this.vertCount, attribute.count );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( attribute.instanceDivisor !== undefined && attribute.instanceDivisor > 0 ) {\r\n\r\n\t\t\t\tif ( this.instanceCount == 0 ) {\r\n\r\n\t\t\t\t\tthis.instanceCount = attribute.count;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis.instanceCount = Math.min( this.instanceCount, attribute.count );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\tthis.gl.bindVertexArray( null );\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tIndex\r\n\t-------------------------------*/\r\n\r\n\tpublic setIndex( indexBuffer: GLPowerBuffer | null ) {\r\n\r\n\t\tthis.indexBuffer = indexBuffer;\r\n\r\n\t\tif ( ! this.vao ) return;\r\n\r\n\t\tthis.gl.bindVertexArray( this.vao );\r\n\r\n\t\tthis.gl.bindBuffer( this.gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer ? this.indexBuffer.buffer : null );\r\n\r\n\t\tthis.gl.bindVertexArray( null );\r\n\r\n\t\tif ( this.indexBuffer && this.indexBuffer.array ) {\r\n\r\n\t\t\tthis.indexCount = this.indexBuffer.array.length;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tUSE\r\n\t-------------------------------*/\r\n\r\n\tpublic use( cb?: ( vao: GLPowerVAO ) => void ) {\r\n\r\n\t\tthis.gl.bindVertexArray( this.vao );\r\n\r\n\t\tif ( cb ) cb( this );\r\n\r\n\t\tthis.gl.bindVertexArray( null );\r\n\r\n\t}\r\n\r\n\tpublic getVAO() {\r\n\r\n\t\treturn this.vao;\r\n\r\n\t}\r\n\r\n\tpublic dispose() {\r\n\r\n\t\tthis.attributes.forEach( item => {\r\n\r\n\t\t\titem.buffer.dispose();\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n}\r\n","import { GLPowerVAO } from \"./GLPowerVAO\";\r\nimport { Matrix } from \"./Math/Matrix\";\r\nimport { Vector } from \"./Math/Vector\";\r\n\r\nimport { GLPowerTexture } from \".\";\r\n\r\nexport type Uniformable = boolean | number | Vector | Matrix | GLPowerTexture;\r\n\r\nexport type UniformType =\r\n\t'1f' | '1fv' | '2f' | '2fv' | '3f' | '3fv' | '4f' | '4fv' |\r\n\t'1i' | '1iv' | '2i' | '2iv' | '3i' | '3iv' | '4i' | '4iv' |\r\n\t'Matrix2fv' | 'Matrix3fv' | 'Matrix4fv';\r\n\r\nexport type Uniform = {\r\n\tlocation: WebGLUniformLocation | null;\r\n\tvalue: ( number | boolean )[];\r\n\ttype: string;\r\n\tcache?: ( number | boolean )[];\r\n\tneedsUpdate?: boolean\r\n}\r\n\r\nexport type Uniforms = {[key:string]: {value: any, type: UniformType}}\r\n\r\nexport type ShaderOptions = {\r\n\ttransformFeedbackVaryings?: string[]\r\n}\r\n\r\nexport class GLPowerProgram {\r\n\r\n\tpublic gl: WebGL2RenderingContext;\r\n\tpublic program: WebGLProgram | null;\r\n\r\n\tprivate vao: Map<string, GLPowerVAO>;\r\n\tprotected uniforms: Map<string, Uniform>;\r\n\r\n\tconstructor( gl: WebGL2RenderingContext ) {\r\n\r\n\t\tthis.gl = gl;\r\n\r\n\t\tthis.program = this.gl.createProgram();\r\n\r\n\t\tthis.vao = new Map();\r\n\t\tthis.uniforms = new Map();\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tShader\r\n\t-------------------------------*/\r\n\r\n\tpublic setShader( vertexShaderSrc: string, fragmentShaderSrc: string, opt?: ShaderOptions ) {\r\n\r\n\t\tif ( this.program === null ) {\r\n\r\n\t\t\tconsole.warn( 'program is null.' );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tconst vs = this.createShader( vertexShaderSrc, this.gl.VERTEX_SHADER );\r\n\t\tconst fs = this.createShader( fragmentShaderSrc, this.gl.FRAGMENT_SHADER );\r\n\r\n\t\tif ( ! vs || ! fs ) return;\r\n\r\n\t\tthis.gl.attachShader( this.program, vs );\r\n\t\tthis.gl.attachShader( this.program, fs );\r\n\r\n\t\tif ( opt && opt.transformFeedbackVaryings ) {\r\n\r\n\t\t\tthis.gl.transformFeedbackVaryings( this.program, opt.transformFeedbackVaryings, this.gl.SEPARATE_ATTRIBS );\r\n\r\n\t\t}\r\n\r\n\t\tthis.gl.linkProgram( this.program );\r\n\r\n\t\tif ( ! this.gl.getProgramParameter( this.program, this.gl.LINK_STATUS ) ) {\r\n\r\n\t\t\tconsole.error( 'program link error:', this.gl.getProgramInfoLog( this.program ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tprotected createShader( shaderSrc: string, type: number ) {\r\n\r\n\t\tconst shader = this.gl.createShader( type );\r\n\r\n\t\tif ( ! shader ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tthis.gl.shaderSource( shader, shaderSrc );\r\n\t\tthis.gl.compileShader( shader );\r\n\r\n\t\tif ( this.gl.getShaderParameter( shader, this.gl.COMPILE_STATUS ) ) {\r\n\r\n\t\t\treturn shader;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( process.env.NODE_ENV == \"development\" ) {\r\n\r\n\t\t\t\tconst errorLog = this.gl.getShaderInfoLog( shader );\r\n\r\n\t\t\t\tif ( errorLog ) {\r\n\r\n\t\t\t\t\tconst splitShaderSrc = shaderSrc.split( '\\n' );\r\n\r\n\t\t\t\t\tconst lines = errorLog.matchAll( /ERROR: 0:(\\d+)/g );\r\n\r\n\t\t\t\t\tArray.from( lines ).forEach( ( line, index ) => {\r\n\r\n\t\t\t\t\t\tconst lineNum = Number( line[ 1 ] );\r\n\r\n\t\t\t\t\t\tconst start = Math.max( 0, lineNum - 5 );\r\n\t\t\t\t\t\tconst end = Math.min( splitShaderSrc.length, lineNum + 2 );\r\n\r\n\t\t\t\t\t\tlet error = errorLog.split( '\\n' )[ index ] + '\\n';\r\n\r\n\t\t\t\t\t\tsplitShaderSrc.forEach( ( t, i ) => {\r\n\r\n\t\t\t\t\t\t\tif ( start <= i && i <= end ) {\r\n\r\n\t\t\t\t\t\t\t\terror += `${i + 1}: ${t}\\n`;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t\tconsole.error( error );\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tUniforms\r\n\t-------------------------------*/\r\n\r\n\tpublic setUniform( name: string, type: UniformType, value: ( number | boolean )[] ) {\r\n\r\n\t\tconst uniform = this.uniforms.get( name );\r\n\r\n\t\tif ( uniform ) {\r\n\r\n\t\t\tuniform.type = type;\r\n\t\t\tuniform.value = value;\r\n\r\n\t\t\tif ( uniform.cache ) {\r\n\r\n\t\t\t\tfor ( let i = 0; i < value.length; i ++ ) {\r\n\r\n\t\t\t\t\tif ( uniform.cache[ i ] !== value[ i ] ) {\r\n\r\n\t\t\t\t\t\tuniform.needsUpdate = true;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tuniform.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.uniforms.set( name, {\r\n\t\t\t\tvalue,\r\n\t\t\t\ttype: type,\r\n\t\t\t\tlocation: null,\r\n\t\t\t\tneedsUpdate: true\r\n\t\t\t} );\r\n\r\n\t\t\tthis.updateUniformLocations();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate updateUniformLocations( force?: boolean ) {\r\n\r\n\t\tif ( ! this.program ) return;\r\n\r\n\t\tthis.uniforms.forEach( ( uniform, key ) => {\r\n\r\n\t\t\tif ( uniform.location === null || force ) {\r\n\r\n\t\t\t\tuniform.location = this.gl.getUniformLocation( this.program!, key );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tpublic uploadUniforms() {\r\n\r\n\t\tthis.uniforms.forEach( uniform => {\r\n\r\n\t\t\tif ( uniform.needsUpdate && uniform.location !== null ) {\r\n\r\n\t\t\t\tif ( /Matrix[2|3|4]fv/.test( uniform.type ) ) {\r\n\r\n\t\t\t\t\t( this.gl as any )[ 'uniform' + uniform.type ]( uniform.location, false, uniform.value );\r\n\r\n\t\t\t\t} else if ( /[1|2|3|4][f|i]$/.test( uniform.type ) ) {\r\n\r\n\t\t\t\t\t( this.gl as any )[ 'uniform' + uniform.type ]( uniform.location, ...uniform.value );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t( this.gl as any )[ 'uniform' + uniform.type ]( uniform.location, uniform.value );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniform.cache = uniform.value.concat();\r\n\t\t\t\tuniform.needsUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tVAO\r\n\t-------------------------------*/\r\n\r\n\tpublic getVAO( id: string = '_' ) {\r\n\r\n\t\tif ( ! this.program ) return null;\r\n\r\n\t\tlet vao = this.vao.get( id );\r\n\r\n\t\tif ( vao ) return vao;\r\n\r\n\t\tvao = new GLPowerVAO( this.gl, this.program );\r\n\r\n\t\tthis.vao.set( id, vao );\r\n\r\n\t\treturn vao;\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tDraw??\r\n\t-------------------------------*/\r\n\r\n\tpublic use( cb?: ( program: GLPowerProgram ) => void ) {\r\n\r\n\t\tif ( ! this.program ) return;\r\n\r\n\t\tthis.gl.useProgram( this.program );\r\n\r\n\t\tif ( cb ) {\r\n\r\n\t\t\tcb( this );\r\n\r\n\t\t}\r\n\r\n\t\tthis.gl.useProgram( null );\r\n\r\n\t}\r\n\r\n\tpublic getProgram() {\r\n\r\n\t\treturn this.program;\r\n\r\n\t}\r\n\r\n\tpublic dispose() {\r\n\r\n\t\tthis.vao.forEach( vao => {\r\n\r\n\t\t\tvao.dispose();\r\n\r\n\t\t} );\r\n\r\n\t\tthis.vao.clear();\r\n\r\n\t\tthis.gl.deleteProgram( this.program );\r\n\r\n\t}\r\n\r\n}\r\n","export type BufferType = 'vbo' | 'ibo';\r\nexport type TArrayBuffer = Uint8Array | Uint16Array | Uint32Array | Float32Array | Float64Array\r\n\r\nexport class GLPowerBuffer {\r\n\r\n\tprivate gl: WebGL2RenderingContext;\r\n\tpublic buffer: WebGLBuffer | null;\r\n\tpublic array: TArrayBuffer | null;\r\n\r\n\tconstructor( gl: WebGL2RenderingContext ) {\r\n\r\n\t\tthis.gl = gl;\r\n\r\n\t\tthis.buffer = this.gl.createBuffer();\r\n\r\n\t\tthis.array = null;\r\n\r\n\t}\r\n\r\n\tpublic setData( data: TArrayBuffer, type: BufferType = 'vbo', usage?: number ) {\r\n\r\n\t\tconst target = type == 'vbo' ? this.gl.ARRAY_BUFFER : this.gl.ELEMENT_ARRAY_BUFFER;\r\n\r\n\t\tthis.gl.bindBuffer( target, this.buffer );\r\n\r\n\t\tthis.gl.bufferData( target, data, usage || this.gl.STATIC_DRAW );\r\n\r\n\t\tthis.gl.bindBuffer( target, null );\r\n\r\n\t\tthis.array = data;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic dispose() {\r\n\r\n\t\tthis.gl.deleteBuffer( this.buffer );\r\n\r\n\t}\r\n\r\n}\r\n","import { Matrix, Types } from \"..\";\r\n\r\nexport type IVector2 = {\r\n\tx: number,\r\n\ty: number,\r\n}\r\n\r\nexport type IVector3 = IVector2 & {\r\n\tz: number,\r\n}\r\n\r\nexport type IVector4 = IVector3 & {\r\n\tw: number,\r\n}\r\n\r\nexport class Vector {\r\n\r\n\tpublic x: number;\r\n\tpublic y: number;\r\n\tpublic z: number;\r\n\tpublic w: number;\r\n\r\n\tconstructor( x?: number, y?: number, z?: number, w?: number ) {\r\n\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\tthis.z = z || 0;\r\n\t\tthis.w = w || 0;\r\n\r\n\t}\r\n\r\n\tpublic get isVector() {\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tpublic set( x: number, y?: number, z?: number, w?: number ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y ?? x;\r\n\t\tthis.z = z ?? x;\r\n\t\tthis.w = w ?? x;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic add( a: number ): Vector\r\n\r\n\tpublic add( a: Vector | Types.Nullable<IVector4> ): Vector\r\n\r\n\tpublic add( a: Vector | Types.Nullable<IVector4> | number ): Vector {\r\n\r\n\t\tif ( typeof a == 'number' ) {\r\n\r\n\t\t\tthis.x += a;\r\n\t\t\tthis.y += a;\r\n\t\t\tthis.z += a;\r\n\t\t\tthis.w += a;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x += a.x ?? 0;\r\n\t\t\tthis.y += a.y ?? 0;\r\n\t\t\tthis.z += a.z ?? 0;\r\n\t\t\tthis.w += a.w ?? 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic sub( a: number ): Vector\r\n\r\n\tpublic sub( a: Vector | Types.Nullable<IVector4> ): Vector\r\n\r\n\tpublic sub( a: Vector | Types.Nullable<IVector4> | number ) {\r\n\r\n\t\tif ( typeof ( a ) == 'number' ) {\r\n\r\n\t\t\tthis.x -= a;\r\n\t\t\tthis.y -= a;\r\n\t\t\tthis.z -= a;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x -= a.x ?? 0;\r\n\t\t\tthis.y -= a.y ?? 0;\r\n\t\t\tthis.z -= a.z ?? 0;\r\n\t\t\tthis.w -= a.w ?? 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic multiply( a: number ): Vector;\r\n\r\n\tpublic multiply( a: Vector ): Vector;\r\n\r\n\tpublic multiply( a: number | Vector ) {\r\n\r\n\t\tif ( typeof a == 'number' ) {\r\n\r\n\t\t\tthis.x *= a;\r\n\t\t\tthis.y *= a;\r\n\t\t\tthis.z *= a;\r\n\t\t\tthis.w *= a;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x *= a.x;\r\n\t\t\tthis.y *= a.y;\r\n\t\t\tthis.z *= a.z;\r\n\t\t\tthis.w *= a.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic divide( a: number ): Vector;\r\n\r\n\tpublic divide( a: Vector ): Vector;\r\n\r\n\tpublic divide( a: number | Vector ) {\r\n\r\n\t\tif ( typeof a == 'number' ) {\r\n\r\n\t\t\tthis.x /= a;\r\n\t\t\tthis.y /= a;\r\n\t\t\tthis.z /= a;\r\n\t\t\tthis.w /= a;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x /= a.x;\r\n\t\t\tthis.y /= a.y;\r\n\t\t\tthis.z /= a.z;\r\n\t\t\tthis.w /= a.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic length() {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\r\n\t}\r\n\r\n\tpublic normalize() {\r\n\r\n\t\tconst length = this.length() || 1;\r\n\r\n\t\tthis.x /= length;\r\n\t\tthis.y /= length;\r\n\t\tthis.z /= length;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic cross( v: Vector | IVector3 ) {\r\n\r\n\t\tconst ax = this.x, ay = this.y, az = this.z;\r\n\t\tconst bx = v.x, by = v.y, bz = v.z;\r\n\r\n\t\tthis.x = ay * bz - az * by;\r\n\t\tthis.y = az * bx - ax * bz;\r\n\t\tthis.z = ax * by - ay * bx;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic dot( v: Vector | IVector3 ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\r\n\t}\r\n\r\n\tpublic applyMatrix3( mat: Matrix ) {\r\n\r\n\t\tconst elm = mat.elm;\r\n\r\n\t\tconst e11 = elm[ 0 ], e12 = elm[ 1 ], e13 = elm[ 2 ],\r\n\t\t\te21 = elm[ 4 ], e22 = elm[ 5 ], e23 = elm[ 6 ],\r\n\t\t\te31 = elm[ 8 ], e32 = elm[ 9 ], e33 = elm[ 10 ];\r\n\r\n\t\t// const xx = this.x * e11 + this.y * e12 + this.z * e13;\r\n\t\t// const yy = this.x * e21 + this.y * e22 + this.z * e23;\r\n\t\t// const zz = this.x * e31 + this.y * e32 + this.z * e33;\r\n\r\n\t\tconst xx = this.x * e11 + this.y * e21 + this.z * e31;\r\n\t\tconst yy = this.x * e12 + this.y * e22 + this.z * e32;\r\n\t\tconst zz = this.x * e13 + this.y * e23 + this.z * e33;\r\n\r\n\t\tthis.x = xx;\r\n\t\tthis.y = yy;\r\n\t\tthis.z = zz;\r\n\t\tthis.w = 0;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic applyMatrix4( mat: Matrix ) {\r\n\r\n\t\tconst elm = mat.elm;\r\n\r\n\t\tconst e11 = elm[ 0 ], e12 = elm[ 1 ], e13 = elm[ 2 ], e14 = elm[ 3 ],\r\n\t\t\te21 = elm[ 4 ], e22 = elm[ 5 ], e23 = elm[ 6 ], e24 = elm[ 7 ],\r\n\t\t\te31 = elm[ 8 ], e32 = elm[ 9 ], e33 = elm[ 10 ], e34 = elm[ 11 ],\r\n\t\t\te41 = elm[ 12 ], e42 = elm[ 13 ], e43 = elm[ 14 ], e44 = elm[ 15 ];\r\n\r\n\t\tconst xx = this.x * e11 + this.y * e21 + this.z * e31 + this.w * e41;\r\n\t\tconst yy = this.x * e12 + this.y * e22 + this.z * e32 + this.w * e42;\r\n\t\tconst zz = this.x * e13 + this.y * e23 + this.z * e33 + this.w * e43;\r\n\t\tconst ww = this.x * e14 + this.y * e24 + this.z * e34 + this.w * e44;\r\n\r\n\t\tthis.x = xx;\r\n\t\tthis.y = yy;\r\n\t\tthis.z = zz;\r\n\t\tthis.w = ww;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic floor() {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\t\tthis.w = Math.floor( this.w );\r\n\r\n\t}\r\n\r\n\tpublic lerp( b: Vector, t: number ) {\r\n\r\n\t\tthis.x = this.x + ( b.x - this.x ) * t;\r\n\t\tthis.y = this.y + ( b.y - this.y ) * t;\r\n\t\tthis.z = this.z + ( b.z - this.z ) * t;\r\n\t\tthis.w = this.w + ( b.w - this.w ) * t;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic copy( a: Vector | Types.Nullable<IVector4> ) {\r\n\r\n\t\tthis.x = a.x ?? 0;\r\n\t\tthis.y = a.y ?? 0;\r\n\t\tthis.z = a.z ?? 0;\r\n\t\tthis.w = a.w ?? 0;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic clone() {\r\n\r\n\t\treturn new Vector( this.x, this.y, this.z, this.w );\r\n\r\n\t}\r\n\r\n\tpublic getElm( type?: 'vec2' | 'vec3' | 'vec4' ) {\r\n\r\n\t\tif ( type == 'vec2' ) {\r\n\r\n\t\t\treturn [ this.x, this.y ];\r\n\r\n\t\t} else if ( type == 'vec3' ) {\r\n\r\n\t\t\treturn [ this.x, this.y, this.z ];\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn [ this.x, this.y, this.z, this.w ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n","import { Vector } from \"./Math/Vector\";\r\nimport { Types } from \"./types\";\r\n\r\ntype ImagePretense = {\r\n\twidth: number,\r\n\theight: number\r\n\tdata?: any\r\n}\r\n\r\nexport type GLPowerTextureSetting = {\r\n\ttype: number,\r\n\tinternalFormat: number,\r\n\tformat: number,\r\n\tmagFilter: number,\r\n\tminFilter: number,\r\n\tgenerateMipmap: boolean,\r\n\twrapS: number,\r\n\twrapT: number,\r\n}\r\n\r\nexport class GLPowerTexture {\r\n\r\n\tpublic unit: number;\r\n\tpublic image: HTMLImageElement | HTMLImageElement[] | ImagePretense | null;\r\n\tpublic size: Vector;\r\n\r\n\tprotected gl: WebGL2RenderingContext;\r\n\tprotected glTex: WebGLTexture | null;\r\n\r\n\tprotected textureType: number;\r\n\tprotected _setting: GLPowerTextureSetting;\r\n\r\n\tconstructor( gl: WebGL2RenderingContext ) {\r\n\r\n\t\tthis.gl = gl;\r\n\t\tthis.image = null;\r\n\t\tthis.unit = 0;\r\n\t\tthis.size = new Vector();\r\n\t\tthis.glTex = this.gl.createTexture();\r\n\r\n\t\tthis._setting = {\r\n\t\t\ttype: this.gl.UNSIGNED_BYTE,\r\n\t\t\tinternalFormat: this.gl.RGBA,\r\n\t\t\tformat: this.gl.RGBA,\r\n\t\t\tmagFilter: this.gl.NEAREST,\r\n\t\t\tminFilter: this.gl.NEAREST,\r\n\t\t\tgenerateMipmap: false,\r\n\t\t\twrapS: this.gl.CLAMP_TO_EDGE,\r\n\t\t\twrapT: this.gl.CLAMP_TO_EDGE,\r\n\t\t};\r\n\r\n\t\tthis.textureType = gl.TEXTURE_2D;\r\n\r\n\t}\r\n\r\n\tpublic get isTexture() {\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tpublic setting( param?: Types.Nullable<GLPowerTextureSetting> ) {\r\n\r\n\t\tthis._setting = {\r\n\t\t\t...this._setting,\r\n\t\t\t...param\r\n\t\t};\r\n\r\n\t\tthis.attach( this.image );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic attach( img: HTMLImageElement | ImagePretense | null | HTMLImageElement[] ) {\r\n\r\n\t\tthis.image = img;\r\n\r\n\t\tthis.gl.bindTexture( this.textureType, this.glTex );\r\n\r\n\t\tif ( this.image ) {\r\n\r\n\t\t\tconst img = Array.isArray( this.image ) ? this.image[ 0 ] : this.image;\r\n\r\n\t\t\tthis.size.set( img.width, img.height );\r\n\r\n\t\t\tif ( img instanceof HTMLImageElement || img instanceof HTMLCanvasElement ) {\r\n\r\n\t\t\t\tthis.gl.texImage2D( this.textureType, 0, this._setting.internalFormat, this._setting.format, this._setting.type, img );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.gl.texImage2D( this.textureType, 0, this._setting.internalFormat, img.width, img.height, 0, this._setting.format, this._setting.type, img.data || null );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.size.set( 1, 1 );\r\n\r\n\t\t\tthis.gl.texImage2D( this.textureType, 0, this._setting.internalFormat, this.size.x, this.size.y, 0, this._setting.format, this._setting.type, null );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this._setting.generateMipmap ) {\r\n\r\n\t\t\tthis.gl.generateMipmap( this.textureType );\r\n\r\n\t\t}\r\n\r\n\t\tthis.gl.texParameteri( this.textureType, this.gl.TEXTURE_MAG_FILTER, this._setting.magFilter );\r\n\t\tthis.gl.texParameteri( this.textureType, this.gl.TEXTURE_MIN_FILTER, this._setting.minFilter );\r\n\t\tthis.gl.texParameterf( this.textureType, this.gl.TEXTURE_WRAP_S, this._setting.wrapS );\r\n\t\tthis.gl.texParameterf( this.textureType, this.gl.TEXTURE_WRAP_T, this._setting.wrapT );\r\n\r\n\t\tthis.gl.bindTexture( this.textureType, null );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic activate( unitNumber: number ) {\r\n\r\n\t\tthis.gl.activeTexture( this.gl.TEXTURE0 + unitNumber );\r\n\t\tthis.gl.bindTexture( this.textureType, this.glTex );\r\n\r\n\t\tthis.unit = unitNumber;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic load( src: string, callBack?: () => void ) {\r\n\r\n\t\tconst img = new Image();\r\n\r\n\t\timg.onload = () => {\r\n\r\n\t\t\tthis.attach( img );\r\n\r\n\t\t\tif ( callBack ) callBack();\r\n\r\n\t\t};\r\n\r\n\t\timg.src = src;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic getTexture() {\r\n\r\n\t\treturn this.glTex;\r\n\r\n\t}\r\n\r\n\tpublic get type() {\r\n\r\n\t\treturn this.textureType;\r\n\r\n\t}\r\n\r\n\tpublic dispose() {\r\n\r\n\t\tthis.gl.deleteTexture( this.glTex );\r\n\r\n\t}\r\n\r\n}\r\n","import { GLPowerTexture } from \"./GLPowerTexture\";\r\nimport { Vector } from \"./Math/Vector\";\r\n\r\nexport type GLPowerFrameBfferOpt = {\r\n\tdisableDepthBuffer?: boolean\r\n}\r\n\r\nexport class GLPowerFrameBuffer {\r\n\r\n\tpublic size: Vector;\r\n\r\n\tpublic gl: WebGL2RenderingContext;\r\n\tpublic glFrameBuffer: WebGLFramebuffer | null;\r\n\r\n\tpublic textures: GLPowerTexture [];\r\n\tpublic depthTexture: GLPowerTexture | null;\r\n\tpublic textureAttachmentList: number[];\r\n\r\n\tconstructor( gl: WebGL2RenderingContext, opt?: GLPowerFrameBfferOpt ) {\r\n\r\n\t\tthis.gl = gl;\r\n\r\n\t\tthis.size = new Vector( 1, 1 );\r\n\r\n\t\tthis.glFrameBuffer = this.gl.createFramebuffer();\r\n\t\tthis.depthTexture = null;\r\n\r\n\t\tthis.textures = [];\r\n\t\tthis.textureAttachmentList = [];\r\n\r\n\t\tif ( ! opt || ! opt.disableDepthBuffer ) {\r\n\r\n\t\t\tthis.setDepthTexture( new GLPowerTexture( this.gl ).setting( {\r\n\t\t\t\tinternalFormat: this.gl.DEPTH_COMPONENT32F,\r\n\t\t\t\tformat: this.gl.DEPTH_COMPONENT,\r\n\t\t\t\ttype: this.gl.FLOAT,\r\n\t\t\t\tmagFilter: this.gl.NEAREST,\r\n\t\t\t\tminFilter: this.gl.NEAREST,\r\n\t\t\t} ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic setDepthTexture( depthTexture: GLPowerTexture | null ) {\r\n\r\n\t\t// depth buffer\r\n\r\n\t\tthis.depthTexture = depthTexture;\r\n\r\n\t\tif ( this.depthTexture ) {\r\n\r\n\t\t\tthis.gl.bindFramebuffer( this.gl.FRAMEBUFFER, this.glFrameBuffer );\r\n\t\t\tthis.gl.framebufferTexture2D( this.gl.FRAMEBUFFER, this.gl.DEPTH_ATTACHMENT, this.gl.TEXTURE_2D, this.depthTexture.getTexture(), 0 );\r\n\t\t\tthis.gl.bindFramebuffer( this.gl.FRAMEBUFFER, null );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic setTexture( textures: GLPowerTexture [] ) {\r\n\r\n\t\tthis.textures = textures;\r\n\t\tthis.textureAttachmentList = [];\r\n\r\n\t\tthis.gl.bindFramebuffer( this.gl.FRAMEBUFFER, this.glFrameBuffer );\r\n\r\n\t\tthis.textures.forEach( ( t, i ) => {\r\n\r\n\t\t\tt.attach( { width: this.size.x, height: this.size.y } );\r\n\r\n\t\t\tconst attachment = this.gl.COLOR_ATTACHMENT0 + i;\r\n\t\t\tthis.gl.framebufferTexture2D( this.gl.FRAMEBUFFER, attachment, this.gl.TEXTURE_2D, t.getTexture(), 0 );\r\n\r\n\t\t\tthis.textureAttachmentList.push( attachment );\r\n\r\n\t\t} );\r\n\r\n\t\tthis.gl.bindFramebuffer( this.gl.FRAMEBUFFER, null );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic setSize( size: Vector ): GLPowerFrameBuffer\r\n\r\n\tpublic setSize( width: number, height: number ) : GLPowerFrameBuffer\r\n\r\n\tpublic setSize( width_size: number | Vector, height?: number ): GLPowerFrameBuffer {\r\n\r\n\t\tif ( typeof width_size == 'number' ) {\r\n\r\n\t\t\tthis.size.x = width_size;\r\n\r\n\t\t\tif ( height !== undefined ) {\r\n\r\n\t\t\t\tthis.size.y = height;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.size.copy( width_size );\r\n\r\n\t\t}\r\n\r\n\t\tthis.size.floor();\r\n\r\n\t\tthis.setTexture( this.textures );\r\n\r\n\t\tthis.textures.forEach( t => {\r\n\r\n\t\t\tt.attach( { width: this.size.x, height: this.size.y } );\r\n\r\n\t\t} );\r\n\r\n\t\tif ( this.depthTexture ) {\r\n\r\n\t\t\tthis.depthTexture.attach( { width: this.size.x, height: this.size.y } );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic getFrameBuffer() {\r\n\r\n\t\treturn this.glFrameBuffer;\r\n\r\n\t}\r\n\r\n\tpublic dispose() {\r\n\r\n\t\tthis.gl.deleteFramebuffer( this.glFrameBuffer );\r\n\r\n\t}\r\n\r\n}\r\n","import { GLPowerTextureCube } from \"./GLPowerTextureCube\";\r\n\r\nimport { GLPowerFrameBfferOpt, GLPowerFrameBuffer } from \".\";\r\n\r\nexport class GLPowerFrameBufferCube extends GLPowerFrameBuffer {\r\n\r\n\tprivate cubeTarget: number[];\r\n\tpublic textures: GLPowerTextureCube [];\r\n\tpublic currentFace: number;\r\n\r\n\tconstructor( gl: WebGL2RenderingContext, opt?: GLPowerFrameBfferOpt ) {\r\n\r\n\t\tsuper( gl, opt );\r\n\r\n\t\tthis.textures = [];\r\n\r\n\t\tthis.cubeTarget = [\r\n\t\t\tthis.gl.TEXTURE_CUBE_MAP_POSITIVE_X,\r\n\t\t\tthis.gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\r\n\t\t\tthis.gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\r\n\t\t\tthis.gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\r\n\t\t\tthis.gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\r\n\t\t\tthis.gl.TEXTURE_CUBE_MAP_NEGATIVE_Z\r\n\t\t];\r\n\r\n\t\tthis.currentFace = this.cubeTarget[ 0 ];\r\n\r\n\t}\r\n\r\n\tpublic setTexture( textures: GLPowerTextureCube [] ) {\r\n\r\n\t\tthis.textures = textures;\r\n\t\tthis.textureAttachmentList = [];\r\n\r\n\t\tthis.textures.forEach( ( t ) => {\r\n\r\n\t\t\tt.attach( { width: this.size.x, height: this.size.y } );\r\n\r\n\t\t} );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic face( face: number ) {\r\n\r\n\t\tthis.gl.bindFramebuffer( this.gl.FRAMEBUFFER, this.glFrameBuffer );\r\n\t\tthis.textureAttachmentList = [];\r\n\r\n\t\tthis.textures.forEach( ( t, i ) => {\r\n\r\n\t\t\tconst attachment = this.gl.COLOR_ATTACHMENT0 + i;\r\n\t\t\tthis.gl.framebufferTexture2D( this.gl.FRAMEBUFFER, attachment, this.cubeTarget[ face ], t.getTexture(), 0 );\r\n\t\t\tthis.textureAttachmentList.push( attachment );\r\n\r\n\t\t} );\r\n\r\n\t\tthis.currentFace = this.cubeTarget[ face ];\r\n\r\n\t\tthis.gl.bindFramebuffer( this.gl.FRAMEBUFFER, null );\r\n\r\n\t}\r\n\r\n\r\n}\r\n","import { GLPowerTexture } from \"./GLPowerTexture\";\r\n\r\ntype ImagePretense = {\r\n\twidth: number,\r\n\theight: number\r\n\tdata?: any\r\n}\r\n\r\nexport class GLPowerTextureCube extends GLPowerTexture {\r\n\r\n\tprivate cubeTarget: number[];\r\n\r\n\tconstructor( gl: WebGL2RenderingContext ) {\r\n\r\n\t\tsuper( gl );\r\n\r\n\t\tthis.textureType = gl.TEXTURE_CUBE_MAP;\r\n\r\n\t\tthis.cubeTarget = [\r\n\t\t\tthis.gl.TEXTURE_CUBE_MAP_POSITIVE_X,\r\n\t\t\tthis.gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\r\n\t\t\tthis.gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\r\n\t\t\tthis.gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\r\n\t\t\tthis.gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\r\n\t\t\tthis.gl.TEXTURE_CUBE_MAP_NEGATIVE_Z\r\n\t\t];\r\n\r\n\t}\r\n\r\n\tpublic attach( img: HTMLImageElement[] | ImagePretense | null ) {\r\n\r\n\t\tthis.image = img;\r\n\r\n\t\tthis.gl.bindTexture( this.textureType, this.glTex );\r\n\r\n\t\tif ( this.image ) {\r\n\r\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\tconst img = Array.isArray( this.image ) ? this.image[ i ] : this.image;\r\n\r\n\t\t\t\tthis.size.set( img.width, img.height );\r\n\r\n\t\t\t\tif ( img instanceof HTMLImageElement || img instanceof HTMLCanvasElement ) {\r\n\r\n\t\t\t\t\tthis.gl.texImage2D( this.cubeTarget[ i ], 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, img );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis.gl.texImage2D( this.cubeTarget[ i ], 0, this._setting.internalFormat, img.width, img.height, 0, this._setting.format, this._setting.type, img.data || null );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this._setting.generateMipmap ) {\r\n\r\n\t\t\tthis.gl.generateMipmap( this.textureType );\r\n\r\n\t\t}\r\n\r\n\t\tthis.gl.texParameteri( this.textureType, this.gl.TEXTURE_MAG_FILTER, this._setting.magFilter );\r\n\t\tthis.gl.texParameteri( this.textureType, this.gl.TEXTURE_MIN_FILTER, this._setting.minFilter );\r\n\t\tthis.gl.texParameterf( this.textureType, this.gl.TEXTURE_WRAP_S, this._setting.wrapS );\r\n\t\tthis.gl.texParameterf( this.textureType, this.gl.TEXTURE_WRAP_T, this._setting.wrapT );\r\n\t\tthis.gl.bindTexture( this.textureType, null );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n","import { GLPowerBuffer } from \"./GLPowerBuffer\";\r\n\r\nexport class GLPowerTransformFeedback {\r\n\r\n\tprivate gl: WebGL2RenderingContext;\r\n\tprivate transformFeedback: WebGLTransformFeedback | null;\r\n\r\n\tprotected feedbackBuffer: Map<string, {buffer: GLPowerBuffer, varyingIndex: number}>;\r\n\r\n\tconstructor( gl: WebGL2RenderingContext ) {\r\n\r\n\t\tthis.gl = gl;\r\n\t\tthis.transformFeedback = this.gl.createTransformFeedback();\r\n\r\n\t\tthis.feedbackBuffer = new Map();\r\n\r\n\t}\r\n\r\n\tpublic bind( cb?: () => void ) {\r\n\r\n\t\tthis.gl.bindTransformFeedback( this.gl.TRANSFORM_FEEDBACK, this.transformFeedback );\r\n\r\n\t\tif ( cb ) cb();\r\n\r\n\t\tthis.gl.bindTransformFeedback( this.gl.TRANSFORM_FEEDBACK, null );\r\n\r\n\t}\r\n\r\n\tpublic setBuffer( name: string, buffer: GLPowerBuffer, varyingIndex: number ) {\r\n\r\n\t\tthis.feedbackBuffer.set( name, {\r\n\t\t\tbuffer,\r\n\t\t\tvaryingIndex\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tpublic use( cb?: ( tf: GLPowerTransformFeedback ) => void ) {\r\n\r\n\t\tthis.bind( () => {\r\n\r\n\t\t\tthis.feedbackBuffer.forEach( fbBuffer => {\r\n\r\n\t\t\t\tthis.gl.bindBufferBase( this.gl.TRANSFORM_FEEDBACK_BUFFER, fbBuffer.varyingIndex, fbBuffer.buffer.buffer );\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tif ( cb ) cb( this );\r\n\r\n\t\t\tthis.feedbackBuffer.forEach( fbBuffer => {\r\n\r\n\t\t\t\tthis.gl.bindBufferBase( this.gl.TRANSFORM_FEEDBACK_BUFFER, fbBuffer.varyingIndex, null );\r\n\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n}\r\n","import { IVector4 } from \"..\";\r\n\r\nimport { Quaternion } from \"./Quaternion\";\r\nimport { IVector3, Vector } from \"./Vector\";\r\n\r\nexport class Matrix {\r\n\r\n\tpublic elm: number[];\r\n\r\n\tconstructor( elm?: number [] ) {\r\n\r\n\t\tthis.elm = [\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1,\r\n\t\t];\r\n\r\n\t\tif ( elm ) {\r\n\r\n\t\t\tthis.set( elm );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic identity() {\r\n\r\n\t\tthis.elm = [\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1,\r\n\t\t];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic clone() {\r\n\r\n\t\treturn new Matrix().copy( this );\r\n\r\n\t}\r\n\r\n\tpublic copy( mat: Matrix ) {\r\n\r\n\t\tthis.set( mat.elm );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic perspective( fov: number, aspect: number, near: number, far: number ) {\r\n\r\n\t\tconst r = 1 / Math.tan( fov * Math.PI / 360 );\r\n\t\tconst d = far - near;\r\n\r\n\t\tthis.elm = [\r\n\t\t\tr / aspect, 0, 0, 0,\r\n\t\t\t0, r, 0, 0,\r\n\t\t\t0, 0, - ( far + near ) / d, - 1,\r\n\t\t\t0, 0, - ( far * near * 2 ) / d, 0\r\n\t\t];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic orthographic( width: number, height: number, near: number, far: number ) {\r\n\r\n\t\tthis.elm = [\r\n\t\t\t2 / width, 0, 0, 0,\r\n\t\t\t0, 2 / height, 0, 0,\r\n\t\t\t0, 0, - 2 / ( far - near ), 0,\r\n\t\t\t0, 0, - ( far + near ) / ( far - near ), 1,\r\n\t\t];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic lookAt( eye: Vector, target: Vector, up: Vector ) {\r\n\r\n\t\tconst zAxis = eye.clone().sub( target ).normalize();\r\n\t\tconst xAxis = up.clone().cross( zAxis ).normalize();\r\n\t\tconst yAxis = zAxis.clone().cross( xAxis ).normalize();\r\n\r\n\t\tthis.elm = [\r\n\t\t\txAxis.x, xAxis.y, xAxis.z, 0,\r\n\t\t\tyAxis.x, yAxis.y, yAxis.z, 0,\r\n\t\t\tzAxis.x, zAxis.y, zAxis.z, 0,\r\n\t\t\teye.x,\r\n\t\t\teye.y,\r\n\t\t\teye.z,\r\n\t\t\t1,\r\n\t\t];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic inverse() {\r\n\r\n\t\tconst a = this.elm[ 0 ], b = this.elm[ 1 ], c = this.elm[ 2 ], d = this.elm[ 3 ],\r\n\t\t\te = this.elm[ 4 ], f = this.elm[ 5 ], g = this.elm[ 6 ], h = this.elm[ 7 ],\r\n\t\t\ti = this.elm[ 8 ], j = this.elm[ 9 ], k = this.elm[ 10 ], l = this.elm[ 11 ],\r\n\t\t\tm = this.elm[ 12 ], n = this.elm[ 13 ], o = this.elm[ 14 ], p = this.elm[ 15 ],\r\n\t\t\tq = a * f - b * e, r = a * g - c * e,\r\n\t\t\ts = a * h - d * e, t = b * g - c * f,\r\n\t\t\tu = b * h - d * f, v = c * h - d * g,\r\n\t\t\tw = i * n - j * m, x = i * o - k * m,\r\n\t\t\ty = i * p - l * m, z = j * o - k * n,\r\n\t\t\tA = j * p - l * n, B = k * p - l * o,\r\n\t\t\tdet = ( q * B - r * A + s * z + t * y - u * x + v * w ),\r\n\t\t\tivd = 1 / det;\r\n\r\n\t\tif ( det == 0 ) return this.identity();\r\n\r\n\t\tthis.elm[ 0 ] = ( f * B - g * A + h * z ) * ivd;\r\n\t\tthis.elm[ 1 ] = ( - b * B + c * A - d * z ) * ivd;\r\n\t\tthis.elm[ 2 ] = ( n * v - o * u + p * t ) * ivd;\r\n\t\tthis.elm[ 3 ] = ( - j * v + k * u - l * t ) * ivd;\r\n\t\tthis.elm[ 4 ] = ( - e * B + g * y - h * x ) * ivd;\r\n\t\tthis.elm[ 5 ] = ( a * B - c * y + d * x ) * ivd;\r\n\t\tthis.elm[ 6 ] = ( - m * v + o * s - p * r ) * ivd;\r\n\t\tthis.elm[ 7 ] = ( i * v - k * s + l * r ) * ivd;\r\n\t\tthis.elm[ 8 ] = ( e * A - f * y + h * w ) * ivd;\r\n\t\tthis.elm[ 9 ] = ( - a * A + b * y - d * w ) * ivd;\r\n\t\tthis.elm[ 10 ] = ( m * u - n * s + p * q ) * ivd;\r\n\t\tthis.elm[ 11 ] = ( - i * u + j * s - l * q ) * ivd;\r\n\t\tthis.elm[ 12 ] = ( - e * z + f * x - g * w ) * ivd;\r\n\t\tthis.elm[ 13 ] = ( a * z - b * x + c * w ) * ivd;\r\n\t\tthis.elm[ 14 ] = ( - m * t + n * r - o * q ) * ivd;\r\n\t\tthis.elm[ 15 ] = ( i * t - j * r + k * q ) * ivd;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic transpose() {\r\n\r\n\t\tconst e11 = this.elm[ 0 ], e12 = this.elm[ 1 ], e13 = this.elm[ 2 ], e14 = this.elm[ 3 ],\r\n\t\t\te21 = this.elm[ 4 ], e22 = this.elm[ 5 ], e23 = this.elm[ 6 ], e24 = this.elm[ 7 ],\r\n\t\t\te31 = this.elm[ 8 ], e32 = this.elm[ 9 ], e33 = this.elm[ 10 ], e34 = this.elm[ 11 ],\r\n\t\t\te41 = this.elm[ 12 ], e42 = this.elm[ 13 ], e43 = this.elm[ 14 ], e44 = this.elm[ 15 ];\r\n\r\n\t\tthis.elm[ 0 ] = e11; this.elm[ 1 ] = e21; this.elm[ 2 ] = e31; this.elm[ 3 ] = e41;\r\n\t\tthis.elm[ 4 ] = e12; this.elm[ 5 ] = e22; this.elm[ 6 ] = e32; this.elm[ 7 ] = e42;\r\n\t\tthis.elm[ 8 ] = e13; this.elm[ 9 ] = e23; this.elm[ 10 ] = e33; this.elm[ 11 ] = e43;\r\n\t\tthis.elm[ 12 ] = e14; this.elm[ 13 ] = e24; this.elm[ 14 ] = e34; this.elm[ 15 ] = e44;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic set( elm: number[] ) {\r\n\r\n\t\tfor ( let i = 0; i < this.elm.length; i ++ ) {\r\n\r\n\t\t\tthis.elm[ i ] = elm[ i ] ?? 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic setFromTransform( pos: IVector3, qua: Quaternion | IVector4, scale: IVector3 ) {\r\n\r\n\t\tthis.identity();\r\n\r\n\t\tthis.applyPosition( pos );\r\n\r\n\t\tthis.applyQuaternion( qua );\r\n\r\n\t\tthis.applyScale( scale );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic applyPosition( position: IVector3 ) {\r\n\r\n\t\tthis.matmul( [\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\tposition.x, position.y, position.z, 1\r\n\t\t] );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic applyQuaternion( q: Quaternion | IVector4 ) {\r\n\r\n\t\tconst x = q.x, y = q.y, z = q.z, w = q.w;\r\n\t\tconst xx = x * x, yy = y * y, zz = z * z, ww = w * w;\r\n\t\tconst xy = x * y, xz = x * z, xw = x * w, yz = y * z, yw = y * w, zw = z * w;\r\n\r\n\t\tthis.matmul( [\r\n\t\t\txx - yy - zz + ww,\r\n\t\t\t2 * ( xy + zw ),\r\n\t\t\t2 * ( xz - yw ),\r\n\t\t\t0,\r\n\r\n\t\t\t2 * ( xy - zw ),\r\n\t\t\t- xx + yy - zz + ww,\r\n\t\t\t2 * ( yz + xw ),\r\n\t\t\t0,\r\n\r\n\t\t\t2 * ( xz + yw ),\r\n\t\t\t2 * ( yz - xw ),\r\n\t\t\t- xx - yy + zz + ww,\r\n\r\n\t\t\t0, 0, 0, 0, 1\r\n\t\t] );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic applyScale( scale: IVector3 ) {\r\n\r\n\t\tthis.matmul( [\r\n\t\t\tscale.x, 0, 0, 0,\r\n\t\t\t0, scale.y, 0, 0,\r\n\t\t\t0, 0, scale.z, 0,\r\n\t\t\t0, 0, 0, 1\r\n\t\t] );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tprotected matmul( elm2: number[] ) {\r\n\r\n\t\tconst dist = new Array( 16 );\r\n\r\n\t\tfor ( let i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\tfor ( let j = 0; j < 4; j ++ ) {\r\n\r\n\t\t\t\tlet sum = 0;\r\n\r\n\t\t\t\tfor ( let k = 0; k < 4; k ++ ) {\r\n\r\n\t\t\t\t\tsum += this.elm[ k * 4 + j ] * elm2[ k + i * 4 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdist[ j + i * 4 ] = sum;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.elm = dist;\r\n\r\n\t}\r\n\r\n\tpublic setRotationFromDirection( direction: IVector3, up?: IVector3 ) {\r\n\r\n\t\tup = up || { x: 0, y: 1, z: 0 };\r\n\r\n\t\tconst zAxis = new Vector().copy( direction ).normalize();\r\n\t\tconst xAxis = new Vector().copy( up ).cross( zAxis ).normalize();\r\n\r\n\t\tif ( xAxis.length() == 0.0 ) {\r\n\r\n\t\t\tzAxis.x += 0.001;\r\n\r\n\t\t\txAxis.copy( up ).cross( zAxis ).normalize();\r\n\r\n\t\t}\r\n\r\n\t\tconst yAxis = zAxis.clone().cross( xAxis ).normalize();\r\n\r\n\t\tthis.set( [\r\n\t\t\txAxis.x, xAxis.y, xAxis.z, 0,\r\n\t\t\tyAxis.x, yAxis.y, yAxis.z, 0,\r\n\t\t\tzAxis.x, zAxis.y, zAxis.z, 0,\r\n\t\t\t0, 0, 0, 1,\r\n\t\t] );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeRotationAxis( axis: IVector3, angle: number ) {\r\n\r\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\r\n\t\tconst c = Math.cos( angle );\r\n\t\tconst s = Math.sin( angle );\r\n\t\tconst t = 1 - c;\r\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\r\n\t\tconst tx = t * x, ty = t * y;\r\n\r\n\t\tthis.set(\r\n\t\t\t[\r\n\t\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\t\t]\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic multiply( m: Matrix ) {\r\n\r\n\t\tthis.matmul( m.elm );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic preMultiply( m: Matrix ) {\r\n\r\n\t\tconst tmp = this.copyToArray( [] );\r\n\r\n\t\tthis.set( m.elm );\r\n\r\n\t\tthis.matmul( tmp );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic decompose( pos?: IVector3, rot?: Quaternion, scale?: IVector3 ) {\r\n\r\n\t\tif ( pos ) {\r\n\r\n\t\t\tpos.x = this.elm[ 12 ];\r\n\t\t\tpos.y = this.elm[ 13 ];\r\n\t\t\tpos.z = this.elm[ 14 ];\r\n\r\n\t\t}\r\n\r\n\t\tif ( rot ) {\r\n\r\n\t\t\trot.setFromMatrix( this );\r\n\r\n\t\t}\r\n\r\n\t\tif ( scale ) {\r\n\r\n\t\t\t// todo\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic copyToArray( array: number[] ) {\r\n\r\n\t\tarray.length = this.elm.length;\r\n\r\n\t\tfor ( let i = 0; i < this.elm.length; i ++ ) {\r\n\r\n\t\t\tarray[ i ] = this.elm[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n}\r\n","import { Types } from \"../types\";\r\n\r\nimport { Matrix } from \"./Matrix\";\r\nimport { Quaternion } from \"./Quaternion\";\r\nimport { IVector4, Vector } from \"./Vector\";\r\n\r\nexport type EulerOrder = 'XYZ' | 'XZY' | 'ZYX' | 'YZX'\r\n\r\nexport class Euler extends Vector {\r\n\r\n\tpublic order: EulerOrder;\r\n\r\n\tconstructor( x?: number | undefined, y?: number | undefined, z?: number | undefined, order?: EulerOrder ) {\r\n\r\n\t\tsuper( x, y, z, 0 );\r\n\r\n\t\tthis.order = order || 'XYZ';\r\n\r\n\t}\r\n\r\n\tpublic copy( a: Vector | Types.Nullable<IVector4> | Euler ): this {\r\n\r\n\t\tif ( \"order\" in a ) {\r\n\r\n\t\t\tthis.order = a.order;\r\n\r\n\t\t}\r\n\r\n\t\treturn super.copy( a );\r\n\r\n\t}\r\n\r\n\tpublic setFromQuaternion( q: Quaternion ) {\r\n\r\n\t\tconst matrix = new Matrix().applyQuaternion( q );\r\n\r\n\t\tthis.setFromRotationMatrix( matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic setFromRotationMatrix( m: Matrix ) {\r\n\r\n\t\tconst te = m.elm;\r\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\tthis.order = 'XYZ';\r\n\r\n\t\tthis.y = Math.asin( Math.min( 1.0, Math.max( - 1.0, m13 ) ) );\r\n\r\n\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\r\n\r\n\t\t\tthis.x = Math.atan2( - m23, m33 );\r\n\t\t\tthis.z = Math.atan2( - m12, m11 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = Math.atan2( m32, m22 );\r\n\t\t\tthis.z = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n","import { IVector3, IVector4, Matrix, Types } from \"..\";\r\n\r\nimport { Euler, EulerOrder } from \"./Euler\";\r\nimport { Vector } from \"./Vector\";\r\n\r\nexport type Quat = {\r\n\tx: number,\r\n\ty: number,\r\n\tz: number\r\n}\r\n\r\nexport class Quaternion {\r\n\r\n\tpublic x: number;\r\n\tpublic y: number;\r\n\tpublic z: number;\r\n\tpublic w: number;\r\n\r\n\tpublic updated: boolean = false;\r\n\r\n\tconstructor( x?: number, y?: number, z?: number, w?: number ) {\r\n\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\t\tthis.z = 0;\r\n\t\tthis.w = 1;\r\n\r\n\t\tthis.set( x, y, z, w );\r\n\r\n\t}\r\n\r\n\tpublic set( x?: number, y?: number, z?: number, w?: number ) {\r\n\r\n\t\tthis.x = x ?? this.x;\r\n\t\tthis.y = y ?? this.y;\r\n\t\tthis.z = z ?? this.z;\r\n\t\tthis.w = w ?? this.w;\r\n\r\n\t\tthis.updated = true;\r\n\r\n\t}\r\n\r\n\tpublic setFromEuler( euler: Vector | Euler | IVector3, orverrideOrder?: EulerOrder ) {\r\n\r\n\t\tconst order = orverrideOrder || ( 'order' in euler ? euler.order : 'XYZ' );\r\n\r\n\t\tconst sx = Math.sin( euler.x / 2 );\r\n\t\tconst sy = Math.sin( euler.y / 2 );\r\n\t\tconst sz = Math.sin( euler.z / 2 );\r\n\r\n\t\tconst cx = Math.cos( euler.x / 2 );\r\n\t\tconst cy = Math.cos( euler.y / 2 );\r\n\t\tconst cz = Math.cos( euler.z / 2 );\r\n\r\n\t\tif ( order == 'XYZ' ) {\r\n\r\n\t\t\tthis.x = cx * sy * sz + sx * cy * cz;\r\n\t\t\tthis.y = - sx * cy * sz + cx * sy * cz;\r\n\t\t\tthis.z = cx * cy * sz + sx * sy * cz;\r\n\t\t\tthis.w = - sx * sy * sz + cx * cy * cz;\r\n\r\n\t\t} else if ( order == 'XZY' ) {\r\n\r\n\t\t\tthis.x = - cx * sy * sz + sx * cy * cz;\r\n\t\t\tthis.y = cx * sy * cz - sx * cy * sz;\r\n\t\t\tthis.z = sx * sy * cz + cx * cy * sz;\r\n\t\t\tthis.w = sx * sy * sz + cx * cy * cz;\r\n\r\n\t\t} else if ( order == 'YZX' ) {\r\n\r\n\t\t\tthis.x = sx * cy * cz + cx * sy * sz;\r\n\t\t\tthis.y = sx * cy * sz + cx * sy * cz;\r\n\t\t\tthis.z = - sx * sy * cz + cx * cy * sz;\r\n\t\t\tthis.w = - sx * sy * sz + cx * cy * cz;\r\n\r\n\t\t} else if ( order == 'ZYX' ) {\r\n\r\n\t\t\tthis.x = sx * cy * cz - cx * sy * sz;\r\n\t\t\tthis.y = sx * cy * sz + cx * sy * cz;\r\n\t\t\tthis.z = - sx * sy * cz + cx * cy * sz;\r\n\t\t\tthis.w = sx * sy * sz + cx * cy * cz;\r\n\r\n\t\t}\r\n\r\n\t\tthis.updated = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// http://marupeke296.sakura.ne.jp/DXG_No58_RotQuaternionTrans.html\r\n\r\n\tpublic setFromMatrix( matrix: Matrix ) {\r\n\r\n\t\tconst elm = matrix.elm;\r\n\r\n\t\tconst trace = elm[ 0 ] + elm[ 5 ] + elm[ 10 ];\r\n\t\tlet qx, qy, qz, qw;\r\n\r\n\t\tif ( trace > 0 ) {\r\n\r\n\t\t\tconst s = Math.sqrt( trace + 1.0 ) * 2;\r\n\t\t\tqw = 0.25 * s;\r\n\t\t\tqx = ( elm[ 6 ] - elm[ 9 ] ) / s;\r\n\t\t\tqy = ( elm[ 8 ] - elm[ 2 ] ) / s;\r\n\t\t\tqz = ( elm[ 1 ] - elm[ 4 ] ) / s;\r\n\r\n\t\t} else if ( elm[ 0 ] > elm[ 5 ] && elm[ 0 ] > elm[ 10 ] ) {\r\n\r\n\t\t\tconst s = Math.sqrt( 1.0 + elm[ 0 ] - elm[ 5 ] - elm[ 10 ] ) * 2;\r\n\t\t\tqw = ( elm[ 6 ] - elm[ 9 ] ) / s;\r\n\t\t\tqx = 0.25 * s;\r\n\t\t\tqy = ( elm[ 1 ] + elm[ 4 ] ) / s;\r\n\t\t\tqz = ( elm[ 2 ] + elm[ 8 ] ) / s;\r\n\r\n\t\t} else if ( elm[ 5 ] > elm[ 10 ] ) {\r\n\r\n\t\t\tconst s = Math.sqrt( 1.0 + elm[ 5 ] - elm[ 0 ] - elm[ 10 ] ) * 2;\r\n\t\t\tqw = ( elm[ 8 ] - elm[ 2 ] ) / s;\r\n\t\t\tqx = ( elm[ 1 ] + elm[ 4 ] ) / s;\r\n\t\t\tqy = 0.25 * s;\r\n\t\t\tqz = ( elm[ 6 ] + elm[ 9 ] ) / s;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst s = Math.sqrt( 1.0 + elm[ 10 ] - elm[ 0 ] - elm[ 5 ] ) * 2;\r\n\t\t\tqw = ( elm[ 1 ] - elm[ 4 ] ) / s;\r\n\t\t\tqx = ( elm[ 2 ] + elm[ 8 ] ) / s;\r\n\t\t\tqy = ( elm[ 6 ] + elm[ 9 ] ) / s;\r\n\t\t\tqz = 0.25 * s;\r\n\r\n\t\t}\r\n\r\n\t\tconst length = Math.sqrt( qx * qx + qy * qy + qz * qz + qw * qw );\r\n\t\tqx /= length;\r\n\t\tqy /= length;\r\n\t\tqz /= length;\r\n\t\tqw /= length;\r\n\r\n\t\tthis.x = qx;\r\n\t\tthis.y = qy;\r\n\t\tthis.z = qz;\r\n\t\tthis.w = qw;\r\n\r\n\t\tthis.updated = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic multiply( q: Quaternion ) {\r\n\r\n\t\tconst w = this.w * q.w - this.x * q.x - this.y * q.y - this.z * q.z;\r\n\t\tconst x = this.w * q.x + this.x * q.w + this.y * q.z - this.z * q.y;\r\n\t\tconst y = this.w * q.y - this.x * q.z + this.y * q.w + this.z * q.x;\r\n\t\tconst z = this.w * q.z + this.x * q.y - this.y * q.x + this.z * q.w;\r\n\r\n\t\tthis.set( x, y, z, w );\r\n\r\n\t\tthis.updated = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic inverse() {\r\n\r\n\t\tthis.set( - this.x, - this.y, - this.z, this.w );\r\n\r\n\t\tthis.updated = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic copy( a: Quaternion | Types.Nullable<IVector4> ) {\r\n\r\n\t\tthis.x = a.x ?? 0;\r\n\t\tthis.y = a.y ?? 0;\r\n\t\tthis.z = a.z ?? 0;\r\n\t\tthis.w = a.w ?? 0;\r\n\r\n\t\tthis.updated = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic clone() {\r\n\r\n\t\treturn new Quaternion( this.x, this.y, this.z, this.w );\r\n\r\n\t}\r\n\r\n}\r\n","import { Vector } from \"..\";\r\n\r\nexport namespace Maths {\r\n\r\n\texport const randomSeed = ( s: number ) => {\r\n\r\n\t\t// Xorshift128 (init seed with Xorshift32)\r\n\t\ts ^= s << 13; s ^= 2 >>> 17; s ^= s << 5;\r\n\t\tlet x = 123456789 ^ s;\r\n\t\ts ^= s << 13; s ^= 2 >>> 17; s ^= s << 5;\r\n\t\tlet y = 362436069 ^ s;\r\n\t\ts ^= s << 13; s ^= 2 >>> 17; s ^= s << 5;\r\n\t\tlet z = 521288629 ^ s;\r\n\t\ts ^= s << 13; s ^= 2 >>> 17; s ^= s << 5;\r\n\t\tlet w = 88675123 ^ s;\r\n\t\tlet t;\r\n\r\n\t\tconst random = () => {\r\n\r\n\t\t\tt = x ^ ( x << 11 );\r\n\t\t\tx = y; y = z; z = w;\r\n\t\t\t// >>>0 means 'cast to uint32'\r\n\t\t\tw = ( ( w ^ ( w >>> 19 ) ) ^ ( t ^ ( t >>> 8 ) ) ) >>> 0;\r\n\t\t\treturn w / 0x100000000;\r\n\r\n\t\t};\r\n\r\n\t\treturn random;\r\n\r\n\t};\r\n\r\n\texport const randomRange = ( a: number = - 1, b: number = 1 ) => {\r\n\r\n\t\treturn a + Math.random() * ( b - a );\r\n\r\n\t};\r\n\r\n\texport const randomVector = ( a: Vector = new Vector( - 1, - 1, - 1, - 1 ), b: Vector = new Vector( 1, 1, 1, 1 ) ) => {\r\n\r\n\t\treturn new Vector(\r\n\t\t\trandomRange( a.x, b.x ),\r\n\t\t\trandomRange( a.y, b.y ),\r\n\t\t\trandomRange( a.z, b.z ),\r\n\t\t\trandomRange( a.w, b.w ),\r\n\t\t);\r\n\r\n\t};\r\n\r\n}\r\n","\r\ntype ListenerFunction = Function;\r\n\r\ntype Listener = {\r\n\tevent: string,\r\n\tcb: ListenerFunction;\r\n\tonce?: boolean\r\n}\r\n\r\nexport class EventEmitter {\r\n\r\n\tprivate listeners: Listener[];\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.listeners = [];\r\n\r\n\t}\r\n\r\n\tpublic on( event: string, cb: ListenerFunction ) {\r\n\r\n\t\tthis.listeners.push( {\r\n\t\t\tevent,\r\n\t\t\tcb\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tpublic once( event: string, cb: ListenerFunction ) {\r\n\r\n\t\tthis.listeners.push( {\r\n\t\t\tevent,\r\n\t\t\tcb,\r\n\t\t\tonce: true\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tpublic off( event: string, cb?: ListenerFunction ) {\r\n\r\n\t\tthis.listeners = this.listeners.filter( l => {\r\n\r\n\t\t\tif ( cb == undefined ) {\r\n\r\n\t\t\t\treturn ! ( l.event == event );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn ! ( l.event == event && l.cb == cb );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tpublic emit( event: string, args?: any[] ) {\r\n\r\n\t\tconst tmpListener = this.listeners.concat();\r\n\r\n\t\tfor ( let i = 0; i < tmpListener.length; i ++ ) {\r\n\r\n\t\t\tconst listener = tmpListener[ i ];\r\n\r\n\t\t\tif ( listener.event == event ) {\r\n\r\n\t\t\t\tlistener.cb.apply( this, args || [] );\r\n\r\n\t\t\t\tif ( listener.once ) {\r\n\r\n\t\t\t\t\tthis.off( event, listener.cb );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic hasEvent( event: string ) {\r\n\r\n\t\treturn this.listeners.some( l => l.event == event );\r\n\r\n\t}\r\n\r\n}\r\n","\n/*-------------------------------\n\t\tBezier\n-------------------------------*/\n\nexport namespace Bezier {\n\n\texport type BezierControlPoints = {\n\t\tp0: number;\n\t\tp1: number;\n\t\tp2: number;\n\t\tp3: number;\n\t}\n\n\t// inspired https://github.com/gre/bezier-easing/blob/master/src/index.js and https://github.com/0b5vr/automaton/blob/872420e798d9054d4a7a06c972cbb4261a67b4bc/src/bezierEasing.ts\n\n\texport const NEWTON_ITERATIONS = 4;\n\texport const NEWTON_MIN_SLOPE = 0.001;\n\texport const SUBDIVISION_PRECISION = 0.0000001;\n\texport const SUBDIVISION_MAX_ITERATIONS = 10;\n\texport const BEZIER_EASING_CACHE_SIZE = 11;\n\texport const BEZIER_EASING_SAMPLE_STEP_SIZE = 1.0 / BEZIER_EASING_CACHE_SIZE;\n\n\tfunction calcBezierA( p: BezierControlPoints ) {\n\n\t\treturn - p.p0 + 3.0 * p.p1 - 3.0 * p.p2 + p.p3;\n\n\t}\n\tfunction calcBezierB( p: BezierControlPoints ) {\n\n\t\treturn 3.0 * p.p0 - 6.0 * p.p1 + 3.0 * p.p2;\n\n\t}\n\tfunction calcBezierC( p: BezierControlPoints ) {\n\n\t\treturn - 3.0 * p.p0 + 3.0 * p.p1;\n\n\t}\n\n\texport function calcBezierSlope( p: BezierControlPoints, t: number ) {\n\n\t\treturn 3.0 * calcBezierA( p ) * t * t + 2.0 * calcBezierB( p ) * t + calcBezierC( p );\n\n\t}\n\n\texport function calcBezier( p: BezierControlPoints, t: number ) {\n\n\t\treturn ( ( calcBezierA( p ) * t + calcBezierB( p ) ) * t + calcBezierC( p ) ) * t + p.p0;\n\n\t}\n\n\tfunction subdiv( x: number, startT: number, endT: number, p: BezierControlPoints ) {\n\n\t\tlet currentX = 0;\n\t\tlet currentT = 0;\n\n\t\tfor ( let i = 0; i < SUBDIVISION_MAX_ITERATIONS; i ++ ) {\n\n\t\t\tcurrentT = startT + ( endT - startT ) / 2;\n\t\t\tcurrentX = calcBezier( p, currentT );\n\n\t\t\tif ( currentX > x ) {\n\n\t\t\t\tendT = currentT;\n\n\t\t\t} else {\n\n\t\t\t\tstartT = currentT;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn currentT;\n\n\t}\n\n\tfunction newton( x:number, p: BezierControlPoints, t: number ) {\n\n\t\tfor ( let i = 0; i < NEWTON_ITERATIONS; i ++ ) {\n\n\t\t\tconst slope = calcBezierSlope( p, t );\n\n\t\t\tif ( slope == 0.0 ) {\n\n\t\t\t\treturn t;\n\n\t\t\t}\n\n\t\t\tconst currentX = ( calcBezier( p, t ) ) - x;\n\t\t\tt -= currentX / slope;\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\texport function getBezierTfromX( p: BezierControlPoints, x: number, cache: number[] ) {\n\n\t\tp.p1 = Math.max( p.p0, Math.min( p.p3, p.p1 ) );\n\t\tp.p2 = Math.max( p.p0, Math.min( p.p3, p.p2 ) );\n\n\t\tlet sample = 0;\n\n\t\tfor ( let i = 1; i < cache.length; i ++ ) {\n\n\t\t\tsample = i - 1;\n\t\t\tif ( x < cache[ i ] ) break;\n\n\t\t}\n\n\t\tconst t = sample / ( BEZIER_EASING_CACHE_SIZE - 1.0 );\n\t\tconst diff = calcBezierSlope( p, t ) / ( p.p3 - p.p0 );\n\n\t\tif ( diff == 0.0 ) {\n\n\t\t\treturn t;\n\n\t\t} else if ( diff > 0.01 ) {\n\n\t\t\treturn newton( x, p, t );\n\n\t\t} else {\n\n\t\t\treturn subdiv( x, t, t + BEZIER_EASING_SAMPLE_STEP_SIZE, p );\n\n\t\t}\n\n\n\t}\n\n}\n","import { IVector2 } from \"..\";\n\nimport { Bezier } from \"./Bezier\";\n\nexport type EasingFunc = ( t: number ) => any\n\nexport namespace Easings {\n\n\texport function sigmoid( weight: number = 6 ): EasingFunc {\n\n\t\treturn ( x: number ) => {\n\n\t\t\tconst e1 = Math.exp( - weight * ( 2 * x - 1 ) );\n\t\t\tconst e2 = Math.exp( - weight );\n\n\t\t\treturn ( 1 + ( 1 - e1 ) / ( 1 + e1 ) * ( 1 + e2 ) / ( 1 - e2 ) ) / 2;\n\n\t\t};\n\n\t}\n\n\texport function smoothstep( min: number, max: number, value: number ): number {\n\n\t\tconst x = Math.max( 0, Math.min( 1, ( value - min ) / ( max - min ) ) );\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t}\n\n\t/*\n\t@auther https://gist.github.com/gre/1650294\n\t*/\n\n\texport function linear( t: number ) {\n\n\t\treturn t;\n\n\t}\n\n\texport function easeInQuad( t: number ) {\n\n\t\treturn t * t;\n\n\t}\n\n\texport function easeOutQuad( t: number ) {\n\n\t\treturn t * ( 2 - t );\n\n\t}\n\n\texport function easeInOutQuad( t: number ) {\n\n\t\treturn t < .5 ? 2 * t * t : - 1 + ( 4 - 2 * t ) * t;\n\n\t}\n\n\texport function easeInCubic( t: number ) {\n\n\t\treturn t * t * t;\n\n\t}\n\n\texport function easeOutCubic( t: number ) {\n\n\t\treturn ( -- t ) * t * t + 1;\n\n\t}\n\n\texport function easeInOutCubic( t: number ) {\n\n\t\treturn t < .5 ? 4 * t * t * t : ( t - 1 ) * ( 2 * t - 2 ) * ( 2 * t - 2 ) + 1;\n\n\t}\n\n\texport function easeInQuart( t: number ) {\n\n\t\treturn t * t * t * t;\n\n\t}\n\n\texport function easeOutQuart( t: number ) {\n\n\t\treturn 1 - ( -- t ) * t * t * t;\n\n\t}\n\n\texport function easeInOutQuart( t: number ) {\n\n\t\treturn t < .5 ? 8 * t * t * t * t : 1 - 8 * ( -- t ) * t * t * t;\n\n\t}\n\n\texport function easeInQuint( t: number ) {\n\n\t\treturn t * t * t * t * t;\n\n\t}\n\n\texport function easeOutQuint( t: number ) {\n\n\t\treturn 1 + ( -- t ) * t * t * t * t;\n\n\t}\n\n  \texport function easeInOutQuint( t: number ) {\n\n  \t\treturn t < .5 ? 16 * t * t * t * t * t : 1 + 16 * ( -- t ) * t * t * t * t;\n\n  \t}\n\n\texport function bezier( c1: IVector2, h1: IVector2, h2: IVector2, c2: IVector2 ): EasingFunc {\n\n\t\tconst cache = new Array( Bezier.BEZIER_EASING_CACHE_SIZE );\n\n\t\tfor ( let i = 0; i < Bezier.BEZIER_EASING_CACHE_SIZE; ++ i ) {\n\n\t\t\tcache[ i ] = Bezier.calcBezier( { p0: c1.x, p1: h1.x, p2: h2.x, p3: c2.x }, i / ( Bezier.BEZIER_EASING_CACHE_SIZE - 1.0 ) );\n\n\t\t}\n\n\t\treturn ( x: number ) => {\n\n\t\t\tif ( x <= c1.x ) return c1.y;\n\t\t\tif ( c2.x <= x ) return c2.y;\n\n\t\t\treturn Bezier.calcBezier( { p0: c1.y, p1: h1.y, p2: h2.y, p3: c2.y }, Bezier.getBezierTfromX( { p0: c1.x, p1: h1.x, p2: h2.x, p3: c2.x }, x, cache ) );\n\n\t\t};\n\n\t}\n\n\texport function cubicBezier( h1X: number, h1Y: number, h2X: number, h2Y: number ) {\n\n\t\treturn bezier(\n\t\t\t{ x: 0.0, y: 0.0 },\n\t\t\t{ x: h1X, y: h1Y },\n\t\t\t{ x: h2X, y: h2Y },\n\t\t\t{ x: 1.0, y: 1.0 },\n\t\t);\n\n\t}\n\n}\n","import { Vector } from \"../Math/Vector\";\n\nexport declare interface LerpFunc<T>{\n\t( a: T, b: T, t: number ): T;\n}\n\nexport namespace Lerps {\n\n\texport const number: LerpFunc<number> = ( a: number, b: number, t: number ) => {\n\n\t\treturn a + ( b - a ) * t;\n\n\t};\n\n\texport const vector: LerpFunc<Vector> = ( a: Vector, b: Vector, t: number ) =>{\n\n\t\treturn a.lerp( b, t );\n\n\t};\n\n}\n","import { UniformType } from \"../GLPowerProgram\";\nimport { Vector } from \"../Math/Vector\";\nimport { EventEmitter } from \"../utils/EventEmitter\";\n\nimport { EasingFunc, Easings } from \"./Easings\";\nimport { LerpFunc, Lerps } from \"./Lerps\";\n\nexport type AnimatorVariableType = Vector | number;\n\nexport declare interface AnimatorVariable<T>{\n\ttime: number;\n\tduration: number;\n\tvalue: T;\n\ttype: UniformType;\n\tvalueStart: T;\n\tvalueEnd: T;\n\teasingFunc: EasingFunc;\n\tlerpFunc: LerpFunc<T>;\n\tanimating: boolean\n\tonFinish?: () => void,\n\tuserData?: any;\n}\n\nconst getClone = ( target: AnimatorVariableType ) => {\n\n\tif ( typeof target == \"number\" ) {\n\n\t\treturn target;\n\n\t} else if ( \"clone\" in target ) {\n\n\t\treturn target.clone();\n\n\t}\n\n\treturn target;\n\n};\n\nconst getCopy = ( target: AnimatorVariableType, source:AnimatorVariableType ) => {\n\n\tif ( typeof target == \"number\" ) {\n\n\t\treturn source;\n\n\t} else if ( \"clone\" in target && typeof source != 'number' ) {\n\n\t\treturn target.copy( source );\n\n\t}\n\n\treturn source;\n\n};\n\nconst getLerpFunc = <T extends AnimatorVariableType>( value: T ):LerpFunc<T> => {\n\n\tif ( typeof value == \"number\" ) {\n\n\t\treturn Lerps.number as any;\n\n\t} else {\n\n\n\t\treturn Lerps.vector as any;\n\n\t}\n\n};\n\nconst getUniformsType = ( value: AnimatorVariableType ) => {\n\n\tif ( typeof value == 'number' ) {\n\n\t\treturn \"1f\";\n\n\t} else {\n\n\t\treturn \"4fv\";\n\n\t}\n\n};\n\nexport class Animator extends EventEmitter {\n\n\tprotected variables: Map<string, AnimatorVariable<AnimatorVariableType>>;\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.variables = new Map();\n\n\t}\n\n\tpublic add( name: string, init: AnimatorVariableType, easing: EasingFunc = Easings.easeInOutCubic, type?: UniformType ) {\n\n\t\tthis.variables.set( name, {\n\t\t\ttime: 0,\n\t\t\tduration: 1,\n\t\t\tvalue: init,\n\t\t\tvalueStart: getClone( init ),\n\t\t\tvalueEnd: getClone( init ),\n\t\t\teasingFunc: easing,\n\t\t\tlerpFunc: getLerpFunc( init ),\n\t\t\tanimating: false,\n\t\t\ttype: getUniformsType( init ) || type,\n\t\t} );\n\n\t}\n\n\tpublic get<T extends AnimatorVariableType>( name: string ): AnimatorVariable<T> | null {\n\n\t\treturn this.variables.get( name ) ?? null as any;\n\n\t}\n\n\tpublic getValue<T extends AnimatorVariableType>( name: string ): T | null {\n\n\t\tconst val = this.get<T>( name );\n\n\t\tif ( val === null ) return null;\n\n\t\treturn val.value;\n\n\t}\n\n\tpublic cancel( name: string ) {\n\n\t\tconst v = this.variables.get( name );\n\n\t\tif ( ! v ) return;\n\n\t\tv.animating = false;\n\n\t}\n\n\tpublic animate( name: string, value: AnimatorVariableType, duration: number = 1, cb?: () => void ) {\n\n\t\tconst v = this.variables.get( name );\n\n\t\tif ( ! v ) return;\n\n\t\tv.animating = true;\n\t\tv.valueStart = getCopy( v.valueStart, v.value );\n\t\tv.valueEnd = getCopy( v.valueEnd, value );\n\t\tv.duration = duration;\n\t\tv.onFinish = cb;\n\t\tv.time = 0;\n\n\t\tif ( duration === 0 ) {\n\n\t\t\tv.animating = false;\n\t\t\tv.value = getCopy( v.value, value );\n\t\t\tv.onFinish && v.onFinish();\n\n\t\t}\n\n\t}\n\n\tpublic update( deltaTime: number ) {\n\n\t\tthis.variables.forEach( v => {\n\n\t\t\tif ( ! v.animating ) return;\n\n\t\t\tif ( v.time >= 1.0 ) {\n\n\t\t\t\tv.animating = false;\n\t\t\t\tv.time = 1.0;\n\n\t\t\t}\n\n\t\t\tv.value = getCopy( v.value, v.valueStart );\n\t\t\tv.value = v.lerpFunc( v.value, v.valueEnd, v.easingFunc( v.time ) );\n\t\t\tv.time += deltaTime / v.duration;\n\n\t\t\tif ( v.animating == false ) {\n\n\t\t\t\tv.onFinish && v.onFinish();\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n","import { EventEmitter } from '../utils/EventEmitter';\n\r\nimport { FCurveKeyFrame } from './FCurveKeyFrame';\r\n\r\nexport class FCurve extends EventEmitter {\r\n\r\n\tpublic keyframes: FCurveKeyFrame[] = [];\r\n\r\n\tprivate cache: { frame: number, value: number } = { frame: NaN, value: NaN };\r\n\r\n\tpublic frameStart: number;\r\n\tpublic frameEnd: number;\r\n\tpublic frameDuration: number;\r\n\r\n\tconstructor( frames?: FCurveKeyFrame[] ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.frameStart = 0;\r\n\t\tthis.frameEnd = 0;\r\n\t\tthis.frameDuration = 0;\r\n\r\n\t\tthis.set( frames );\r\n\r\n\t}\r\n\r\n\tpublic set( frames?: FCurveKeyFrame[] ) {\r\n\r\n\t\tif ( frames ) {\r\n\r\n\t\t\tthis.keyframes = [];\r\n\r\n\t\t\tframes.forEach( keyframe => {\r\n\r\n\t\t\t\tthis.addKeyFrame( keyframe );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic addKeyFrame( keyframe: FCurveKeyFrame ) {\r\n\r\n\t\tlet index = 0;\r\n\r\n\t\tfor ( let i = 0; i < this.keyframes.length; i ++ ) {\r\n\r\n\t\t\tconst frame = this.keyframes[ i ];\r\n\r\n\t\t\tif ( frame.coordinate.x < keyframe.coordinate.x ) {\r\n\r\n\t\t\t\tindex ++;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.keyframes.splice( index, 0, keyframe );\r\n\r\n\t\t// set frame info\r\n\r\n\t\tthis.frameStart = this.keyframes[ 0 ].coordinate.x;\r\n\t\tthis.frameEnd = this.keyframes[ this.keyframes.length - 1 ].coordinate.x;\r\n\r\n\t}\r\n\r\n\tpublic getValue( frame: number ) {\r\n\r\n\t\tif ( frame == this.cache.frame ) {\r\n\r\n\t\t\treturn this.cache.value;\r\n\r\n\t\t}\r\n\r\n\t\tlet value: number | null = null;\r\n\r\n\t\tfor ( let i = 0; i < this.keyframes.length; i ++ ) {\r\n\r\n\t\t\tconst keyframe = this.keyframes[ i ];\r\n\r\n\t\t\tif ( frame < keyframe.coordinate.x ) {\r\n\r\n\t\t\t\tconst beforeKeyFrame = this.keyframes[ i - 1 ];\r\n\r\n\t\t\t\tif ( beforeKeyFrame ) {\r\n\r\n\t\t\t\t\tvalue = beforeKeyFrame.to( keyframe, frame );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvalue = keyframe.coordinate.y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( value === null && this.keyframes.length > 0 ) {\r\n\r\n\t\t\tvalue = this.keyframes[ this.keyframes.length - 1 ].coordinate.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( value !== null ) {\r\n\r\n\t\t\tthis.cache = {\r\n\t\t\t\tframe: frame,\r\n\t\t\t\tvalue: value\r\n\t\t\t};\r\n\r\n\t\t\treturn value;\r\n\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n}\r\n","import { Types, Vector } from '..';\nimport { EventEmitter } from '../utils/EventEmitter';\n\r\nimport { FCurve } from './FCurve';\r\n\r\nexport class FCurveGroup extends EventEmitter {\r\n\r\n\tpublic name: string;\r\n\r\n\tprivate curves: Map<Types.RecommendString<Types.Axis>, FCurve>;\r\n\r\n\tpublic frameStart: number;\r\n\tpublic frameEnd: number;\r\n\tpublic frameDuration: number;\r\n\tprivate updatedFrame: number = - 1;\r\n\r\n\tpublic value: Vector;\r\n\r\n\tconstructor( name?: string, x?: FCurve, y?: FCurve, z?: FCurve, w?: FCurve ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.name = name || '';\r\n\r\n\t\tthis.frameStart = 0;\r\n\t\tthis.frameEnd = 0;\r\n\t\tthis.frameDuration = 0;\r\n\r\n\t\tthis.curves = new Map();\r\n\r\n\t\tthis.value = new Vector();\r\n\r\n\t\tif ( x ) this.setFCurve( x, 'x' );\r\n\t\tif ( y ) this.setFCurve( y, 'y' );\r\n\t\tif ( z ) this.setFCurve( z, 'z' );\r\n\t\tif ( w ) this.setFCurve( w, 'w' );\r\n\r\n\t}\r\n\r\n\tpublic setFCurve( curve: FCurve, axis: Types.RecommendString<Types.Axis> ) {\r\n\r\n\t\tthis.curves.set( axis, curve );\r\n\r\n\t\tlet minStart = Infinity;\r\n\t\tlet maxEnd = - Infinity;\r\n\r\n\t\tthis.curves.forEach( curve => {\r\n\r\n\t\t\tif ( curve.frameStart < minStart ) {\r\n\r\n\t\t\t\tminStart = curve.frameStart;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( curve.frameEnd > maxEnd ) {\r\n\r\n\t\t\t\tmaxEnd = curve.frameEnd;\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\tif ( minStart == - Infinity || maxEnd == Infinity ) {\r\n\r\n\t\t\tminStart = 0;\r\n\t\t\tmaxEnd = 1;\r\n\r\n\t\t}\r\n\r\n\t\tthis.frameStart = minStart;\r\n\t\tthis.frameEnd = maxEnd;\r\n\t\tthis.frameDuration = this.frameEnd - this.frameStart;\r\n\r\n\t}\r\n\r\n\tpublic getFCurve( axis: Types.RecommendString<Types.Axis> ) {\r\n\r\n\t\treturn this.curves.get( axis ) || null;\r\n\r\n\t}\r\n\r\n\tpublic setFrame( frame: number ) {\r\n\r\n\t\tif ( frame == this.updatedFrame ) return this;\r\n\r\n\t\tconst x = this.curves.get( 'x' );\r\n\t\tconst y = this.curves.get( 'y' );\r\n\t\tconst z = this.curves.get( 'z' );\r\n\t\tconst w = this.curves.get( 'w' );\r\n\r\n\t\tif ( x ) this.value.x = x.getValue( frame );\r\n\t\tif ( y ) this.value.y = y.getValue( frame );\r\n\t\tif ( z ) this.value.z = z.getValue( frame );\r\n\t\tif ( w ) this.value.w = w.getValue( frame );\r\n\r\n\t\tthis.updatedFrame = frame;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n","import { IVector2 } from '../Math/Vector';\nimport { EventEmitter } from '../utils/EventEmitter';\n\r\nimport { EasingFunc, Easings } from './Easings';\r\n\r\nexport type FCurveInterpolation = \"BEZIER\" | \"LINEAR\" | \"CONSTANT\";\r\n\r\nexport class FCurveKeyFrame extends EventEmitter {\r\n\r\n\tpublic coordinate: IVector2 = { x: 0, y: 0 };\r\n\tpublic handleLeft: IVector2 = { x: 0, y: 0 };\r\n\tpublic handleRight: IVector2 = { x: 0, y: 0 };\r\n\tpublic interpolation: FCurveInterpolation = 'BEZIER';\r\n\r\n\tprivate easing: EasingFunc | null = null;\r\n\tprivate nextFrame: FCurveKeyFrame | null = null;\r\n\r\n\tconstructor( coordinate: IVector2, handleLeft?: IVector2, handleRight?: IVector2, interpolation?: FCurveInterpolation ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.set( coordinate, handleLeft, handleRight, interpolation );\r\n\r\n\t}\r\n\r\n\tpublic set( coordinate: IVector2, handleLeft?: IVector2, handleRight?: IVector2, interpolation?: FCurveInterpolation ) {\r\n\r\n\t\tthis.coordinate = coordinate;\r\n\t\tthis.handleLeft = handleLeft || coordinate;\r\n\t\tthis.handleRight = handleRight || coordinate;\r\n\t\tthis.interpolation = interpolation || 'BEZIER';\r\n\r\n\t}\r\n\r\n\tprivate getEasing( interpolation: FCurveInterpolation, nextFrame: FCurveKeyFrame ) {\r\n\r\n\t\tif ( interpolation == 'BEZIER' ) {\r\n\r\n\t\t\treturn Easings.bezier( this.coordinate, this.handleRight, nextFrame.handleLeft, nextFrame.coordinate );\r\n\r\n\t\t} else if ( interpolation == 'CONSTANT' ) {\r\n\r\n\t\t\treturn () => {\r\n\r\n\t\t\t\treturn this.coordinate.y;\r\n\r\n\t\t\t};\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn ( t: number ) => {\r\n\r\n\t\t\t\tconst d = ( nextFrame.coordinate.y - this.coordinate.y );\r\n\t\t\t\tt = ( t - this.coordinate.x ) / ( nextFrame.coordinate.x - this.coordinate.x );\r\n\r\n\t\t\t\treturn this.coordinate.y + t * d;\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic to( nextFrame: FCurveKeyFrame, t: number ) {\r\n\r\n\t\tif ( this.nextFrame == null || this.nextFrame.coordinate.x != nextFrame.coordinate.x || this.nextFrame.coordinate.y != nextFrame.coordinate.y ) {\r\n\r\n\t\t\tthis.easing = this.getEasing( this.interpolation, nextFrame );\r\n\t\t\tthis.nextFrame = nextFrame;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.easing ) {\r\n\r\n\t\t\treturn this.easing( t );\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn 0;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n","import { Uniforms } from \"../GLPowerProgram\";\r\n\r\nexport namespace UniformsUtils {\r\n\r\n\texport function merge( ...uniforms: ( Uniforms|undefined )[] ) : Uniforms {\r\n\r\n\t\tconst res = {};\r\n\r\n\t\tfor ( let i = 0; i < uniforms.length; i ++ ) {\r\n\r\n\t\t\tif ( uniforms[ i ] != undefined ) {\r\n\r\n\t\t\t\tObject.assign( res, uniforms[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\r\n\t}\r\n\r\n}\r\n","\nexport namespace ID {\n\n\texport function genUUID(): string {\n\n\t\treturn self.crypto.randomUUID();\n\n\t}\n\n}\n"],"names":["Power","gl","GLPowerVAO","program","name","buffer","size","opt","attr","count","force","attribute","indexBuffer","cb","item","GLPowerProgram","vertexShaderSrc","fragmentShaderSrc","vs","fs","shaderSrc","type","shader","errorLog","splitShaderSrc","lines","line","index","lineNum","start","end","error","t","i","value","uniform","key","id","vao","GLPowerBuffer","data","usage","target","Vector","x","y","z","w","a","_a","_b","_c","_d","length","v","ax","ay","az","bx","by","bz","mat","elm","e11","e12","e13","e21","e22","e23","e31","e32","e33","xx","yy","zz","e14","e24","e34","e41","e42","e43","e44","ww","b","GLPowerTexture","param","img","unitNumber","src","callBack","GLPowerFrameBuffer","depthTexture","textures","attachment","width_size","height","GLPowerFrameBufferCube","face","GLPowerTextureCube","GLPowerTransformFeedback","varyingIndex","fbBuffer","Matrix","fov","aspect","near","far","d","width","eye","up","zAxis","xAxis","yAxis","c","e","f","g","h","j","k","l","n","o","p","q","r","s","u","A","B","det","ivd","pos","qua","scale","position","xy","xz","xw","yz","yw","zw","elm2","dist","sum","direction","axis","angle","tx","ty","m","tmp","rot","array","Euler","order","matrix","te","m11","m12","m13","m22","m23","m32","m33","Quaternion","euler","orverrideOrder","sx","sy","sz","cx","cy","cz","trace","qx","qy","qz","qw","Maths","EventEmitter","event","args","tmpListener","listener","Bezier","calcBezierA","calcBezierB","calcBezierC","calcBezierSlope","calcBezier","subdiv","startT","endT","currentX","currentT","newton","slope","getBezierTfromX","cache","sample","diff","Easings","sigmoid","weight","e1","e2","smoothstep","min","max","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","bezier","c1","h1","h2","c2","cubicBezier","h1X","h1Y","h2X","h2Y","Lerps","getClone","getCopy","source","getLerpFunc","getUniformsType","Animator","init","easing","val","duration","deltaTime","FCurve","frames","keyframe","frame","beforeKeyFrame","FCurveGroup","curve","minStart","maxEnd","FCurveKeyFrame","coordinate","handleLeft","handleRight","interpolation","nextFrame","UniformsUtils","merge","uniforms","res","ID","genUUID"],"mappings":"AAAO,MAAMA,EAAM;AAAA,EAMlB,YAAaC,GAA6B;AAEzC,SAAK,KAAKA,GAEV,KAAK,GAAG,YAAaA,EAAG,qBAAqB,EAAK,GAI7C,KAAA,GAAG,aAAc,wBAAyB,GAC1C,KAAA,GAAG,aAAc,6BAA8B,GACpD,KAAK,wBAAwB,KAAK,GAAG,aAAc,iCAAkC;AAAA,EAEtF;AAED;ACFO,MAAMC,EAAW;AAAA,EAiBvB,YAAaD,GAA4BE,GAAwB;AAEhE,SAAK,KAAKF,GAEV,KAAK,UAAUE,GAEV,KAAA,MAAM,KAAK,GAAG,kBAAkB,GAChC,KAAA,iCAAiB,OACtB,KAAK,cAAc,MAEnB,KAAK,YAAY,GACjB,KAAK,aAAa,GAClB,KAAK,gBAAgB;AAAA,EAEtB;AAAA,EAMO,aAAcC,GAAcC,GAAuBC,GAAcC,GAAyB;AAEhG,UAAMC,IAAO,KAAK,WAAW,IAAKJ,CAAK,GAEjCK,IAAQJ,EAAO,QAAQA,EAAO,MAAM,SAASC,IAAO;AAErD,gBAAA,WAAW,IAAKF,GAAM;AAAA,MAC1B,GAAGI;AAAA,MAEF,QAAAH;AAAA,MACA,MAAAC;AAAA,MACA,OAAAG;AAAA,MACA,GAAGF;AAAA,MAEJ,UAAU;AAAA,IAAA,CACT,GAEF,KAAK,iBAAiB,GAEf;AAAA,EAER;AAAA,EAEO,gBAAiBH,GAAe;AAEjC,gBAAA,WAAW,OAAQA,CAAK,GAEtB;AAAA,EAER;AAAA,EAEO,iBAAkBM,GAAkB;AAE1C,IAAK,CAAE,KAAK,QAEZ,KAAK,YAAY,GACjB,KAAK,gBAAgB,GAEhB,KAAA,GAAG,gBAAiB,KAAK,GAAI,GAElC,KAAK,WAAW,QAAS,CAAEC,GAAWP,MAAU;AAExC,OAAAO,EAAU,aAAa,UAAaD,OAE1CC,EAAU,WAAW,KAAK,GAAG,kBAAmB,KAAK,SAASP,CAAK,GAE9DO,EAAU,WAAW,OAEzB,KAAK,GAAG,WAAY,KAAK,GAAG,cAAcA,EAAU,OAAO,MAAO,GAC7D,KAAA,GAAG,wBAAyBA,EAAU,QAAS,GAC/C,KAAA,GAAG,oBAAqBA,EAAU,UAAUA,EAAU,MAAM,KAAK,GAAG,OAAO,IAAO,GAAG,CAAE,GAEvFA,EAAU,oBAAoB,UAElC,KAAK,GAAG,oBAAqBA,EAAU,UAAUA,EAAU,eAAgB,KAQzEA,EAAU,mBAAmB,QAAaP,KAAQ,YAEtD,KAAK,YAAY,KAAK,IAAK,KAAK,WAAWO,EAAU,KAAM,IAIvDA,EAAU,oBAAoB,UAAaA,EAAU,kBAAkB,MAEtE,KAAK,iBAAiB,IAE1B,KAAK,gBAAgBA,EAAU,QAI/B,KAAK,gBAAgB,KAAK,IAAK,KAAK,eAAeA,EAAU,KAAM;AAAA,IAIrE,CAEC,GAEG,KAAA,GAAG,gBAAiB,IAAK;AAAA,EAE/B;AAAA,EAMO,SAAUC,GAAoC;AAIpD,IAFA,KAAK,cAAcA,GAEZ,KAAK,QAEP,KAAA,GAAG,gBAAiB,KAAK,GAAI,GAE7B,KAAA,GAAG,WAAY,KAAK,GAAG,sBAAsB,KAAK,cAAc,KAAK,YAAY,SAAS,IAAK,GAE/F,KAAA,GAAG,gBAAiB,IAAK,GAEzB,KAAK,eAAe,KAAK,YAAY,UAEpC,KAAA,aAAa,KAAK,YAAY,MAAM;AAAA,EAI3C;AAAA,EAMO,IAAKC,GAAmC;AAEzC,SAAA,GAAG,gBAAiB,KAAK,GAAI,GAE7BA,KAAKA,EAAI,IAAK,GAEd,KAAA,GAAG,gBAAiB,IAAK;AAAA,EAE/B;AAAA,EAEO,SAAS;AAEf,WAAO,KAAK;AAAA,EAEb;AAAA,EAEO,UAAU;AAEX,SAAA,WAAW,QAAS,CAAQC,MAAA;AAEhC,MAAAA,EAAK,OAAO;IAAQ,CAEnB;AAAA,EAEH;AAED;AC1KO,MAAMC,EAAe;AAAA,EAQ3B,YAAad,GAA6B;AAEzC,SAAK,KAAKA,GAEL,KAAA,UAAU,KAAK,GAAG,cAAc,GAEhC,KAAA,0BAAU,OACV,KAAA,+BAAe;EAErB;AAAA,EAMO,UAAWe,GAAyBC,GAA2BV,GAAsB;AAEtF,QAAA,KAAK,YAAY,MAAO;AAE5B,cAAQ,KAAM,kBAAmB;AAEjC;AAAA,IAED;AAEA,UAAMW,IAAK,KAAK,aAAcF,GAAiB,KAAK,GAAG,aAAc,GAC/DG,IAAK,KAAK,aAAcF,GAAmB,KAAK,GAAG,eAAgB;AAEpE,QAAA,GAAEC,KAAM,CAAEC;AAEf,kBAAK,GAAG,aAAc,KAAK,SAASD,CAAG,GACvC,KAAK,GAAG,aAAc,KAAK,SAASC,CAAG,GAElCZ,KAAOA,EAAI,6BAEV,KAAA,GAAG,0BAA2B,KAAK,SAASA,EAAI,2BAA2B,KAAK,GAAG,gBAAiB,GAIrG,KAAA,GAAG,YAAa,KAAK,OAAQ,GAE3B,KAAK,GAAG,oBAAqB,KAAK,SAAS,KAAK,GAAG,WAAY,KAErE,QAAQ,MAAO,uBAAuB,KAAK,GAAG,kBAAmB,KAAK,OAAQ,CAAE,GAI1E;AAAA,EAER;AAAA,EAEU,aAAca,GAAmBC,GAAe;AAEzD,UAAMC,IAAS,KAAK,GAAG,aAAcD,CAAK;AAE1C,QAAK,CAAEC;AAEC,aAAA;AAOR,QAHK,KAAA,GAAG,aAAcA,GAAQF,CAAU,GACnC,KAAA,GAAG,cAAeE,CAAO,GAEzB,KAAK,GAAG,mBAAoBA,GAAQ,KAAK,GAAG,cAAe;AAExD,aAAAA;AAIF,QAAA,QAAQ,IAAI,YAAY,eAAgB;AAE5C,YAAMC,IAAW,KAAK,GAAG,iBAAkBD,CAAO;AAElD,UAAKC,GAAW;AAET,cAAAC,IAAiBJ,EAAU,MAAO;AAAA,CAAK,GAEvCK,IAAQF,EAAS,SAAU,iBAAkB;AAEnD,cAAM,KAAME,CAAM,EAAE,QAAS,CAAEC,GAAMC,MAAW;AAEzC,gBAAAC,IAAU,OAAQF,EAAM,EAAI,GAE5BG,IAAQ,KAAK,IAAK,GAAGD,IAAU,CAAE,GACjCE,IAAM,KAAK,IAAKN,EAAe,QAAQI,IAAU,CAAE;AAEzD,cAAIG,IAAQR,EAAS,MAAO;AAAA,CAAK,EAAGI,KAAU;AAAA;AAE/B,UAAAH,EAAA,QAAS,CAAEQ,GAAGC,MAAO;AAE9B,YAAAJ,KAASI,KAAKA,KAAKH,MAEdC,KAAA,GAAGE,IAAI,MAAMD;AAAA;AAAA,UAEvB,CAEC,GAEF,QAAQ,MAAOD,CAAM;AAAA,QAAA,CAEpB;AAAA,MAEH;AAAA,IAED;AAAA,EAIF;AAAA,EAMO,WAAY3B,GAAciB,GAAmBa,GAAgC;AAEnF,UAAMC,IAAU,KAAK,SAAS,IAAK/B,CAAK;AAExC,QAAK+B;AAKJ,UAHAA,EAAQ,OAAOd,GACfc,EAAQ,QAAQD,GAEXC,EAAQ;AAEZ,iBAAUF,IAAI,GAAGA,IAAIC,EAAM,QAAQD;AAElC,cAAKE,EAAQ,MAAOF,OAAQC,EAAOD,IAAM;AAExC,YAAAE,EAAQ,cAAc;AACtB;AAAA,UAED;AAAA;AAMD,QAAAA,EAAQ,cAAc;AAAA;AAMlB,WAAA,SAAS,IAAK/B,GAAM;AAAA,QACxB,OAAA8B;AAAA,QACA,MAAAb;AAAA,QACA,UAAU;AAAA,QACV,aAAa;AAAA,MAAA,CACZ,GAEF,KAAK,uBAAuB;AAAA,EAI9B;AAAA,EAEQ,uBAAwBX,GAAkB;AAEjD,IAAK,CAAE,KAAK,WAEZ,KAAK,SAAS,QAAS,CAAEyB,GAASC,MAAS;AAErC,OAAAD,EAAQ,aAAa,QAAQzB,OAEjCyB,EAAQ,WAAW,KAAK,GAAG,mBAAoB,KAAK,SAAUC,CAAI;AAAA,IAEnE,CAEC;AAAA,EAEH;AAAA,EAEO,iBAAiB;AAElB,SAAA,SAAS,QAAS,CAAWD,MAAA;AAEjC,MAAKA,EAAQ,eAAeA,EAAQ,aAAa,SAE3C,kBAAkB,KAAMA,EAAQ,IAAK,IAEvC,KAAK,GAAa,YAAYA,EAAQ,MAAQA,EAAQ,UAAU,IAAOA,EAAQ,KAAM,IAE5E,kBAAkB,KAAMA,EAAQ,IAAK,IAE9C,KAAK,GAAa,YAAYA,EAAQ,MAAQA,EAAQ,UAAU,GAAGA,EAAQ,KAAM,IAIjF,KAAK,GAAa,YAAYA,EAAQ,MAAQA,EAAQ,UAAUA,EAAQ,KAAM,GAIzEA,EAAA,QAAQA,EAAQ,MAAM,OAAO,GACrCA,EAAQ,cAAc;AAAA,IAEvB,CAEC;AAAA,EAEH;AAAA,EAMO,OAAQE,IAAa,KAAM;AAEjC,QAAK,CAAE,KAAK;AAAiB,aAAA;AAE7B,QAAIC,IAAM,KAAK,IAAI,IAAKD,CAAG;AAEtB,WAAAC,MAELA,IAAM,IAAIpC,EAAY,KAAK,IAAI,KAAK,OAAQ,GAEvC,KAAA,IAAI,IAAKmC,GAAIC,CAAI,GAEfA;AAAA,EAER;AAAA,EAMO,IAAKzB,GAA2C;AAEtD,IAAK,CAAE,KAAK,YAEP,KAAA,GAAG,WAAY,KAAK,OAAQ,GAE5BA,KAEJA,EAAI,IAAK,GAIL,KAAA,GAAG,WAAY,IAAK;AAAA,EAE1B;AAAA,EAEO,aAAa;AAEnB,WAAO,KAAK;AAAA,EAEb;AAAA,EAEO,UAAU;AAEX,SAAA,IAAI,QAAS,CAAOyB,MAAA;AAExB,MAAAA,EAAI,QAAQ;AAAA,IAAA,CAEX,GAEF,KAAK,IAAI,SAEJ,KAAA,GAAG,cAAe,KAAK,OAAQ;AAAA,EAErC;AAED;ACvSO,MAAMC,EAAc;AAAA,EAM1B,YAAatC,GAA6B;AAEzC,SAAK,KAAKA,GAEL,KAAA,SAAS,KAAK,GAAG,aAAa,GAEnC,KAAK,QAAQ;AAAA,EAEd;AAAA,EAEO,QAASuC,GAAoBnB,IAAmB,OAAOoB,GAAiB;AAE9E,UAAMC,IAASrB,KAAQ,QAAQ,KAAK,GAAG,eAAe,KAAK,GAAG;AAE9D,gBAAK,GAAG,WAAYqB,GAAQ,KAAK,MAAO,GAExC,KAAK,GAAG,WAAYA,GAAQF,GAAMC,KAAS,KAAK,GAAG,WAAY,GAE1D,KAAA,GAAG,WAAYC,GAAQ,IAAK,GAEjC,KAAK,QAAQF,GAEN;AAAA,EAER;AAAA,EAEO,UAAU;AAEX,SAAA,GAAG,aAAc,KAAK,MAAO;AAAA,EAEnC;AAED;AC1BO,MAAMG,EAAO;AAAA,EAOnB,YAAaC,GAAYC,GAAYC,GAAYC,GAAa;AAE7D,SAAK,IAAIH,KAAK,GACd,KAAK,IAAIC,KAAK,GACd,KAAK,IAAIC,KAAK,GACd,KAAK,IAAIC,KAAK;AAAA,EAEf;AAAA,EAEA,IAAW,WAAW;AAEd,WAAA;AAAA,EAER;AAAA,EAEO,IAAKH,GAAWC,GAAYC,GAAYC,GAAa;AAE3D,gBAAK,IAAIH,GACT,KAAK,IAAIC,KAAA,OAAAA,IAAKD,GACd,KAAK,IAAIE,KAAA,OAAAA,IAAKF,GACd,KAAK,IAAIG,KAAA,OAAAA,IAAKH,GAEP;AAAA,EAER;AAAA,EAMO,IAAKI,GAAwD;AJpD9D,QAAAC,GAAAC,GAAAC,GAAAC;AIsDA,WAAA,OAAOJ,KAAK,YAEhB,KAAK,KAAKA,GACV,KAAK,KAAKA,GACV,KAAK,KAAKA,GACV,KAAK,KAAKA,MAIL,KAAA,MAAKC,IAAAD,EAAE,MAAF,OAAAC,IAAO,GACZ,KAAA,MAAKC,IAAAF,EAAE,MAAF,OAAAE,IAAO,GACZ,KAAA,MAAKC,IAAAH,EAAE,MAAF,OAAAG,IAAO,GACZ,KAAA,MAAKC,IAAAJ,EAAE,MAAF,OAAAI,IAAO,IAIX;AAAA,EAER;AAAA,EAMO,IAAKJ,GAAgD;AJ9EtD,QAAAC,GAAAC,GAAAC,GAAAC;AIgFA,WAAA,OAASJ,KAAO,YAEpB,KAAK,KAAKA,GACV,KAAK,KAAKA,GACV,KAAK,KAAKA,MAIL,KAAA,MAAKC,IAAAD,EAAE,MAAF,OAAAC,IAAO,GACZ,KAAA,MAAKC,IAAAF,EAAE,MAAF,OAAAE,IAAO,GACZ,KAAA,MAAKC,IAAAH,EAAE,MAAF,OAAAG,IAAO,GACZ,KAAA,MAAKC,IAAAJ,EAAE,MAAF,OAAAI,IAAO,IAIX;AAAA,EAER;AAAA,EAMO,SAAUJ,GAAqB;AAEhC,WAAA,OAAOA,KAAK,YAEhB,KAAK,KAAKA,GACV,KAAK,KAAKA,GACV,KAAK,KAAKA,GACV,KAAK,KAAKA,MAIV,KAAK,KAAKA,EAAE,GACZ,KAAK,KAAKA,EAAE,GACZ,KAAK,KAAKA,EAAE,GACZ,KAAK,KAAKA,EAAE,IAIN;AAAA,EAER;AAAA,EAMO,OAAQA,GAAqB;AAE9B,WAAA,OAAOA,KAAK,YAEhB,KAAK,KAAKA,GACV,KAAK,KAAKA,GACV,KAAK,KAAKA,GACV,KAAK,KAAKA,MAIV,KAAK,KAAKA,EAAE,GACZ,KAAK,KAAKA,EAAE,GACZ,KAAK,KAAKA,EAAE,GACZ,KAAK,KAAKA,EAAE,IAIN;AAAA,EAER;AAAA,EAEO,SAAS;AAEf,WAAO,KAAK,KAAM,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,CAAE;AAAA,EAEvE;AAAA,EAEO,YAAY;AAEZ,UAAAK,IAAS,KAAK,OAAA,KAAY;AAEhC,gBAAK,KAAKA,GACV,KAAK,KAAKA,GACV,KAAK,KAAKA,GAEH;AAAA,EAER;AAAA,EAEO,MAAOC,GAAuB;AAEpC,UAAMC,IAAK,KAAK,GAAGC,IAAK,KAAK,GAAGC,IAAK,KAAK,GACpCC,IAAKJ,EAAE,GAAGK,IAAKL,EAAE,GAAGM,IAAKN,EAAE;AAE5B,gBAAA,IAAIE,IAAKI,IAAKH,IAAKE,GACnB,KAAA,IAAIF,IAAKC,IAAKH,IAAKK,GACnB,KAAA,IAAIL,IAAKI,IAAKH,IAAKE,GAEjB;AAAA,EAER;AAAA,EAEO,IAAKJ,GAAuB;AAE3B,WAAA,KAAK,IAAIA,EAAE,IAAI,KAAK,IAAIA,EAAE,IAAI,KAAK,IAAIA,EAAE;AAAA,EAEjD;AAAA,EAEO,aAAcO,GAAc;AAElC,UAAMC,IAAMD,EAAI,KAEVE,IAAMD,EAAK,IAAKE,IAAMF,EAAK,IAAKG,IAAMH,EAAK,IAChDI,IAAMJ,EAAK,IAAKK,IAAML,EAAK,IAAKM,IAAMN,EAAK,IAC3CO,IAAMP,EAAK,IAAKQ,IAAMR,EAAK,IAAKS,IAAMT,EAAK,KAMtCU,IAAK,KAAK,IAAIT,IAAM,KAAK,IAAIG,IAAM,KAAK,IAAIG,GAC5CI,IAAK,KAAK,IAAIT,IAAM,KAAK,IAAIG,IAAM,KAAK,IAAIG,GAC5CI,IAAK,KAAK,IAAIT,IAAM,KAAK,IAAIG,IAAM,KAAK,IAAIG;AAElD,gBAAK,IAAIC,GACT,KAAK,IAAIC,GACT,KAAK,IAAIC,GACT,KAAK,IAAI,GAEF;AAAA,EAER;AAAA,EAEO,aAAcb,GAAc;AAElC,UAAMC,IAAMD,EAAI,KAEVE,IAAMD,EAAK,IAAKE,IAAMF,EAAK,IAAKG,IAAMH,EAAK,IAAKa,IAAMb,EAAK,IAChEI,IAAMJ,EAAK,IAAKK,IAAML,EAAK,IAAKM,IAAMN,EAAK,IAAKc,IAAMd,EAAK,IAC3DO,IAAMP,EAAK,IAAKQ,IAAMR,EAAK,IAAKS,IAAMT,EAAK,KAAMe,IAAMf,EAAK,KAC5DgB,IAAMhB,EAAK,KAAMiB,IAAMjB,EAAK,KAAMkB,IAAMlB,EAAK,KAAMmB,IAAMnB,EAAK,KAEzDU,IAAK,KAAK,IAAIT,IAAM,KAAK,IAAIG,IAAM,KAAK,IAAIG,IAAM,KAAK,IAAIS,GAC3DL,IAAK,KAAK,IAAIT,IAAM,KAAK,IAAIG,IAAM,KAAK,IAAIG,IAAM,KAAK,IAAIS,GAC3DL,IAAK,KAAK,IAAIT,IAAM,KAAK,IAAIG,IAAM,KAAK,IAAIG,IAAM,KAAK,IAAIS,GAC3DE,IAAK,KAAK,IAAIP,IAAM,KAAK,IAAIC,IAAM,KAAK,IAAIC,IAAM,KAAK,IAAII;AAEjE,gBAAK,IAAIT,GACT,KAAK,IAAIC,GACT,KAAK,IAAIC,GACT,KAAK,IAAIQ,GAEF;AAAA,EAER;AAAA,EAEO,QAAQ;AAEd,SAAK,IAAI,KAAK,MAAO,KAAK,CAAE,GAC5B,KAAK,IAAI,KAAK,MAAO,KAAK,CAAE,GAC5B,KAAK,IAAI,KAAK,MAAO,KAAK,CAAE,GAC5B,KAAK,IAAI,KAAK,MAAO,KAAK,CAAE;AAAA,EAE7B;AAAA,EAEO,KAAMC,GAAWnD,GAAY;AAEnC,gBAAK,IAAI,KAAK,KAAMmD,EAAE,IAAI,KAAK,KAAMnD,GACrC,KAAK,IAAI,KAAK,KAAMmD,EAAE,IAAI,KAAK,KAAMnD,GACrC,KAAK,IAAI,KAAK,KAAMmD,EAAE,IAAI,KAAK,KAAMnD,GACrC,KAAK,IAAI,KAAK,KAAMmD,EAAE,IAAI,KAAK,KAAMnD,GAE9B;AAAA,EAER;AAAA,EAEO,KAAMgB,GAAuC;AJhQ9C,QAAAC,GAAAC,GAAAC,GAAAC;AIkQA,gBAAA,KAAIH,IAAAD,EAAE,MAAF,OAAAC,IAAO,GACX,KAAA,KAAIC,IAAAF,EAAE,MAAF,OAAAE,IAAO,GACX,KAAA,KAAIC,IAAAH,EAAE,MAAF,OAAAG,IAAO,GACX,KAAA,KAAIC,IAAAJ,EAAE,MAAF,OAAAI,IAAO,GAET;AAAA,EAER;AAAA,EAEO,QAAQ;AAEP,WAAA,IAAIT,EAAQ,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,CAAE;AAAA,EAEnD;AAAA,EAEO,OAAQtB,GAAkC;AAEhD,WAAKA,KAAQ,SAEL,CAAE,KAAK,GAAG,KAAK,CAAE,IAEbA,KAAQ,SAEZ,CAAE,KAAK,GAAG,KAAK,GAAG,KAAK,CAAE,IAIzB,CAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,CAAE;AAAA,EAI1C;AAED;AC/QO,MAAM+D,EAAe;AAAA,EAY3B,YAAanF,GAA6B;AAEzC,SAAK,KAAKA,GACV,KAAK,QAAQ,MACb,KAAK,OAAO,GACP,KAAA,OAAO,IAAI0C,KACX,KAAA,QAAQ,KAAK,GAAG,cAAc,GAEnC,KAAK,WAAW;AAAA,MACf,MAAM,KAAK,GAAG;AAAA,MACd,gBAAgB,KAAK,GAAG;AAAA,MACxB,QAAQ,KAAK,GAAG;AAAA,MAChB,WAAW,KAAK,GAAG;AAAA,MACnB,WAAW,KAAK,GAAG;AAAA,MACnB,gBAAgB;AAAA,MAChB,OAAO,KAAK,GAAG;AAAA,MACf,OAAO,KAAK,GAAG;AAAA,IAAA,GAGhB,KAAK,cAAc1C,EAAG;AAAA,EAEvB;AAAA,EAEA,IAAW,YAAY;AAEf,WAAA;AAAA,EAER;AAAA,EAEO,QAASoF,GAAgD;AAE/D,gBAAK,WAAW;AAAA,MACf,GAAG,KAAK;AAAA,MACR,GAAGA;AAAA,IAAA,GAGC,KAAA,OAAQ,KAAK,KAAM,GAEjB;AAAA,EAER;AAAA,EAEO,OAAQC,GAAoE;AAMlF,QAJA,KAAK,QAAQA,GAEb,KAAK,GAAG,YAAa,KAAK,aAAa,KAAK,KAAM,GAE7C,KAAK,OAAQ;AAEXA,YAAAA,IAAM,MAAM,QAAS,KAAK,KAAM,IAAI,KAAK,MAAO,KAAM,KAAK;AAEjE,WAAK,KAAK,IAAKA,EAAI,OAAOA,EAAI,MAAO,GAEhCA,aAAe,oBAAoBA,aAAe,oBAEtD,KAAK,GAAG,WAAY,KAAK,aAAa,GAAG,KAAK,SAAS,gBAAgB,KAAK,SAAS,QAAQ,KAAK,SAAS,MAAMA,CAAI,IAIhH,KAAA,GAAG,WAAY,KAAK,aAAa,GAAG,KAAK,SAAS,gBAAgBA,EAAI,OAAOA,EAAI,QAAQ,GAAG,KAAK,SAAS,QAAQ,KAAK,SAAS,MAAMA,EAAI,QAAQ,IAAK;AAAA,IAE7J;AAIK,WAAA,KAAK,IAAK,GAAG,CAAE,GAEf,KAAA,GAAG,WAAY,KAAK,aAAa,GAAG,KAAK,SAAS,gBAAgB,KAAK,KAAK,GAAG,KAAK,KAAK,GAAG,GAAG,KAAK,SAAS,QAAQ,KAAK,SAAS,MAAM,IAAK;AAI/I,WAAA,KAAK,SAAS,kBAEb,KAAA,GAAG,eAAgB,KAAK,WAAY,GAIrC,KAAA,GAAG,cAAe,KAAK,aAAa,KAAK,GAAG,oBAAoB,KAAK,SAAS,SAAU,GACxF,KAAA,GAAG,cAAe,KAAK,aAAa,KAAK,GAAG,oBAAoB,KAAK,SAAS,SAAU,GACxF,KAAA,GAAG,cAAe,KAAK,aAAa,KAAK,GAAG,gBAAgB,KAAK,SAAS,KAAM,GAChF,KAAA,GAAG,cAAe,KAAK,aAAa,KAAK,GAAG,gBAAgB,KAAK,SAAS,KAAM,GAErF,KAAK,GAAG,YAAa,KAAK,aAAa,IAAK,GAErC;AAAA,EAER;AAAA,EAEO,SAAUC,GAAqB;AAErC,gBAAK,GAAG,cAAe,KAAK,GAAG,WAAWA,CAAW,GACrD,KAAK,GAAG,YAAa,KAAK,aAAa,KAAK,KAAM,GAElD,KAAK,OAAOA,GAEL;AAAA,EAER;AAAA,EAEO,KAAMC,GAAaC,GAAwB;AAE3C,UAAAH,IAAM,IAAI;AAEhB,WAAAA,EAAI,SAAS,MAAM;AAElB,WAAK,OAAQA,CAAI,GAEZG,KAAoBA;IAAA,GAI1BH,EAAI,MAAME,GAEH;AAAA,EAER;AAAA,EAEO,aAAa;AAEnB,WAAO,KAAK;AAAA,EAEb;AAAA,EAEA,IAAW,OAAO;AAEjB,WAAO,KAAK;AAAA,EAEb;AAAA,EAEO,UAAU;AAEX,SAAA,GAAG,cAAe,KAAK,KAAM;AAAA,EAEnC;AAED;ACjKO,MAAME,EAAmB;AAAA,EAW/B,YAAazF,GAA4BM,GAA6B;AAErE,SAAK,KAAKN,GAEV,KAAK,OAAO,IAAI0C,EAAQ,GAAG,CAAE,GAExB,KAAA,gBAAgB,KAAK,GAAG,kBAAkB,GAC/C,KAAK,eAAe,MAEpB,KAAK,WAAW,IAChB,KAAK,wBAAwB,KAExB,CAAEpC,KAAO,CAAEA,EAAI,uBAEnB,KAAK,gBAAiB,IAAI6E,EAAgB,KAAK,EAAG,EAAE,QAAS;AAAA,MAC5D,gBAAgB,KAAK,GAAG;AAAA,MACxB,QAAQ,KAAK,GAAG;AAAA,MAChB,MAAM,KAAK,GAAG;AAAA,MACd,WAAW,KAAK,GAAG;AAAA,MACnB,WAAW,KAAK,GAAG;AAAA,IAClB,CAAA,CAAE;AAAA,EAIN;AAAA,EAEO,gBAAiBO,GAAsC;AAI7D,SAAK,eAAeA,GAEf,KAAK,iBAET,KAAK,GAAG,gBAAiB,KAAK,GAAG,aAAa,KAAK,aAAc,GACjE,KAAK,GAAG,qBAAsB,KAAK,GAAG,aAAa,KAAK,GAAG,kBAAkB,KAAK,GAAG,YAAY,KAAK,aAAa,WAAA,GAAc,CAAE,GACnI,KAAK,GAAG,gBAAiB,KAAK,GAAG,aAAa,IAAK;AAAA,EAIrD;AAAA,EAEO,WAAYC,GAA8B;AAEhD,gBAAK,WAAWA,GAChB,KAAK,wBAAwB,IAE7B,KAAK,GAAG,gBAAiB,KAAK,GAAG,aAAa,KAAK,aAAc,GAEjE,KAAK,SAAS,QAAS,CAAE5D,GAAG,MAAO;AAEhC,MAAAA,EAAA,OAAQ,EAAE,OAAO,KAAK,KAAK,GAAG,QAAQ,KAAK,KAAK,EAAI,CAAA;AAEhD,YAAA6D,IAAa,KAAK,GAAG,oBAAoB;AAC/C,WAAK,GAAG,qBAAsB,KAAK,GAAG,aAAaA,GAAY,KAAK,GAAG,YAAY7D,EAAE,WAAW,GAAG,CAAE,GAEhG,KAAA,sBAAsB,KAAM6D,CAAW;AAAA,IAAA,CAE3C,GAEF,KAAK,GAAG,gBAAiB,KAAK,GAAG,aAAa,IAAK,GAE5C;AAAA,EAER;AAAA,EAMO,QAASC,GAA6BC,GAAsC;AAE7E,WAAA,OAAOD,KAAc,YAEzB,KAAK,KAAK,IAAIA,GAETC,MAAW,WAEf,KAAK,KAAK,IAAIA,MAMV,KAAA,KAAK,KAAMD,CAAW,GAI5B,KAAK,KAAK,SAEL,KAAA,WAAY,KAAK,QAAS,GAE1B,KAAA,SAAS,QAAS,CAAK9D,MAAA;AAEzB,MAAAA,EAAA,OAAQ,EAAE,OAAO,KAAK,KAAK,GAAG,QAAQ,KAAK,KAAK,EAAI,CAAA;AAAA,IAAA,CAErD,GAEG,KAAK,gBAEJ,KAAA,aAAa,OAAQ,EAAE,OAAO,KAAK,KAAK,GAAG,QAAQ,KAAK,KAAK,EAAI,CAAA,GAIhE;AAAA,EAER;AAAA,EAEO,iBAAiB;AAEvB,WAAO,KAAK;AAAA,EAEb;AAAA,EAEO,UAAU;AAEX,SAAA,GAAG,kBAAmB,KAAK,aAAc;AAAA,EAE/C;AAED;ACtIO,MAAMgE,UAA+BN,EAAmB;AAAA,EAM9D,YAAazF,GAA4BM,GAA6B;AAErE,UAAON,GAAIM,CAAI,GAEf,KAAK,WAAW,IAEhB,KAAK,aAAa;AAAA,MACjB,KAAK,GAAG;AAAA,MACR,KAAK,GAAG;AAAA,MACR,KAAK,GAAG;AAAA,MACR,KAAK,GAAG;AAAA,MACR,KAAK,GAAG;AAAA,MACR,KAAK,GAAG;AAAA,IAAA,GAGJ,KAAA,cAAc,KAAK,WAAY;AAAA,EAErC;AAAA,EAEO,WAAYqF,GAAkC;AAEpD,gBAAK,WAAWA,GAChB,KAAK,wBAAwB,IAExB,KAAA,SAAS,QAAS,CAAE5D,MAAO;AAE7B,MAAAA,EAAA,OAAQ,EAAE,OAAO,KAAK,KAAK,GAAG,QAAQ,KAAK,KAAK,EAAI,CAAA;AAAA,IAAA,CAErD,GAEK;AAAA,EAER;AAAA,EAEO,KAAMiE,GAAe;AAE3B,SAAK,GAAG,gBAAiB,KAAK,GAAG,aAAa,KAAK,aAAc,GACjE,KAAK,wBAAwB,IAE7B,KAAK,SAAS,QAAS,CAAEjE,GAAG,MAAO;AAE5B,YAAA6D,IAAa,KAAK,GAAG,oBAAoB;AAC/C,WAAK,GAAG,qBAAsB,KAAK,GAAG,aAAaA,GAAY,KAAK,WAAYI,IAAQjE,EAAE,WAAW,GAAG,CAAE,GACrG,KAAA,sBAAsB,KAAM6D,CAAW;AAAA,IAAA,CAE3C,GAEG,KAAA,cAAc,KAAK,WAAYI,IAEpC,KAAK,GAAG,gBAAiB,KAAK,GAAG,aAAa,IAAK;AAAA,EAEpD;AAGD;ACxDO,MAAMC,UAA2Bd,EAAe;AAAA,EAItD,YAAanF,GAA6B;AAEzC,UAAOA,CAAG,GAEV,KAAK,cAAcA,EAAG,kBAEtB,KAAK,aAAa;AAAA,MACjB,KAAK,GAAG;AAAA,MACR,KAAK,GAAG;AAAA,MACR,KAAK,GAAG;AAAA,MACR,KAAK,GAAG;AAAA,MACR,KAAK,GAAG;AAAA,MACR,KAAK,GAAG;AAAA,IAAA;AAAA,EAGV;AAAA,EAEO,OAAQqF,GAAiD;AAM/D,QAJA,KAAK,QAAQA,GAEb,KAAK,GAAG,YAAa,KAAK,aAAa,KAAK,KAAM,GAE7C,KAAK;AAET,eAAUrD,IAAI,GAAGA,IAAI,GAAGA,KAAO;AAExBqD,cAAAA,IAAM,MAAM,QAAS,KAAK,KAAM,IAAI,KAAK,MAAOrD,KAAM,KAAK;AAEjE,aAAK,KAAK,IAAKqD,EAAI,OAAOA,EAAI,MAAO,GAEhCA,aAAe,oBAAoBA,aAAe,oBAEtD,KAAK,GAAG,WAAY,KAAK,WAAYrD,IAAK,GAAG,KAAK,GAAG,MAAM,KAAK,GAAG,MAAM,KAAK,GAAG,eAAeqD,CAAI,IAI/F,KAAA,GAAG,WAAY,KAAK,WAAYrD,IAAK,GAAG,KAAK,SAAS,gBAAgBqD,EAAI,OAAOA,EAAI,QAAQ,GAAG,KAAK,SAAS,QAAQ,KAAK,SAAS,MAAMA,EAAI,QAAQ,IAAK;AAAA,MAIlK;AAII,WAAA,KAAK,SAAS,kBAEb,KAAA,GAAG,eAAgB,KAAK,WAAY,GAIrC,KAAA,GAAG,cAAe,KAAK,aAAa,KAAK,GAAG,oBAAoB,KAAK,SAAS,SAAU,GACxF,KAAA,GAAG,cAAe,KAAK,aAAa,KAAK,GAAG,oBAAoB,KAAK,SAAS,SAAU,GACxF,KAAA,GAAG,cAAe,KAAK,aAAa,KAAK,GAAG,gBAAgB,KAAK,SAAS,KAAM,GAChF,KAAA,GAAG,cAAe,KAAK,aAAa,KAAK,GAAG,gBAAgB,KAAK,SAAS,KAAM,GACrF,KAAK,GAAG,YAAa,KAAK,aAAa,IAAK,GAErC;AAAA,EAER;AAED;ACvEO,MAAMa,EAAyB;AAAA,EAOrC,YAAalG,GAA6B;AAEzC,SAAK,KAAKA,GACL,KAAA,oBAAoB,KAAK,GAAG,wBAAwB,GAEpD,KAAA,qCAAqB;EAE3B;AAAA,EAEO,KAAMY,GAAkB;AAE9B,SAAK,GAAG,sBAAuB,KAAK,GAAG,oBAAoB,KAAK,iBAAkB,GAE7EA,KAAQA,KAEb,KAAK,GAAG,sBAAuB,KAAK,GAAG,oBAAoB,IAAK;AAAA,EAEjE;AAAA,EAEO,UAAWT,GAAcC,GAAuB+F,GAAuB;AAExE,SAAA,eAAe,IAAKhG,GAAM;AAAA,MAC9B,QAAAC;AAAA,MACA,cAAA+F;AAAA,IAAA,CACC;AAAA,EAEH;AAAA,EAEO,IAAKvF,GAAgD;AAE3D,SAAK,KAAM,MAAM;AAEX,WAAA,eAAe,QAAS,CAAYwF,MAAA;AAEnC,aAAA,GAAG,eAAgB,KAAK,GAAG,2BAA2BA,EAAS,cAAcA,EAAS,OAAO,MAAO;AAAA,MAAA,CAExG,GAEGxF,KAAKA,EAAI,IAAK,GAEd,KAAA,eAAe,QAAS,CAAYwF,MAAA;AAExC,aAAK,GAAG,eAAgB,KAAK,GAAG,2BAA2BA,EAAS,cAAc,IAAK;AAAA,MAAA,CAEtF;AAAA,IAAA,CAED;AAAA,EAEH;AAED;ACtDO,MAAMC,EAAO;AAAA,EAInB,YAAaxC,GAAkB;AAE9B,SAAK,MAAM;AAAA,MACV;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MACT;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MACT;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MACT;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,IAAA,GAGLA,KAEJ,KAAK,IAAKA,CAAI;AAAA,EAIhB;AAAA,EAEO,WAAW;AAEjB,gBAAK,MAAM;AAAA,MACV;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MACT;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MACT;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MACT;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,IAAA,GAGH;AAAA,EAER;AAAA,EAEO,QAAQ;AAEd,WAAO,IAAIwC,EAAA,EAAS,KAAM,IAAK;AAAA,EAEhC;AAAA,EAEO,KAAMzC,GAAc;AAErB,gBAAA,IAAKA,EAAI,GAAI,GAEX;AAAA,EAER;AAAA,EAEO,YAAa0C,GAAaC,GAAgBC,GAAcC,GAAc;AAE5E,UAAM,IAAI,IAAI,KAAK,IAAKH,IAAM,KAAK,KAAK,GAAI,GACtCI,IAAID,IAAMD;AAEhB,gBAAK,MAAM;AAAA,MACV,IAAID;AAAA,MAAQ;AAAA,MAAG;AAAA,MAAG;AAAA,MAClB;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MACT;AAAA,MAAG;AAAA,MAAG,EAAIE,IAAMD,KAASE;AAAA,MAAG;AAAA,MAC5B;AAAA,MAAG;AAAA,MAAG,EAAID,IAAMD,IAAO,KAAME;AAAA,MAAG;AAAA,IAAA,GAG1B;AAAA,EAER;AAAA,EAEO,aAAcC,GAAeb,GAAgBU,GAAcC,GAAc;AAE/E,gBAAK,MAAM;AAAA,MACV,IAAIE;AAAA,MAAO;AAAA,MAAG;AAAA,MAAG;AAAA,MACjB;AAAA,MAAG,IAAIb;AAAA,MAAQ;AAAA,MAAG;AAAA,MAClB;AAAA,MAAG;AAAA,MAAG,MAAQW,IAAMD;AAAA,MAAQ;AAAA,MAC5B;AAAA,MAAG;AAAA,MAAG,EAAIC,IAAMD,MAAWC,IAAMD;AAAA,MAAQ;AAAA,IAAA,GAGnC;AAAA,EAER;AAAA,EAEO,OAAQI,GAAanE,GAAgBoE,GAAa;AAExD,UAAMC,IAAQF,EAAI,MAAA,EAAQ,IAAKnE,CAAO,EAAE,aAClCsE,IAAQF,EAAG,MAAA,EAAQ,MAAOC,CAAM,EAAE,aAClCE,IAAQF,EAAM,MAAA,EAAQ,MAAOC,CAAM,EAAE;AAE3C,gBAAK,MAAM;AAAA,MACVA,EAAM;AAAA,MAAGA,EAAM;AAAA,MAAGA,EAAM;AAAA,MAAG;AAAA,MAC3BC,EAAM;AAAA,MAAGA,EAAM;AAAA,MAAGA,EAAM;AAAA,MAAG;AAAA,MAC3BF,EAAM;AAAA,MAAGA,EAAM;AAAA,MAAGA,EAAM;AAAA,MAAG;AAAA,MAC3BF,EAAI;AAAA,MACJA,EAAI;AAAA,MACJA,EAAI;AAAA,MACJ;AAAA,IAAA,GAGM;AAAA,EAER;AAAA,EAEO,UAAU;AAEhB,UAAM7D,IAAI,KAAK,IAAK,IAAKmC,IAAI,KAAK,IAAK,IAAK+B,IAAI,KAAK,IAAK,IAAKP,IAAI,KAAK,IAAK,IAC5EQ,IAAI,KAAK,IAAK,IAAKC,IAAI,KAAK,IAAK,IAAKC,IAAI,KAAK,IAAK,IAAKC,IAAI,KAAK,IAAK,IACvErF,IAAI,KAAK,IAAK,IAAKsF,IAAI,KAAK,IAAK,IAAKC,IAAI,KAAK,IAAK,KAAMC,IAAI,KAAK,IAAK,KACxE,IAAI,KAAK,IAAK,KAAMC,IAAI,KAAK,IAAK,KAAMC,IAAI,KAAK,IAAK,KAAMC,IAAI,KAAK,IAAK,KAC1EC,IAAI7E,IAAIoE,IAAIjC,IAAIgC,GAAGW,IAAI9E,IAAIqE,IAAIH,IAAIC,GACnCY,IAAI/E,IAAIsE,IAAIX,IAAIQ,GAAGnF,IAAImD,IAAIkC,IAAIH,IAAIE,GACnCY,IAAI7C,IAAImC,IAAIX,IAAIS,GAAG9D,IAAI4D,IAAII,IAAIX,IAAIU,GACnCtE,IAAId,IAAIyF,IAAIH,IAAI,GAAG3E,IAAIX,IAAI0F,IAAIH,IAAI,GACnC3E,IAAIZ,IAAI2F,IAAIH,IAAI,GAAG3E,IAAIyE,IAAII,IAAIH,IAAIE,GACnCO,IAAIV,IAAIK,IAAIH,IAAIC,GAAGQ,IAAIV,IAAII,IAAIH,IAAIE,GACnCQ,IAAQN,IAAIK,IAAIJ,IAAIG,IAAIF,IAAIjF,IAAId,IAAIa,IAAImF,IAAIpF,IAAIU,IAAIP,GACpDqF,IAAM,IAAID;AAEX,WAAKA,KAAO,IAAW,KAAK,cAE5B,KAAK,IAAK,MAAQf,IAAIc,IAAIb,IAAIY,IAAIX,IAAIxE,KAAMsF,GACvC,KAAA,IAAK,MAAQ,CAAEjD,IAAI+C,IAAIhB,IAAIe,IAAItB,IAAI7D,KAAMsF,GAC9C,KAAK,IAAK,MAAQV,IAAIpE,IAAIqE,IAAIK,IAAIJ,IAAI5F,KAAMoG,GACvC,KAAA,IAAK,MAAQ,CAAEb,IAAIjE,IAAIkE,IAAIQ,IAAIP,IAAIzF,KAAMoG,GACzC,KAAA,IAAK,MAAQ,CAAEjB,IAAIe,IAAIb,IAAIxE,IAAIyE,IAAI1E,KAAMwF,GAC9C,KAAK,IAAK,MAAQpF,IAAIkF,IAAIhB,IAAIrE,IAAI8D,IAAI/D,KAAMwF,GACvC,KAAA,IAAK,MAAQ,CAAE,IAAI9E,IAAIqE,IAAII,IAAIH,IAAIE,KAAMM,GAC9C,KAAK,IAAK,MAAQnG,IAAIqB,IAAIkE,IAAIO,IAAIN,IAAIK,KAAMM,GAC5C,KAAK,IAAK,MAAQjB,IAAIc,IAAIb,IAAIvE,IAAIyE,IAAIvE,KAAMqF,GACvC,KAAA,IAAK,MAAQ,CAAEpF,IAAIiF,IAAI9C,IAAItC,IAAI8D,IAAI5D,KAAMqF,GAC9C,KAAK,IAAK,OAAS,IAAIJ,IAAIN,IAAIK,IAAIH,IAAIC,KAAMO,GACxC,KAAA,IAAK,OAAS,CAAEnG,IAAI+F,IAAIT,IAAIQ,IAAIN,IAAII,KAAMO,GAC1C,KAAA,IAAK,OAAS,CAAEjB,IAAIrE,IAAIsE,IAAIxE,IAAIyE,IAAItE,KAAMqF,GAC/C,KAAK,IAAK,OAASpF,IAAIF,IAAIqC,IAAIvC,IAAIsE,IAAInE,KAAMqF,GACxC,KAAA,IAAK,OAAS,CAAE,IAAIpG,IAAI0F,IAAII,IAAIH,IAAIE,KAAMO,GAC/C,KAAK,IAAK,OAASnG,IAAID,IAAIuF,IAAIO,IAAIN,IAAIK,KAAMO,GAEtC;AAAA,EAER;AAAA,EAEO,YAAY;AAElB,UAAMrE,IAAM,KAAK,IAAK,IAAKC,IAAM,KAAK,IAAK,IAAKC,IAAM,KAAK,IAAK,IAAKU,IAAM,KAAK,IAAK,IACpFT,IAAM,KAAK,IAAK,IAAKC,IAAM,KAAK,IAAK,IAAKC,IAAM,KAAK,IAAK,IAAKQ,IAAM,KAAK,IAAK,IAC/EP,IAAM,KAAK,IAAK,IAAKC,IAAM,KAAK,IAAK,IAAKC,IAAM,KAAK,IAAK,KAAMM,IAAM,KAAK,IAAK,KAChFC,IAAM,KAAK,IAAK,KAAMC,IAAM,KAAK,IAAK,KAAMC,IAAM,KAAK,IAAK,KAAMC,IAAM,KAAK,IAAK;AAEnF,gBAAK,IAAK,KAAMlB,GAAK,KAAK,IAAK,KAAMG,GAAK,KAAK,IAAK,KAAMG,GAAK,KAAK,IAAK,KAAMS,GAC/E,KAAK,IAAK,KAAMd,GAAK,KAAK,IAAK,KAAMG,GAAK,KAAK,IAAK,KAAMG,GAAK,KAAK,IAAK,KAAMS,GAC/E,KAAK,IAAK,KAAMd,GAAK,KAAK,IAAK,KAAMG,GAAK,KAAK,IAAK,MAAOG,GAAK,KAAK,IAAK,MAAOS,GACjF,KAAK,IAAK,MAAOL,GAAK,KAAK,IAAK,MAAOC,GAAK,KAAK,IAAK,MAAOC,GAAK,KAAK,IAAK,MAAOI,GAE5E;AAAA,EAER;AAAA,EAEO,IAAKnB,GAAgB;AV5JtB,QAAAb;AU8JL,aAAU,IAAI,GAAG,IAAI,KAAK,IAAI,QAAQ;AAEhC,WAAA,IAAK,MAAMA,IAAAa,EAAK,OAAL,OAAAb,IAAY;AAItB,WAAA;AAAA,EAER;AAAA,EAEO,iBAAkBoF,GAAeC,GAA4BC,GAAkB;AAErF,gBAAK,SAAS,GAEd,KAAK,cAAeF,CAAI,GAExB,KAAK,gBAAiBC,CAAI,GAE1B,KAAK,WAAYC,CAAM,GAEhB;AAAA,EAER;AAAA,EAEO,cAAeC,GAAqB;AAE1C,gBAAK,OAAQ;AAAA,MACZ;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MACT;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MACT;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MACTA,EAAS;AAAA,MAAGA,EAAS;AAAA,MAAGA,EAAS;AAAA,MAAG;AAAA,IAAA,CACnC,GAEK;AAAA,EAER;AAAA,EAEO,gBAAiBX,GAA2B;AAE5C,UAAAjF,IAAIiF,EAAE,GAAGhF,IAAIgF,EAAE,GAAG/E,IAAI+E,EAAE,GAAG9E,IAAI8E,EAAE,GACjCrD,IAAK5B,IAAIA,GAAG6B,IAAK5B,IAAIA,GAAG6B,IAAK5B,IAAIA,GAAGoC,IAAKnC,IAAIA,GAC7C0F,IAAK7F,IAAIC,GAAG6F,IAAK9F,IAAIE,GAAG6F,IAAK/F,IAAIG,GAAG6F,IAAK/F,IAAIC,GAAG+F,IAAKhG,IAAIE,GAAG+F,IAAKhG,IAAIC;AAE3E,gBAAK,OAAQ;AAAA,MACZyB,IAAKC,IAAKC,IAAKQ;AAAA,MACf,KAAMuD,IAAKK;AAAA,MACX,KAAMJ,IAAKG;AAAA,MACX;AAAA,MAEA,KAAMJ,IAAKK;AAAA,MACX,CAAEtE,IAAKC,IAAKC,IAAKQ;AAAA,MACjB,KAAM0D,IAAKD;AAAA,MACX;AAAA,MAEA,KAAMD,IAAKG;AAAA,MACX,KAAMD,IAAKD;AAAA,MACX,CAAEnE,IAAKC,IAAKC,IAAKQ;AAAA,MAEjB;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,IAAA,CACX,GAEK;AAAA,EAER;AAAA,EAEO,WAAYqD,GAAkB;AAEpC,gBAAK,OAAQ;AAAA,MACZA,EAAM;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MACf;AAAA,MAAGA,EAAM;AAAA,MAAG;AAAA,MAAG;AAAA,MACf;AAAA,MAAG;AAAA,MAAGA,EAAM;AAAA,MAAG;AAAA,MACf;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,IAAA,CACR,GAEK;AAAA,EAER;AAAA,EAEU,OAAQQ,GAAiB;AAE5B,UAAAC,IAAO,IAAI,MAAO,EAAG;AAE3B,aAAU,IAAI,GAAG,IAAI,GAAG;AAEvB,eAAUzB,IAAI,GAAGA,IAAI,GAAGA,KAAO;AAE9B,YAAI0B,IAAM;AAEV,iBAAUzB,IAAI,GAAGA,IAAI,GAAGA;AAEvB,UAAAyB,KAAO,KAAK,IAAKzB,IAAI,IAAID,KAAMwB,EAAMvB,IAAI,IAAI;AAIxC,QAAAwB,EAAAzB,IAAI,IAAI,KAAM0B;AAAA,MAErB;AAID,SAAK,MAAMD;AAAA,EAEZ;AAAA,EAEO,yBAA0BE,GAAqBpC,GAAgB;AAErE,IAAAA,IAAKA,KAAM,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG;AAE5B,UAAMC,IAAQ,IAAIpE,IAAS,KAAMuG,CAAU,EAAE,aACvClC,IAAQ,IAAIrE,EAAA,EAAS,KAAMmE,CAAG,EAAE,MAAOC,CAAM,EAAE;AAEhD,IAAAC,EAAM,OAAO,KAAK,MAEtBD,EAAM,KAAK,MAEXC,EAAM,KAAMF,CAAG,EAAE,MAAOC,CAAM,EAAE;AAIjC,UAAME,IAAQF,EAAM,MAAA,EAAQ,MAAOC,CAAM,EAAE;AAE3C,gBAAK,IAAK;AAAA,MACTA,EAAM;AAAA,MAAGA,EAAM;AAAA,MAAGA,EAAM;AAAA,MAAG;AAAA,MAC3BC,EAAM;AAAA,MAAGA,EAAM;AAAA,MAAGA,EAAM;AAAA,MAAG;AAAA,MAC3BF,EAAM;AAAA,MAAGA,EAAM;AAAA,MAAGA,EAAM;AAAA,MAAG;AAAA,MAC3B;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,IAAA,CACR,GAEK;AAAA,EAER;AAAA,EAEA,iBAAkBoC,GAAgBC,GAAgB;AAI3C,UAAAlC,IAAI,KAAK,IAAKkC,CAAM,GACpB,IAAI,KAAK,IAAKA,CAAM,GACpBpH,IAAI,IAAIkF,GACRtE,IAAIuG,EAAK,GAAGtG,IAAIsG,EAAK,GAAGrG,IAAIqG,EAAK,GACjCE,IAAKrH,IAAIY,GAAG0G,IAAKtH,IAAIa;AAEtB,gBAAA;AAAA,MACJ;AAAA,QACCwG,IAAKzG,IAAIsE;AAAA,QAAGmC,IAAKxG,IAAI,IAAIC;AAAA,QAAGuG,IAAKvG,IAAI,IAAID;AAAA,QAAG;AAAA,QAC5CwG,IAAKxG,IAAI,IAAIC;AAAA,QAAGwG,IAAKzG,IAAIqE;AAAA,QAAGoC,IAAKxG,IAAI,IAAIF;AAAA,QAAG;AAAA,QAC5CyG,IAAKvG,IAAI,IAAID;AAAA,QAAGyG,IAAKxG,IAAI,IAAIF;AAAA,QAAGZ,IAAIc,IAAIA,IAAIoE;AAAA,QAAG;AAAA,QAC/C;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,MACV;AAAA,IAAA,GAGM;AAAA,EAER;AAAA,EAEO,SAAUqC,GAAY;AAEvB,gBAAA,OAAQA,EAAE,GAAI,GAEZ;AAAA,EAER;AAAA,EAEO,YAAaA,GAAY;AAE/B,UAAMC,IAAM,KAAK,YAAa,CAAG,CAAA;AAE5B,gBAAA,IAAKD,EAAE,GAAI,GAEhB,KAAK,OAAQC,CAAI,GAEV;AAAA,EAER;AAAA,EAEO,UAAWnB,GAAgBoB,GAAkBlB,GAAmB;AAEtE,IAAKF,MAEAA,EAAA,IAAI,KAAK,IAAK,KACdA,EAAA,IAAI,KAAK,IAAK,KACdA,EAAA,IAAI,KAAK,IAAK,MAIdoB,KAEJA,EAAI,cAAe,IAAK;AAAA,EAU1B;AAAA,EAEO,YAAaC,GAAkB;AAE/B,IAAAA,EAAA,SAAS,KAAK,IAAI;AAExB,aAAUzH,IAAI,GAAGA,IAAI,KAAK,IAAI,QAAQA;AAE9B,MAAAyH,EAAAzH,KAAM,KAAK,IAAKA;AAIjB,WAAAyH;AAAA,EAER;AAED;AC3WO,MAAMC,WAAchH,EAAO;AAAA,EAIjC,YAAaC,GAAwBC,GAAwBC,GAAwB8G,GAAqB;AAElG,UAAAhH,GAAGC,GAAGC,GAAG,CAAE,GAElB,KAAK,QAAQ8G,KAAS;AAAA,EAEvB;AAAA,EAEO,KAAM5G,GAAqD;AAEjE,WAAK,WAAWA,MAEf,KAAK,QAAQA,EAAE,QAIT,MAAM,KAAMA,CAAE;AAAA,EAEtB;AAAA,EAEO,kBAAmB6E,GAAgB;AAEzC,UAAMgC,IAAS,IAAIvD,EAAO,EAAE,gBAAiBuB,CAAE;AAE/C,gBAAK,sBAAuBgC,CAAO,GAE5B;AAAA,EAER;AAAA,EAEO,sBAAuBN,GAAY;AAEzC,UAAMO,IAAKP,EAAE,KACPQ,IAAMD,EAAI,IAAKE,IAAMF,EAAI,IAAKG,IAAMH,EAAI;AAClC,IAAAA,EAAI;AAAA,UAAKI,IAAMJ,EAAI,IAAKK,IAAML,EAAI;AAClC,IAAAA,EAAI;AAAA,UAAKM,IAAMN,EAAI,IAAKO,IAAMP,EAAI;AAE9C,gBAAK,QAAQ,OAER,KAAA,IAAI,KAAK,KAAM,KAAK,IAAK,GAAK,KAAK,IAAK,IAAOG,CAAI,CAAE,CAAE,GAEvD,KAAK,IAAKA,CAAI,IAAI,aAEtB,KAAK,IAAI,KAAK,MAAO,CAAEE,GAAKE,CAAI,GAChC,KAAK,IAAI,KAAK,MAAO,CAAEL,GAAKD,CAAI,MAIhC,KAAK,IAAI,KAAK,MAAOK,GAAKF,CAAI,GAC9B,KAAK,IAAI,IAIH;AAAA,EAER;AAED;AC1DO,MAAMI,EAAW;AAAA,EASvB,YAAa1H,GAAYC,GAAYC,GAAYC,GAAa;AAF9D,SAAO,UAAmB,IAIzB,KAAK,IAAI,GACT,KAAK,IAAI,GACT,KAAK,IAAI,GACT,KAAK,IAAI,GAET,KAAK,IAAKH,GAAGC,GAAGC,GAAGC,CAAE;AAAA,EAEtB;AAAA,EAEO,IAAKH,GAAYC,GAAYC,GAAYC,GAAa;AAEvD,SAAA,IAAIH,KAAA,OAAAA,IAAK,KAAK,GACd,KAAA,IAAIC,KAAA,OAAAA,IAAK,KAAK,GACd,KAAA,IAAIC,KAAA,OAAAA,IAAK,KAAK,GACd,KAAA,IAAIC,KAAA,OAAAA,IAAK,KAAK,GAEnB,KAAK,UAAU;AAAA,EAEhB;AAAA,EAEO,aAAcwH,GAAkCC,GAA8B;AAEpF,UAAMZ,IAAQY,MAAoB,WAAWD,IAAQA,EAAM,QAAQ,QAE7DE,IAAK,KAAK,IAAKF,EAAM,IAAI,CAAE,GAC3BG,IAAK,KAAK,IAAKH,EAAM,IAAI,CAAE,GAC3BI,IAAK,KAAK,IAAKJ,EAAM,IAAI,CAAE,GAE3BK,IAAK,KAAK,IAAKL,EAAM,IAAI,CAAE,GAC3BM,IAAK,KAAK,IAAKN,EAAM,IAAI,CAAE,GAC3BO,IAAK,KAAK,IAAKP,EAAM,IAAI,CAAE;AAEjC,WAAKX,KAAS,SAEb,KAAK,IAAIgB,IAAKF,IAAKC,IAAKF,IAAKI,IAAKC,GAClC,KAAK,IAAI,CAAEL,IAAKI,IAAKF,IAAKC,IAAKF,IAAKI,GACpC,KAAK,IAAIF,IAAKC,IAAKF,IAAKF,IAAKC,IAAKI,GAClC,KAAK,IAAI,CAAEL,IAAKC,IAAKC,IAAKC,IAAKC,IAAKC,KAEzBlB,KAAS,SAEpB,KAAK,IAAI,CAAEgB,IAAKF,IAAKC,IAAKF,IAAKI,IAAKC,GACpC,KAAK,IAAIF,IAAKF,IAAKI,IAAKL,IAAKI,IAAKF,GAClC,KAAK,IAAIF,IAAKC,IAAKI,IAAKF,IAAKC,IAAKF,GAClC,KAAK,IAAIF,IAAKC,IAAKC,IAAKC,IAAKC,IAAKC,KAEvBlB,KAAS,SAEpB,KAAK,IAAIa,IAAKI,IAAKC,IAAKF,IAAKF,IAAKC,GAClC,KAAK,IAAIF,IAAKI,IAAKF,IAAKC,IAAKF,IAAKI,GAClC,KAAK,IAAI,CAAEL,IAAKC,IAAKI,IAAKF,IAAKC,IAAKF,GACpC,KAAK,IAAI,CAAEF,IAAKC,IAAKC,IAAKC,IAAKC,IAAKC,KAEzBlB,KAAS,UAEpB,KAAK,IAAIa,IAAKI,IAAKC,IAAKF,IAAKF,IAAKC,GAClC,KAAK,IAAIF,IAAKI,IAAKF,IAAKC,IAAKF,IAAKI,GAClC,KAAK,IAAI,CAAEL,IAAKC,IAAKI,IAAKF,IAAKC,IAAKF,GACpC,KAAK,IAAIF,IAAKC,IAAKC,IAAKC,IAAKC,IAAKC,IAInC,KAAK,UAAU,IAER;AAAA,EAER;AAAA,EAIO,cAAejB,GAAiB;AAEtC,UAAM/F,IAAM+F,EAAO,KAEbkB,IAAQjH,EAAK,KAAMA,EAAK,KAAMA,EAAK;AACrC,QAAAkH,GAAIC,GAAIC,GAAIC;AAEhB,QAAKJ,IAAQ,GAAI;AAEhB,YAAMhD,IAAI,KAAK,KAAMgD,IAAQ,CAAI,IAAI;AACrC,MAAAI,IAAK,OAAOpD,GACLiD,KAAAlH,EAAK,KAAMA,EAAK,MAAQiE,GACxBkD,KAAAnH,EAAK,KAAMA,EAAK,MAAQiE,GACxBmD,KAAApH,EAAK,KAAMA,EAAK,MAAQiE;AAAA,IAEhC,WAAYjE,EAAK,KAAMA,EAAK,MAAOA,EAAK,KAAMA,EAAK,KAAO;AAEnD,YAAAiE,IAAI,KAAK,KAAM,IAAMjE,EAAK,KAAMA,EAAK,KAAMA,EAAK,GAAK,IAAI;AACxD,MAAAqH,KAAArH,EAAK,KAAMA,EAAK,MAAQiE,GAC/BiD,IAAK,OAAOjD,GACLkD,KAAAnH,EAAK,KAAMA,EAAK,MAAQiE,GACxBmD,KAAApH,EAAK,KAAMA,EAAK,MAAQiE;AAAA,IAEpB,WAAAjE,EAAK,KAAMA,EAAK,KAAO;AAE5B,YAAAiE,IAAI,KAAK,KAAM,IAAMjE,EAAK,KAAMA,EAAK,KAAMA,EAAK,GAAK,IAAI;AACxD,MAAAqH,KAAArH,EAAK,KAAMA,EAAK,MAAQiE,GACxBiD,KAAAlH,EAAK,KAAMA,EAAK,MAAQiE,GAC/BkD,IAAK,OAAOlD,GACLmD,KAAApH,EAAK,KAAMA,EAAK,MAAQiE;AAAA,IAAA,OAEzB;AAEA,YAAAA,IAAI,KAAK,KAAM,IAAMjE,EAAK,MAAOA,EAAK,KAAMA,EAAK,EAAI,IAAI;AACxD,MAAAqH,KAAArH,EAAK,KAAMA,EAAK,MAAQiE,GACxBiD,KAAAlH,EAAK,KAAMA,EAAK,MAAQiE,GACxBkD,KAAAnH,EAAK,KAAMA,EAAK,MAAQiE,GAC/BmD,IAAK,OAAOnD;AAAA,IAEb;AAEM,UAAA1E,IAAS,KAAK,KAAM2H,IAAKA,IAAKC,IAAKA,IAAKC,IAAKA,IAAKC,IAAKA,CAAG;AAC1D,WAAAH,KAAA3H,GACA4H,KAAA5H,GACA6H,KAAA7H,GACA8H,KAAA9H,GAEN,KAAK,IAAI2H,GACT,KAAK,IAAIC,GACT,KAAK,IAAIC,GACT,KAAK,IAAIC,GAET,KAAK,UAAU,IAER;AAAA,EAER;AAAA,EAEO,SAAUtD,GAAgB;AAEhC,UAAM9E,IAAI,KAAK,IAAI8E,EAAE,IAAI,KAAK,IAAIA,EAAE,IAAI,KAAK,IAAIA,EAAE,IAAI,KAAK,IAAIA,EAAE,GAC5DjF,IAAI,KAAK,IAAIiF,EAAE,IAAI,KAAK,IAAIA,EAAE,IAAI,KAAK,IAAIA,EAAE,IAAI,KAAK,IAAIA,EAAE,GAC5DhF,IAAI,KAAK,IAAIgF,EAAE,IAAI,KAAK,IAAIA,EAAE,IAAI,KAAK,IAAIA,EAAE,IAAI,KAAK,IAAIA,EAAE,GAC5D/E,IAAI,KAAK,IAAI+E,EAAE,IAAI,KAAK,IAAIA,EAAE,IAAI,KAAK,IAAIA,EAAE,IAAI,KAAK,IAAIA,EAAE;AAElE,gBAAK,IAAKjF,GAAGC,GAAGC,GAAGC,CAAE,GAErB,KAAK,UAAU,IAER;AAAA,EAER;AAAA,EAEO,UAAU;AAEX,gBAAA,IAAK,CAAE,KAAK,GAAG,CAAE,KAAK,GAAG,CAAE,KAAK,GAAG,KAAK,CAAE,GAE/C,KAAK,UAAU,IAER;AAAA,EAER;AAAA,EAEO,KAAMC,GAA2C;AZ/KlD,QAAAC,GAAAC,GAAAC,GAAAC;AYiLA,gBAAA,KAAIH,IAAAD,EAAE,MAAF,OAAAC,IAAO,GACX,KAAA,KAAIC,IAAAF,EAAE,MAAF,OAAAE,IAAO,GACX,KAAA,KAAIC,IAAAH,EAAE,MAAF,OAAAG,IAAO,GACX,KAAA,KAAIC,IAAAJ,EAAE,MAAF,OAAAI,IAAO,GAEhB,KAAK,UAAU,IAER;AAAA,EAER;AAAA,EAEO,QAAQ;AAEP,WAAA,IAAIkH,EAAY,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,CAAE;AAAA,EAEvD;AAED;AChMiB,IAAAc;AAAA,CAAV,CAAUA,MAAV;AAEOA,EAAAA,EAAA,aAAa,CAAErD,MAAe;AAG1C,IAAAA,KAAKA,KAAK,IAAIA,KAAK,MAAM,IAAIA,KAAKA,KAAK;AACvC,QAAInF,IAAI,YAAYmF;AACpB,IAAAA,KAAKA,KAAK,IAAIA,KAAK,MAAM,IAAIA,KAAKA,KAAK;AACvC,QAAIlF,IAAI,YAAYkF;AACpB,IAAAA,KAAKA,KAAK,IAAIA,KAAK,MAAM,IAAIA,KAAKA,KAAK;AACvC,QAAIjF,IAAI,YAAYiF;AACpB,IAAAA,KAAKA,KAAK,IAAIA,KAAK,MAAM,IAAIA,KAAKA,KAAK;AACvC,QAAIhF,IAAI,WAAWgF,GACf/F;AAYG,WAVQ,OAEdA,IAAIY,IAAMA,KAAK,IACXA,IAAAC,GAAOA,IAAAC,GAAOA,IAAAC,GAElBA,KAAQA,IAAMA,MAAM,MAAWf,IAAMA,MAAM,QAAY,GAChDe,IAAI;AAAA,EAIL,GAIKqI,EAAA,cAAc,CAAEpI,IAAY,IAAKmC,IAAY,MAElDnC,IAAI,KAAK,OAAO,KAAMmC,IAAInC,IAIrBoI,EAAA,eAAe,CAAEpI,IAAY,IAAIL,EAAQ,IAAK,IAAK,IAAK,EAAI,GAAGwC,IAAY,IAAIxC,EAAQ,GAAG,GAAG,GAAG,CAAE,MAEvG,IAAIA;AAAA,IACVyI,EAAA,YAAapI,EAAE,GAAGmC,EAAE,CAAE;AAAA,IACtBiG,EAAA,YAAapI,EAAE,GAAGmC,EAAE,CAAE;AAAA,IACtBiG,EAAA,YAAapI,EAAE,GAAGmC,EAAE,CAAE;AAAA,IACtBiG,EAAA,YAAapI,EAAE,GAAGmC,EAAE,CAAE;AAAA,EAAA;AAGxB,GA5CgBiG,MAAAA,IAAA,CAAA,EAAA;ACOV,MAAMC,EAAa;AAAA,EAIzB,cAAc;AAEb,SAAK,YAAY;EAElB;AAAA,EAEO,GAAIC,GAAezK,GAAuB;AAEhD,SAAK,UAAU,KAAM;AAAA,MACpB,OAAAyK;AAAA,MACA,IAAAzK;AAAA,IAAA,CACC;AAAA,EAEH;AAAA,EAEO,KAAMyK,GAAezK,GAAuB;AAElD,SAAK,UAAU,KAAM;AAAA,MACpB,OAAAyK;AAAA,MACA,IAAAzK;AAAA,MACA,MAAM;AAAA,IAAA,CACL;AAAA,EAEH;AAAA,EAEO,IAAKyK,GAAezK,GAAwB;AAElD,SAAK,YAAY,KAAK,UAAU,OAAQ,CAAK4G,MAEvC5G,KAAM,OAEC4G,EAAE,SAAS6D,IAIhB,EAAI7D,EAAE,SAAS6D,KAAS7D,EAAE,MAAM5G,EAEtC;AAAA,EAEH;AAAA,EAEO,KAAMyK,GAAeC,GAAe;AAEpC,UAAAC,IAAc,KAAK,UAAU,OAAO;AAE1C,aAAUvJ,IAAI,GAAGA,IAAIuJ,EAAY,QAAQvJ,KAAO;AAE/C,YAAMwJ,IAAWD,EAAavJ;AAEzB,MAAAwJ,EAAS,SAASH,MAEtBG,EAAS,GAAG,MAAO,MAAMF,KAAQ,CAAG,CAAA,GAE/BE,EAAS,QAER,KAAA,IAAKH,GAAOG,EAAS,EAAG;AAAA,IAMhC;AAAA,EAED;AAAA,EAEO,SAAUH,GAAgB;AAEhC,WAAO,KAAK,UAAU,KAAM,CAAK7D,MAAAA,EAAE,SAAS6D,CAAM;AAAA,EAEnD;AAED;AC/EiB,IAAAI;AAAA,CAAV,CAAUA,MAAV;AAWOA,EAAAA,EAAA,oBAAoB,GACpBA,EAAA,mBAAmB,MACnBA,EAAA,wBAAwB,MACxBA,EAAA,6BAA6B,IAC7BA,EAAA,2BAA2B,IAC3BA,EAAA,iCAAiC,IAAMA,EAAA;AAEpD,WAASC,EAAa/D,GAAyB;AAEvC,WAAA,CAAEA,EAAE,KAAK,IAAMA,EAAE,KAAK,IAAMA,EAAE,KAAKA,EAAE;AAAA,EAE7C;AACA,WAASgE,EAAahE,GAAyB;AAE9C,WAAO,IAAMA,EAAE,KAAK,IAAMA,EAAE,KAAK,IAAMA,EAAE;AAAA,EAE1C;AACA,WAASiE,EAAajE,GAAyB;AAE9C,WAAO,KAAQA,EAAE,KAAK,IAAMA,EAAE;AAAA,EAE/B;AAEgB,WAAAkE,EAAiBlE,GAAwB5F,GAAY;AAEpE,WAAO,IAAM2J,EAAa/D,CAAE,IAAI5F,IAAIA,IAAI,IAAM4J,EAAahE,CAAE,IAAI5F,IAAI6J,EAAajE,CAAE;AAAA,EAErF;AAJO8D,EAAAA,EAAS,kBAAAI;AAMA,WAAAC,EAAYnE,GAAwB5F,GAAY;AAE/D,aAAW2J,EAAa/D,CAAE,IAAI5F,IAAI4J,EAAahE,CAAE,KAAM5F,IAAI6J,EAAajE,CAAE,KAAM5F,IAAI4F,EAAE;AAAA,EAEvF;AAJO8D,EAAAA,EAAS,aAAAK;AAMhB,WAASC,EAAQpJ,GAAWqJ,GAAgBC,GAActE,GAAyB;AAElF,QAAIuE,IAAW,GACXC,IAAW;AAEf,aAAUnK,IAAI,GAAGA,IAAIyJ,EAAA,4BAA4BzJ;AAErC,MAAAmK,IAAAH,KAAWC,IAAOD,KAAW,GAC7BE,IAAAJ,EAAYnE,GAAGwE,CAAS,GAE9BD,IAAWvJ,IAERsJ,IAAAE,IAIEH,IAAAG;AAMJ,WAAAA;AAAA,EAER;AAES,WAAAC,EAAQzJ,GAAUgF,GAAwB5F,GAAY;AAE9D,aAAUC,IAAI,GAAGA,IAAIyJ,EAAA,mBAAmBzJ,KAAO;AAExC,YAAAqK,IAAQR,EAAiBlE,GAAG5F,CAAE;AAEpC,UAAKsK,KAAS;AAEN,eAAAtK;AAKR,MAAAA,MADmB+J,EAAYnE,GAAG5F,CAAE,IAAMY,KAC1B0J;AAAA,IAEjB;AAEO,WAAAtK;AAAA,EAER;AAEgB,WAAAuK,EAAiB3E,GAAwBhF,GAAW4J,GAAkB;AAEnF,IAAA5E,EAAA,KAAK,KAAK,IAAKA,EAAE,IAAI,KAAK,IAAKA,EAAE,IAAIA,EAAE,EAAG,CAAE,GAC5CA,EAAA,KAAK,KAAK,IAAKA,EAAE,IAAI,KAAK,IAAKA,EAAE,IAAIA,EAAE,EAAG,CAAE;AAE9C,QAAI6E,IAAS;AAEb,aAAUxK,IAAI,GAAGA,IAAIuK,EAAM,WAE1BC,IAASxK,IAAI,GACR,EAAAW,IAAI4J,EAAOvK,MAHkBA;AAGlC;AAIK,UAAAD,IAAIyK,KAAWf,EAAA,2BAA2B,IAC1CgB,IAAOZ,EAAiBlE,GAAG5F,CAAE,KAAM4F,EAAE,KAAKA,EAAE;AAElD,WAAK8E,KAAQ,IAEL1K,IAEI0K,IAAO,OAEXL,EAAQzJ,GAAGgF,GAAG5F,CAAE,IAIhBgK,EAAQpJ,GAAGZ,GAAGA,IAAI0J,EAAA,gCAAgC9D,CAAE;AAAA,EAK7D;AAhCO8D,EAAAA,EAAS,kBAAAa;AAAA,GA7FAb,MAAAA,IAAA,CAAA,EAAA;ACCA,IAAAiB;AAAA,CAAV,CAAUA,MAAV;AAEU,WAAAC,EAASC,IAAiB,GAAgB;AAEzD,WAAO,CAAEjK,MAAe;AAEvB,YAAMkK,IAAK,KAAK,IAAK,CAAED,KAAW,IAAIjK,IAAI,EAAI,GACxCmK,IAAK,KAAK,IAAK,CAAEF,CAAO;AAErB,cAAA,KAAM,IAAIC,MAAS,IAAIA,MAAS,IAAIC,MAAS,IAAIA,MAAS;AAAA,IAAA;AAAA,EAIrE;AAXOJ,EAAAA,EAAS,UAAAC;AAaA,WAAAI,EAAYC,GAAaC,GAAahL,GAAwB;AAEvE,UAAAU,IAAI,KAAK,IAAK,GAAG,KAAK,IAAK,IAAKV,IAAQ+K,MAAUC,IAAMD,EAAM,CAAE;AAC/D,WAAArK,IAAIA,KAAM,IAAI,IAAIA;AAAA,EAE1B;AALO+J,EAAAA,EAAS,aAAAK;AAWT,WAASG,EAAQnL,GAAY;AAE5B,WAAAA;AAAA,EAER;AAJO2K,EAAAA,EAAS,SAAAQ;AAMT,WAASC,EAAYpL,GAAY;AAEvC,WAAOA,IAAIA;AAAA,EAEZ;AAJO2K,EAAAA,EAAS,aAAAS;AAMT,WAASC,EAAarL,GAAY;AAExC,WAAOA,KAAM,IAAIA;AAAA,EAElB;AAJO2K,EAAAA,EAAS,cAAAU;AAMT,WAASC,EAAetL,GAAY;AAEnC,WAAAA,IAAI,MAAK,IAAIA,IAAIA,IAAI,MAAQ,IAAI,IAAIA,KAAMA;AAAA,EAEnD;AAJO2K,EAAAA,EAAS,gBAAAW;AAMT,WAASC,EAAavL,GAAY;AAExC,WAAOA,IAAIA,IAAIA;AAAA,EAEhB;AAJO2K,EAAAA,EAAS,cAAAY;AAMT,WAASC,EAAcxL,GAAY;AAEhC,WAAA,EAAGA,IAAMA,IAAIA,IAAI;AAAA,EAE3B;AAJO2K,EAAAA,EAAS,eAAAa;AAMT,WAASC,EAAgBzL,GAAY;AAE3C,WAAOA,IAAI,MAAK,IAAIA,IAAIA,IAAIA,KAAMA,IAAI,MAAQ,IAAIA,IAAI,MAAQ,IAAIA,IAAI,KAAM;AAAA,EAE7E;AAJO2K,EAAAA,EAAS,iBAAAc;AAMT,WAASC,EAAa1L,GAAY;AAEjC,WAAAA,IAAIA,IAAIA,IAAIA;AAAA,EAEpB;AAJO2K,EAAAA,EAAS,cAAAe;AAMT,WAASC,EAAc3L,GAAY;AAEzC,WAAO,IAAM,EAAGA,IAAMA,IAAIA,IAAIA;AAAA,EAE/B;AAJO2K,EAAAA,EAAS,eAAAgB;AAMT,WAASC,EAAgB5L,GAAY;AAE3C,WAAOA,IAAI,MAAK,IAAIA,IAAIA,IAAIA,IAAIA,IAAI,IAAI,IAAM,EAAGA,IAAMA,IAAIA,IAAIA;AAAA,EAEhE;AAJO2K,EAAAA,EAAS,iBAAAiB;AAMT,WAASC,EAAa7L,GAAY;AAEjC,WAAAA,IAAIA,IAAIA,IAAIA,IAAIA;AAAA,EAExB;AAJO2K,EAAAA,EAAS,cAAAkB;AAMT,WAASC,EAAc9L,GAAY;AAEzC,WAAO,IAAM,EAAGA,IAAMA,IAAIA,IAAIA,IAAIA;AAAA,EAEnC;AAJO2K,EAAAA,EAAS,eAAAmB;AAMP,WAASC,EAAgB/L,GAAY;AAE3C,WAAOA,IAAI,MAAK,KAAKA,IAAIA,IAAIA,IAAIA,IAAIA,IAAI,IAAI,KAAO,EAAGA,IAAMA,IAAIA,IAAIA,IAAIA;AAAA,EAE1E;AAJO2K,EAAAA,EAAS,iBAAAoB;AAMX,WAASC,EAAQC,GAAcC,GAAcC,GAAcC,GAA2B;AAE5F,UAAM5B,IAAQ,IAAI,MAAOd,EAAO,wBAAyB;AAEzD,aAAUzJ,IAAI,GAAGA,IAAIyJ,EAAO,0BAA0B,EAAGzJ;AAEjD,MAAAuK,EAAAvK,KAAMyJ,EAAO,WAAY,EAAE,IAAIuC,EAAG,GAAG,IAAIC,EAAG,GAAG,IAAIC,EAAG,GAAG,IAAIC,EAAG,EAAA,GAAKnM,KAAMyJ,EAAO,2BAA2B,EAAM;AAI3H,WAAO,CAAE9I,MAEHA,KAAKqL,EAAG,IAAWA,EAAG,IACtBG,EAAG,KAAKxL,IAAWwL,EAAG,IAEpB1C,EAAO,WAAY,EAAE,IAAIuC,EAAG,GAAG,IAAIC,EAAG,GAAG,IAAIC,EAAG,GAAG,IAAIC,EAAG,KAAK1C,EAAO,gBAAiB,EAAE,IAAIuC,EAAG,GAAG,IAAIC,EAAG,GAAG,IAAIC,EAAG,GAAG,IAAIC,EAAG,EAAK,GAAAxL,GAAG4J,CAAM,CAAE;AAAA,EAIvJ;AAnBOG,EAAAA,EAAS,SAAAqB;AAqBT,WAASK,EAAaC,GAAaC,GAAaC,GAAaC,GAAc;AAE1E,WAAAT;AAAA,MACN,EAAE,GAAG,GAAK,GAAG,EAAI;AAAA,MACjB,EAAE,GAAGM,GAAK,GAAGC,EAAI;AAAA,MACjB,EAAE,GAAGC,GAAK,GAAGC,EAAI;AAAA,MACjB,EAAE,GAAG,GAAK,GAAG,EAAI;AAAA,IAAA;AAAA,EAGnB;AATO9B,EAAAA,EAAS,cAAA0B;AAAA,GA7HA1B,MAAAA,IAAA,CAAA,EAAA;ACAA,IAAA+B;AAAA,CAAV,CAAUA,MAAV;AAEOA,EAAAA,EAAA,SAA2B,CAAE1L,GAAWmC,GAAWnD,MAExDgB,KAAMmC,IAAInC,KAAMhB,GAIX0M,EAAA,SAA2B,CAAE1L,GAAWmC,GAAWnD,MAExDgB,EAAE,KAAMmC,GAAGnD,CAAE;AAErB,GAZgB0M,MAAAA,IAAA,CAAA,EAAA;ACiBjB,MAAMC,IAAW,CAAEjM,MAEb,OAAOA,KAAU,WAEdA,IAEI,WAAWA,IAEfA,EAAO,UAIRA,GAIFkM,IAAU,CAAElM,GAA8BmM,MAE1C,OAAOnM,KAAU,WAEdmM,IAEI,WAAWnM,KAAU,OAAOmM,KAAU,WAE1CnM,EAAO,KAAMmM,CAAO,IAIrBA,GAIFC,IAAc,CAAkC5M,MAEhD,OAAOA,KAAS,WAEbwM,EAAM,SAKNA,EAAM,QAMTK,IAAkB,CAAE7M,MAEpB,OAAOA,KAAS,WAEb,OAIA;AAMF,MAAM8M,WAAiB3D,EAAa;AAAA,EAI1C,cAAc;AAEP,aAED,KAAA,gCAAgB;EAEtB;AAAA,EAEO,IAAKjL,GAAc6O,GAA4BC,IAAqBvC,EAAQ,gBAAgBtL,GAAqB;AAElH,SAAA,UAAU,IAAKjB,GAAM;AAAA,MACzB,MAAM;AAAA,MACN,UAAU;AAAA,MACV,OAAO6O;AAAA,MACP,YAAYN,EAAUM,CAAK;AAAA,MAC3B,UAAUN,EAAUM,CAAK;AAAA,MACzB,YAAYC;AAAA,MACZ,UAAUJ,EAAaG,CAAK;AAAA,MAC5B,WAAW;AAAA,MACX,MAAMF,EAAiBE,CAAK,KAAK5N;AAAA,IAAA,CAChC;AAAA,EAEH;AAAA,EAEO,IAAqCjB,GAA2C;AlBhHjF,QAAA6C;AkBkHL,YAAOA,IAAA,KAAK,UAAU,IAAK7C,CAAK,MAAzB,OAAA6C,IAA8B;AAAA,EAEtC;AAAA,EAEO,SAA0C7C,GAAyB;AAEnE,UAAA+O,IAAM,KAAK,IAAQ/O,CAAK;AAE9B,WAAK+O,MAAQ,OAAc,OAEpBA,EAAI;AAAA,EAEZ;AAAA,EAEO,OAAQ/O,GAAe;AAE7B,UAAMkD,IAAI,KAAK,UAAU,IAAKlD,CAAK;AAEnC,IAAK,CAAEkD,MAEPA,EAAE,YAAY;AAAA,EAEf;AAAA,EAEO,QAASlD,GAAc8B,GAA6BkN,IAAmB,GAAGvO,GAAkB;AAElG,UAAMyC,IAAI,KAAK,UAAU,IAAKlD,CAAK;AAEnC,IAAK,CAAEkD,MAEPA,EAAE,YAAY,IACdA,EAAE,aAAasL,EAAStL,EAAE,YAAYA,EAAE,KAAM,GAC9CA,EAAE,WAAWsL,EAAStL,EAAE,UAAUpB,CAAM,GACxCoB,EAAE,WAAW8L,GACb9L,EAAE,WAAWzC,GACbyC,EAAE,OAAO,GAEJ8L,MAAa,MAEjB9L,EAAE,YAAY,IACdA,EAAE,QAAQsL,EAAStL,EAAE,OAAOpB,CAAM,GAChCoB,EAAA,YAAYA,EAAE;EAIlB;AAAA,EAEO,OAAQ+L,GAAoB;AAE7B,SAAA,UAAU,QAAS,CAAK/L,MAAA;AAE5B,MAAK,CAAEA,EAAE,cAEJA,EAAE,QAAQ,MAEdA,EAAE,YAAY,IACdA,EAAE,OAAO,IAIVA,EAAE,QAAQsL,EAAStL,EAAE,OAAOA,EAAE,UAAW,GACvCA,EAAA,QAAQA,EAAE,SAAUA,EAAE,OAAOA,EAAE,UAAUA,EAAE,WAAYA,EAAE,IAAK,CAAE,GAChEA,EAAA,QAAQ+L,IAAY/L,EAAE,UAEnBA,EAAE,aAAa,MAEjBA,EAAA,YAAYA,EAAE;IAEjB,CAEC;AAAA,EAEH;AAED;ACxLO,MAAMgM,WAAejE,EAAa;AAAA,EAUxC,YAAakE,GAA4B;AAElC,aAVP,KAAO,YAA8B,IAErC,KAAQ,QAA0C,EAAE,OAAO,KAAK,OAAO,OAUtE,KAAK,aAAa,GAClB,KAAK,WAAW,GAChB,KAAK,gBAAgB,GAErB,KAAK,IAAKA,CAAO;AAAA,EAElB;AAAA,EAEO,IAAKA,GAA4B;AAEvC,IAAKA,MAEJ,KAAK,YAAY,IAEjBA,EAAO,QAAS,CAAYC,MAAA;AAE3B,WAAK,YAAaA,CAAS;AAAA,IAAA,CAE1B;AAAA,EAIJ;AAAA,EAEO,YAAaA,GAA2B;AAE9C,QAAI7N,IAAQ;AAEZ,aAAU,IAAI,GAAG,IAAI,KAAK,UAAU,UAErB,KAAK,UAAW,GAEnB,WAAW,IAAI6N,EAAS,WAAW,GAJH;AAM1C,MAAA7N;AAUF,SAAK,UAAU,OAAQA,GAAO,GAAG6N,CAAS,GAI1C,KAAK,aAAa,KAAK,UAAW,GAAI,WAAW,GACjD,KAAK,WAAW,KAAK,UAAW,KAAK,UAAU,SAAS,GAAI,WAAW;AAAA,EAExE;AAAA,EAEO,SAAUC,GAAgB;AAE3B,QAAAA,KAAS,KAAK,MAAM;AAExB,aAAO,KAAK,MAAM;AAInB,QAAIvN,IAAuB;AAE3B,aAAU,IAAI,GAAG,IAAI,KAAK,UAAU,QAAQ,KAAO;AAE5C,YAAAsN,IAAW,KAAK,UAAW;AAE5B,UAAAC,IAAQD,EAAS,WAAW,GAAI;AAE9B,cAAAE,IAAiB,KAAK,UAAW,IAAI;AAE3C,QAAKA,IAEIxN,IAAAwN,EAAe,GAAIF,GAAUC,CAAM,IAI3CvN,IAAQsN,EAAS,WAAW;AAI7B;AAAA,MAED;AAAA,IAED;AAQA,WANKtN,MAAU,QAAQ,KAAK,UAAU,SAAS,MAE9CA,IAAQ,KAAK,UAAW,KAAK,UAAU,SAAS,GAAI,WAAW,IAI3DA,MAAU,QAEd,KAAK,QAAQ;AAAA,MACZ,OAAAuN;AAAA,MACA,OAAAvN;AAAA,IAAA,GAGMA,KAID;AAAA,EAER;AAED;ACzHO,MAAMyN,WAAoBtE,EAAa;AAAA,EAa7C,YAAajL,GAAewC,GAAYC,GAAYC,GAAYC,GAAa;AAEtE,aANP,KAAQ,eAAuB,IAQ9B,KAAK,OAAO3C,KAAQ,IAEpB,KAAK,aAAa,GAClB,KAAK,WAAW,GAChB,KAAK,gBAAgB,GAEhB,KAAA,6BAAa,OAEb,KAAA,QAAQ,IAAIuC,KAEZC,KAAS,KAAA,UAAWA,GAAG,GAAI,GAC3BC,KAAS,KAAA,UAAWA,GAAG,GAAI,GAC3BC,KAAS,KAAA,UAAWA,GAAG,GAAI,GAC3BC,KAAS,KAAA,UAAWA,GAAG,GAAI;AAAA,EAEjC;AAAA,EAEO,UAAW6M,GAAezG,GAA0C;AAErE,SAAA,OAAO,IAAKA,GAAMyG,CAAM;AAE7B,QAAIC,IAAW,OACXC,IAAS;AAER,SAAA,OAAO,QAAS,CAAAF,MAAS;AAExBA,MAAAA,EAAM,aAAaC,MAEvBA,IAAWD,EAAM,aAIbA,EAAM,WAAWE,MAErBA,IAASF,EAAM;AAAA,IAEhB,CAEC,IAEGC,KAAY,UAAcC,KAAU,WAE7BD,IAAA,GACFC,IAAA,IAIV,KAAK,aAAaD,GAClB,KAAK,WAAWC,GACX,KAAA,gBAAgB,KAAK,WAAW,KAAK;AAAA,EAE3C;AAAA,EAEO,UAAW3G,GAA0C;AAE3D,WAAO,KAAK,OAAO,IAAKA,CAAK,KAAK;AAAA,EAEnC;AAAA,EAEO,SAAUsG,GAAgB;AAEhC,QAAKA,KAAS,KAAK;AAAsB,aAAA;AAEzC,UAAM7M,IAAI,KAAK,OAAO,IAAK,GAAI,GACzBC,IAAI,KAAK,OAAO,IAAK,GAAI,GACzBC,IAAI,KAAK,OAAO,IAAK,GAAI,GACzBC,IAAI,KAAK,OAAO,IAAK,GAAI;AAE1B,WAAAH,MAAI,KAAK,MAAM,IAAIA,EAAE,SAAU6M,CAAM,IACrC5M,MAAI,KAAK,MAAM,IAAIA,EAAE,SAAU4M,CAAM,IACrC3M,MAAI,KAAK,MAAM,IAAIA,EAAE,SAAU2M,CAAM,IACrC1M,MAAI,KAAK,MAAM,IAAIA,EAAE,SAAU0M,CAAM,IAE1C,KAAK,eAAeA,GAEb;AAAA,EAER;AAED;AC9FO,MAAMM,WAAuB1E,EAAa;AAAA,EAUhD,YAAa2E,GAAsBC,GAAuBC,GAAwBC,GAAsC;AAEjH,aAVP,KAAO,aAAuB,EAAE,GAAG,GAAG,GAAG,KACzC,KAAO,aAAuB,EAAE,GAAG,GAAG,GAAG,KACzC,KAAO,cAAwB,EAAE,GAAG,GAAG,GAAG,KAC1C,KAAO,gBAAqC,UAE5C,KAAQ,SAA4B,MACpC,KAAQ,YAAmC,MAM1C,KAAK,IAAKH,GAAYC,GAAYC,GAAaC,CAAc;AAAA,EAE9D;AAAA,EAEO,IAAKH,GAAsBC,GAAuBC,GAAwBC,GAAsC;AAEtH,SAAK,aAAaH,GAClB,KAAK,aAAaC,KAAcD,GAChC,KAAK,cAAcE,KAAeF,GAClC,KAAK,gBAAgBG,KAAiB;AAAA,EAEvC;AAAA,EAEQ,UAAWA,GAAoCC,GAA4B;AAElF,WAAKD,KAAiB,WAEdxD,EAAQ,OAAQ,KAAK,YAAY,KAAK,aAAayD,EAAU,YAAYA,EAAU,UAAW,IAE1FD,KAAiB,aAErB,MAEC,KAAK,WAAW,IAMjB,CAAEnO,MAAe;AAEvB,YAAM2E,IAAMyJ,EAAU,WAAW,IAAI,KAAK,WAAW;AAC/C,aAAApO,KAAAA,IAAI,KAAK,WAAW,MAAQoO,EAAU,WAAW,IAAI,KAAK,WAAW,IAEpE,KAAK,WAAW,IAAIpO,IAAI2E;AAAA,IAAA;AAAA,EAMlC;AAAA,EAEO,GAAIyJ,GAA2BpO,GAAY;AASjD,YAPK,KAAK,aAAa,QAAQ,KAAK,UAAU,WAAW,KAAKoO,EAAU,WAAW,KAAK,KAAK,UAAU,WAAW,KAAKA,EAAU,WAAW,OAE3I,KAAK,SAAS,KAAK,UAAW,KAAK,eAAeA,CAAU,GAC5D,KAAK,YAAYA,IAIb,KAAK,SAEF,KAAK,OAAQpO,CAAE,IAIf;AAAA,EAIT;AAED;AClFiB,IAAAqO;AAAA,CAAV,CAAUA,MAAV;AAEC,WAASC,KAAUC,GAAgD;AAEzE,UAAMC,IAAM,CAAA;AAEZ,aAAUvO,IAAI,GAAGA,IAAIsO,EAAS,QAAQtO;AAEhC,MAAAsO,EAAUtO,MAAO,QAEd,OAAA,OAAQuO,GAAKD,EAAUtO,EAAI;AAM7B,WAAAuO;AAAA,EAER;AAhBOH,EAAAA,EAAS,QAAAC;AAAA,GAFAD,MAAAA,IAAA,CAAA,EAAA;ACDA,IAAAI;AAAA,CAAV,CAAUA,MAAV;AAEC,WAASC,IAAkB;AAE1B,WAAA,KAAK,OAAO;EAEpB;AAJOD,EAAAA,EAAS,UAAAC;AAAA,GAFAD,MAAAA,IAAA,CAAA,EAAA;"}