{"version":3,"file":"glpower.js","sources":["../src/VAO.ts","../src/Program.ts","../src/Buffer.ts","../src/Texture.ts","../src/Core.ts","../src/Math/Vector2.ts","../src/Math/Vector3.ts","../src/Math/Matrix4.ts","../src/Geometries/Geometry.ts","../src/Geometries/CubeGeometry.ts","../src/Geometries/CylinderGeometry.ts","../src/Geometries/PlaneGeometry.ts","../src/Geometries/SphereGeometry.ts","../src/ECS/index.ts","../src/ECS/System/index.ts","../src/SceneGraph/index.ts"],"sourcesContent":["import { Buffer } from \"./Buffer\";\r\n\r\nexport type Attribute = {\r\n\tarray: number[];\r\n\tsize: number;\r\n}\r\n\r\nexport type AttributeBuffer = {\r\n\tbuffer: Buffer;\r\n\tsize: number;\r\n\tcount: number;\r\n}\r\n\r\nexport type AttributeBufferWithLocation = {\r\n\tlocation: number | null;\r\n} & AttributeBuffer\r\n\r\nexport class VAO {\r\n\r\n\tprivate gl: WebGL2RenderingContext;\r\n\r\n\tpublic vao: WebGLVertexArrayObject | null = null;\r\n\r\n\tpublic program: WebGLProgram;\r\n\r\n\tprotected indexBuffer: Buffer | null = null;\r\n\r\n\tprotected attributes: {[key: string]: AttributeBufferWithLocation} = {};\r\n\r\n\tpublic vertCount: number = 0;\r\n\r\n\tconstructor( gl: WebGL2RenderingContext, program: WebGLProgram ) {\r\n\r\n\t\tthis.gl = gl;\r\n\r\n\t\tthis.program = program;\r\n\r\n\t\tthis.vao = this.gl.createVertexArray();\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tAttribute\r\n\t-------------------------------*/\r\n\r\n\tpublic setAttribute( name: string, buffer: Buffer, size: number, count: number ) {\r\n\r\n\t\tlet attr = this.attributes[ name ];\r\n\r\n\t\tif ( ! attr ) {\r\n\r\n\t\t\tattr = {\r\n\t\t\t\tbuffer,\r\n\t\t\t\tlocation: null,\r\n\t\t\t\tsize,\r\n\t\t\t\tcount\r\n\t\t\t};\r\n\r\n\t\t\tthis.attributes[ name ] = attr;\r\n\r\n\t\t}\r\n\r\n\t\tthis.updateAttributes();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic removeAttribute( name: string ) {\r\n\r\n\t\tdelete this.attributes[ name ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic updateAttributes( force?: boolean ) {\r\n\r\n\t\tif ( ! this.vao ) return;\r\n\r\n\t\tthis.vertCount = 0;\r\n\r\n\t\tconst attrNameList = Object.keys( this.attributes );\r\n\r\n\t\tthis.gl.bindVertexArray( this.vao );\r\n\r\n\t\tfor ( let i = 0; i < attrNameList.length; i ++ ) {\r\n\r\n\t\t\tconst name = attrNameList[ i ];\r\n\t\t\tconst attribute = this.attributes[ name ];\r\n\r\n\t\t\tif ( ( attribute.location === null || force ) ) {\r\n\r\n\t\t\t\tattribute.location = this.gl.getAttribLocation( this.program, name );\r\n\r\n\t\t\t\tif ( attribute.location > - 1 ) {\r\n\r\n\t\t\t\t\tthis.gl.bindBuffer( this.gl.ARRAY_BUFFER, attribute.buffer.buffer );\r\n\t\t\t\t\tthis.gl.enableVertexAttribArray( attribute.location );\r\n\t\t\t\t\tthis.gl.vertexAttribPointer( attribute.location, attribute.size, this.gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.vertCount = Math.max( this.vertCount, attribute.count );\r\n\r\n\t\t}\r\n\r\n\t\tthis.gl.bindVertexArray( null );\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tIndex\r\n\t-------------------------------*/\r\n\r\n\tpublic setIndex( indexBuffer: Buffer | null ) {\r\n\r\n\t\tthis.indexBuffer = indexBuffer;\r\n\r\n\t\tif ( ! this.vao ) return;\r\n\r\n\t\tthis.gl.bindVertexArray( this.vao );\r\n\r\n\t\tthis.gl.bindBuffer( this.gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer ? this.indexBuffer.buffer : null );\r\n\r\n\t\tthis.gl.bindVertexArray( null );\r\n\r\n\r\n\t}\r\n\r\n\tpublic getVAO() {\r\n\r\n\t\treturn this.vao;\r\n\r\n\t}\r\n\r\n}\r\n","import { Matrix4 } from \"./Math/Matrix4\";\r\nimport { Vector2 } from \"./Math/Vector2\";\r\nimport { Vector3 } from \"./Math/Vector3\";\r\nimport { VAO } from \"./VAO\";\r\n\r\nexport type Uniformable = boolean | number | Vector2 | Vector3 | Matrix4;\r\nexport type UniformType =\r\n\t'1f' | '1fv' | '2f' | '2fv' | '3f' | '3fv' | '4f' | '4fv' |\r\n\t'1i' | '1iv' | '2i' | '2iv' | '3i' | '3iv' | '4i' | '4iv' |\r\n\t'Matrix2fv' | 'Matrix3fv' | 'Matrix4fv';\r\n\r\nexport type Uniform = {\r\n\tlocation: WebGLUniformLocation | null;\r\n\tvalue: ( number | boolean )[];\r\n\ttype: string;\r\n\tcache?: ( number | boolean )[];\r\n\tneedsUpdate?: boolean\r\n}\r\nexport class Program {\r\n\r\n\tpublic gl: WebGL2RenderingContext;\r\n\tpublic program: WebGLProgram | null;\r\n\r\n\tprivate vao: Map<string, VAO>;\r\n\tprotected uniforms: Map<string, Uniform>;\r\n\r\n\tconstructor( gl: WebGL2RenderingContext ) {\r\n\r\n\t\tthis.gl = gl;\r\n\r\n\t\tthis.program = this.gl.createProgram();\r\n\r\n\t\tthis.vao = new Map();\r\n\t\tthis.uniforms = new Map();\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tShader\r\n\t-------------------------------*/\r\n\r\n\tpublic setShader( vertexShaderSrc: string, fragmentShaderSrc: string ) {\r\n\r\n\t\tif ( this.program === null ) {\r\n\r\n\t\t\tconsole.warn( 'program is null.' );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tconst vs = this.createShader( vertexShaderSrc, this.gl.VERTEX_SHADER );\r\n\t\tconst fs = this.createShader( fragmentShaderSrc, this.gl.FRAGMENT_SHADER );\r\n\r\n\t\tif ( ! vs || ! fs ) return;\r\n\r\n\t\tthis.gl.attachShader( this.program, vs );\r\n\t\tthis.gl.attachShader( this.program, fs );\r\n\r\n\t\tthis.gl.linkProgram( this.program );\r\n\r\n\t\tif ( ! this.gl.getProgramParameter( this.program, this.gl.LINK_STATUS ) ) {\r\n\r\n\t\t\tconsole.warn( 'program link error.' );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tprotected createShader( shaderSrc: string, type: number ) {\r\n\r\n\t\tconst shader = this.gl.createShader( type );\r\n\r\n\t\tif ( ! shader ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tthis.gl.shaderSource( shader, shaderSrc );\r\n\t\tthis.gl.compileShader( shader );\r\n\r\n\t\tif ( this.gl.getShaderParameter( shader, this.gl.COMPILE_STATUS ) ) {\r\n\r\n\t\t\treturn shader;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.error( this.gl.getShaderInfoLog( shader ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tUniforms\r\n\t-------------------------------*/\r\n\r\n\tpublic setUniform( name: string, type: UniformType, value: ( number | boolean )[] ) {\r\n\r\n\t\tconst uniform = this.uniforms.get( name );\r\n\r\n\t\tif ( uniform ) {\r\n\r\n\t\t\tuniform.type = type;\r\n\t\t\tuniform.value = value;\r\n\r\n\t\t\tif ( uniform.cache ) {\r\n\r\n\t\t\t\tfor ( let i = 0; i < value.length; i ++ ) {\r\n\r\n\t\t\t\t\tif ( uniform.cache[ i ] !== value[ i ] ) {\r\n\r\n\t\t\t\t\t\tuniform.needsUpdate = true;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tuniform.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.uniforms.set( name, {\r\n\t\t\t\tvalue,\r\n\t\t\t\ttype: type,\r\n\t\t\t\tlocation: null,\r\n\t\t\t\tneedsUpdate: true\r\n\t\t\t} );\r\n\r\n\t\t\tthis.updateUniformLocations();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate updateUniformLocations( force?: boolean ) {\r\n\r\n\t\tif ( ! this.program ) return;\r\n\r\n\t\tthis.uniforms.forEach( ( uniform, key ) => {\r\n\r\n\t\t\tif ( uniform.location === null || force ) {\r\n\r\n\t\t\t\tuniform.location = this.gl.getUniformLocation( this.program!, key );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tpublic uploadUniforms() {\r\n\r\n\t\tthis.uniforms.forEach( uniform => {\r\n\r\n\t\t\tif ( uniform.needsUpdate ) {\r\n\r\n\t\t\t\tif ( /Matrix[2|3|4]fv/.test( uniform.type ) ) {\r\n\r\n\t\t\t\t\t( this.gl as any )[ 'uniform' + uniform.type ]( uniform.location, false, uniform.value );\r\n\r\n\t\t\t\t} else if ( /[1|2|3|4][f|i]$/.test( uniform.type ) ) {\r\n\r\n\t\t\t\t\t( this.gl as any )[ 'uniform' + uniform.type ]( uniform.location, ...uniform.value );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t( this.gl as any )[ 'uniform' + uniform.type ]( uniform.location, uniform.value );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniform.cache = uniform.value.concat();\r\n\t\t\t\tuniform.needsUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tVAO\r\n\t-------------------------------*/\r\n\r\n\tpublic getVAO( id: string = '_' ) {\r\n\r\n\t\tif ( ! this.program ) return null;\r\n\r\n\t\tlet vao = this.vao.get( id );\r\n\r\n\t\tif ( vao ) return vao;\r\n\r\n\t\tvao = new VAO( this.gl, this.program );\r\n\r\n\t\tthis.vao.set( id, vao );\r\n\r\n\t\treturn vao;\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tDraw??\r\n\t-------------------------------*/\r\n\r\n\tpublic use() {\r\n\r\n\t\tif ( ! this.program ) return;\r\n\r\n\t\tthis.gl.useProgram( this.program );\r\n\r\n\t}\r\n\r\n\tpublic clean() {\r\n\r\n\t\tthis.gl.useProgram( null );\r\n\r\n\t}\r\n\r\n\tpublic getProgram() {\r\n\r\n\t\treturn this.program;\r\n\r\n\t}\r\n\r\n}\r\n","export type BufferType = 'vbo' | 'ibo';\r\nexport type TArrayBuffer = Uint8Array | Uint16Array | Uint32Array | Float32Array | Float64Array\r\n\r\nexport class Buffer {\r\n\r\n\tprivate gl: WebGL2RenderingContext;\r\n\tpublic buffer: WebGLBuffer | null;\r\n\r\n\tconstructor( gl: WebGL2RenderingContext ) {\r\n\r\n\t\tthis.gl = gl;\r\n\r\n\t\tthis.buffer = this.gl.createBuffer();\r\n\r\n\t}\r\n\r\n\tpublic setData( data: TArrayBuffer, type: BufferType = 'vbo', usage?: number ) {\r\n\r\n\t\tconst target = type == 'vbo' ? this.gl.ARRAY_BUFFER : this.gl.ELEMENT_ARRAY_BUFFER;\r\n\r\n\t\tthis.gl.bindBuffer( target, this.buffer );\r\n\r\n\t\tthis.gl.bufferData( target, data, usage || this.gl.STATIC_DRAW );\r\n\r\n\t\tthis.gl.bindBuffer( target, null );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n","export class Texture {\r\n\r\n\tprivate gl: WebGL2RenderingContext;\r\n\tprivate image: HTMLImageElement | null;\r\n\tprivate texture: WebGLTexture | null;\r\n\r\n\tconstructor( gl: WebGL2RenderingContext ) {\r\n\r\n\t\tthis.gl = gl;\r\n\t\tthis.image = null;\r\n\r\n\t\tthis.texture = this.gl.createTexture();\r\n\r\n\t}\r\n\r\n\tpublic load( src: string ) {\r\n\r\n\t\tconst img = new Image();\r\n\r\n\t\timg.onload = () => {\r\n\r\n\t\t\tthis.image = img;\r\n\r\n\t\t\tthis.gl.bindTexture( this.gl.TEXTURE_2D, this.texture );\r\n\t\t\tthis.gl.texImage2D( this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, this.image );\r\n\t\t\tthis.gl.generateMipmap( this.gl.TEXTURE_2D );\r\n\r\n\t\t};\r\n\r\n\t\timg.src = src;\r\n\r\n\t}\r\n\r\n\tpublic active( unitId: number ) {\r\n\r\n\t\tthis.gl.activeTexture( ( this.gl as any )[ \"TEXTURE\" + unitId ] );\r\n\t\tthis.gl.bindTexture( this.gl.TEXTURE_2D, this.texture );\r\n\r\n\t}\r\n\r\n\tpublic getTexture() {\r\n\r\n\t\treturn this.texture;\r\n\r\n\t}\r\n\r\n}\r\n","import { Program } from \"./Program\";\r\nimport { Buffer } from \"./Buffer\";\r\nimport { VAO } from \"./VAO\";\r\nimport { Texture } from \"./Texture\";\r\n\r\nexport class Core {\r\n\r\n\tpublic gl: WebGL2RenderingContext;\r\n\r\n\tconstructor( gl: WebGL2RenderingContext ) {\r\n\r\n\t\tthis.gl = gl;\r\n\r\n\t\tthis.gl.pixelStorei( gl.UNPACK_FLIP_Y_WEBGL, true );\r\n\r\n\t}\r\n\r\n\tpublic createProgram() {\r\n\r\n\t\tconst program = new Program( this.gl );\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n\tpublic createBuffer() {\r\n\r\n\t\tconst vertexBuffer = new Buffer( this.gl );\r\n\r\n\t\treturn vertexBuffer;\r\n\r\n\t}\r\n\r\n\tpublic createTexture() {\r\n\r\n\t\tconst texture = new Texture( this.gl );\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n}\r\n\r\n","import { Vector3 } from \"./Vector3\";\r\n\r\nexport class Vector2 {\r\n\r\n\tpublic x: number;\r\n\tpublic y: number;\r\n\r\n\tconstructor( x?: number, y?: number ) {\r\n\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\r\n\t}\r\n\r\n\tpublic get isVector2() {\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tpublic set( x: number, y: number ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic add( a: Vector2 ): Vector2\r\n\r\n\tpublic add( a: number ): Vector2\r\n\r\n\tpublic add( a: any ): Vector2 {\r\n\r\n\t\tif ( ( a as Vector2 ).isVector2 ) {\r\n\r\n\t\t\tthis.x += a.x;\r\n\t\t\tthis.y += a.y;\r\n\r\n\t\t} else if ( typeof ( a ) == 'number' ) {\r\n\r\n\t\t\tthis.x += a;\r\n\t\t\tthis.y += a;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic sub( a: Vector2 ): Vector2\r\n\r\n\tpublic sub( a: number ): Vector2\r\n\r\n\tpublic sub( a: any ): Vector2 {\r\n\r\n\t\tif ( ( a as Vector2 ).isVector2 ) {\r\n\r\n\t\t\tthis.x -= a.x;\r\n\t\t\tthis.y -= a.y;\r\n\r\n\t\t} else if ( typeof ( a ) == 'number' ) {\r\n\r\n\t\t\tthis.x -= a;\r\n\t\t\tthis.y -= a;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic multiply( a: number | Vector2 ) {\r\n\r\n\t\tthis.x *= ( a as Vector2 ).x | ( a as number );\r\n\t\tthis.y *= ( a as Vector2 ).y | ( a as number );\r\n\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic divide( a: number | Vector2 ) {\r\n\r\n\t\tthis.x /= ( a as Vector2 ).x | ( a as number );\r\n\t\tthis.y /= ( a as Vector2 ).y | ( a as number );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic copy( a: Vector2 | Vector3 ) {\r\n\r\n\t\tthis.x = a.x;\r\n\t\tthis.y = a.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic clone() {\r\n\r\n\t\treturn new Vector2( this.x, this.y );\r\n\r\n\t}\r\n\r\n\tpublic get elm() {\r\n\r\n\t\treturn [ this.x, this.y ];\r\n\r\n\t}\r\n\r\n}\r\n","import { Vector2 } from \"./Vector2\";\r\n\r\n\r\nexport type Vec3 = {\r\n\tx: number,\r\n\ty: number,\r\n\tz: number\r\n}\r\n\r\nexport class Vector3 {\r\n\r\n\tpublic x: number;\r\n\tpublic y: number;\r\n\tpublic z: number;\r\n\r\n\tconstructor( x?: number, y?: number, z?: number ) {\r\n\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\tthis.z = z || 0;\r\n\r\n\t}\r\n\r\n\tpublic get isVector3() {\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tpublic set( x: number, y: number, z: number ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic add( a: Vector3 ): Vector3\r\n\r\n\tpublic add( a: number ): Vector3\r\n\r\n\tpublic add( a: any ): Vector3 {\r\n\r\n\t\tif ( ( a as Vector3 ).isVector3 ) {\r\n\r\n\t\t\tthis.x += a.x;\r\n\t\t\tthis.y += a.y;\r\n\t\t\tthis.z += a.z;\r\n\r\n\t\t} else if ( typeof ( a ) == 'number' ) {\r\n\r\n\t\t\tthis.x += a;\r\n\t\t\tthis.y += a;\r\n\t\t\tthis.z += a;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic sub( a: Vector3 ): Vector3\r\n\r\n\tpublic sub( a: number ): Vector3\r\n\r\n\tpublic sub( a: any ) {\r\n\r\n\t\tif ( ( a as Vector3 ).isVector3 ) {\r\n\r\n\t\t\tthis.x -= a.x;\r\n\t\t\tthis.y -= a.y;\r\n\t\t\tthis.z -= a.z;\r\n\r\n\t\t} else if ( typeof ( a ) == 'number' ) {\r\n\r\n\t\t\tthis.x -= a;\r\n\t\t\tthis.y -= a;\r\n\t\t\tthis.z -= a;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic multiply( a: number ) {\r\n\r\n\t\tthis.x *= a;\r\n\t\tthis.y *= a;\r\n\t\tthis.z *= a;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic divide( a: number ) {\r\n\r\n\t\tthis.x /= a;\r\n\t\tthis.y /= a;\r\n\t\tthis.z /= a;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic length() {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\r\n\t}\r\n\r\n\tpublic normalize() {\r\n\r\n\t\treturn this.divide( this.length() || 1 );\r\n\r\n\t}\r\n\r\n\tpublic cross( v: Vector3 ) {\r\n\r\n\t\tconst ax = this.x, ay = this.y, az = this.z;\r\n\t\tconst bx = v.x, by = v.y, bz = v.z;\r\n\r\n\t\tthis.x = ay * bz - az * by;\r\n\t\tthis.y = az * bx - ax * bz;\r\n\t\tthis.z = ax * by - ay * bx;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic dot( v: Vector3 ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\r\n\t}\r\n\r\n\tpublic copy( a: Vector2 | Vector3 ) {\r\n\r\n\t\tthis.x = a.x;\r\n\t\tthis.y = a.y;\r\n\t\tthis.z = ( a as any ).z || 0;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic clone() {\r\n\r\n\t\treturn new Vector3( this.x, this.y, this.z );\r\n\r\n\t}\r\n\r\n\tpublic get elm() {\r\n\r\n\t\treturn [ this.x, this.y, this.z ];\r\n\r\n\t}\r\n\r\n}\r\n","import { Vec3, Vector3 } from \"./Vector3\";\r\n\r\nexport class Matrix4 {\r\n\r\n\tpublic elm: number[];\r\n\r\n\tconstructor( elm?: number [] ) {\r\n\r\n\t\tthis.elm = [\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1,\r\n\t\t];\r\n\r\n\t\tif ( elm ) {\r\n\r\n\t\t\tthis.set( elm );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic get isMat4() {\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tpublic identity() {\r\n\r\n\t\tthis.elm = [\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1,\r\n\t\t];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic clone() {\r\n\r\n\t\treturn new Matrix4().copy( this );\r\n\r\n\t}\r\n\r\n\tpublic copy( mat: Matrix4 ) {\r\n\r\n\t\tthis.set( mat.elm );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic perspective( fov: number, aspect: number, near: number, far: number ) {\r\n\r\n\t\tvar r = 1 / Math.tan( fov * Math.PI / 360 );\r\n\t\tvar d = far - near;\r\n\r\n\t\tthis.elm = [\r\n\t\t\tr / aspect, 0, 0, 0,\r\n\t\t\t0, r, 0, 0,\r\n\t\t\t0, 0, - ( far + near ) / d, - 1,\r\n\t\t\t0, 0, - ( far * near * 2 ) / d, 0\r\n\t\t];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic lookAt( eye: Vector3, target: Vector3, up: Vector3 ) {\r\n\r\n\t\tconst zAxis = eye.clone().sub( target ).normalize();\r\n\t\tconst xAxis = up.clone().cross( zAxis ).normalize();\r\n\t\tconst yAxis = zAxis.clone().cross( xAxis ).normalize();\r\n\r\n\t\tthis.elm = [\r\n\t\t   xAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t   xAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t   xAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t   - eye.dot( xAxis ),\r\n\t\t   - eye.dot( yAxis ),\r\n\t\t   - eye.dot( zAxis ),\r\n\t\t   1,\r\n\t\t];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic inverse() {\r\n\r\n\t\tconst a = this.elm[ 0 ], b = this.elm[ 1 ], c = this.elm[ 2 ], d = this.elm[ 3 ],\r\n\t\t\te = this.elm[ 4 ], f = this.elm[ 5 ], g = this.elm[ 6 ], h = this.elm[ 7 ],\r\n\t\t\ti = this.elm[ 8 ], j = this.elm[ 9 ], k = this.elm[ 10 ], l = this.elm[ 11 ],\r\n\t\t\tm = this.elm[ 12 ], n = this.elm[ 13 ], o = this.elm[ 14 ], p = this.elm[ 15 ],\r\n\t\t\tq = a * f - b * e, r = a * g - c * e,\r\n\t\t\ts = a * h - d * e, t = b * g - c * f,\r\n\t\t\tu = b * h - d * f, v = c * h - d * g,\r\n\t\t\tw = i * n - j * m, x = i * o - k * m,\r\n\t\t\ty = i * p - l * m, z = j * o - k * n,\r\n\t\t\tA = j * p - l * n, B = k * p - l * o,\r\n\t\t\tdet = ( q * B - r * A + s * z + t * y - u * x + v * w ),\r\n\t\t\tivd = 1 / det;\r\n\r\n\t\tif ( det == 0 ) return this.identity();\r\n\r\n\t\tthis.elm[ 0 ] = ( f * B - g * A + h * z ) * ivd;\r\n\t\tthis.elm[ 1 ] = ( - b * B + c * A - d * z ) * ivd;\r\n\t\tthis.elm[ 2 ] = ( n * v - o * u + p * t ) * ivd;\r\n\t\tthis.elm[ 3 ] = ( - j * v + k * u - l * t ) * ivd;\r\n\t\tthis.elm[ 4 ] = ( - e * B + g * y - h * x ) * ivd;\r\n\t\tthis.elm[ 5 ] = ( a * B - c * y + d * x ) * ivd;\r\n\t\tthis.elm[ 6 ] = ( - m * v + o * s - p * r ) * ivd;\r\n\t\tthis.elm[ 7 ] = ( i * v - k * s + l * r ) * ivd;\r\n\t\tthis.elm[ 8 ] = ( e * A - f * y + h * w ) * ivd;\r\n\t\tthis.elm[ 9 ] = ( - a * A + b * y - d * w ) * ivd;\r\n\t\tthis.elm[ 10 ] = ( m * u - n * s + p * q ) * ivd;\r\n\t\tthis.elm[ 11 ] = ( - i * u + j * s - l * q ) * ivd;\r\n\t\tthis.elm[ 12 ] = ( - e * z + f * x - g * w ) * ivd;\r\n\t\tthis.elm[ 13 ] = ( a * z - b * x + c * w ) * ivd;\r\n\t\tthis.elm[ 14 ] = ( - m * t + n * r - o * q ) * ivd;\r\n\t\tthis.elm[ 15 ] = ( i * t - j * r + k * q ) * ivd;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic set( elm: number[] ) {\r\n\r\n\t\tfor ( let i = 0; i < this.elm.length; i ++ ) {\r\n\r\n\t\t\tthis.elm[ i ] = elm[ i ] ?? 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic setFromTransform( pos: Vec3, rot: Vec3, scale: Vec3 ) {\r\n\r\n\t\tthis.identity();\r\n\r\n\t\tthis.applyPosition( pos );\r\n\r\n\t\tthis.applyRot( rot );\r\n\r\n\t\tthis.applyScale( scale );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic decompose( pos?: Vec3, rot?: Vec3, scale?: Vec3 ) {\r\n\r\n\t\tif ( pos ) {\r\n\r\n\t\t\tpos.x = this.elm[ 12 ];\r\n\t\t\tpos.y = this.elm[ 13 ];\r\n\t\t\tpos.z = this.elm[ 14 ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic applyPosition( position: Vec3 ) {\r\n\r\n\t\tthis.matmul( [\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\tposition.x, position.y, position.z, 1\r\n\t\t] );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic applyRot( rotation: Vec3 ) {\r\n\r\n\t\tlet c = Math.cos( rotation.x ), s = Math.sin( rotation.x );\r\n\r\n\t\tthis.matmul( [\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, c, s, 0,\r\n\t\t\t0, - s, c, 0,\r\n\t\t\t0, 0, 0, 1\r\n\t\t] );\r\n\r\n\t\tc = Math.cos( rotation.y ), s = Math.sin( rotation.y );\r\n\r\n\t\tthis.matmul( [\r\n\t\t\tc, 0, - s, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t    s, 0, c, 0,\r\n\t\t\t0, 0, 0, 1\r\n\t\t] );\r\n\r\n\t\tc = Math.cos( rotation.z ), s = Math.sin( rotation.z );\r\n\r\n\t\tthis.matmul( [\r\n\t\t\tc, s, 0, 0,\r\n\t\t\t- s, c, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\t\t] );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic applyScale( scale: Vec3 ) {\r\n\r\n\t\tthis.matmul( [\r\n\t\t\tscale.x, 0, 0, 0,\r\n\t\t\t0, scale.y, 0, 0,\r\n\t\t\t0, 0, scale.z, 0,\r\n\t\t\t0, 0, 0, 1\r\n\t\t] );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tprotected matmul( elm2: number[] ) {\r\n\r\n\t\tconst dist = new Array( 16 );\r\n\r\n\t\tfor ( let i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\tfor ( let j = 0; j < 4; j ++ ) {\r\n\r\n\t\t\t\tlet sum = 0;\r\n\r\n\t\t\t\tfor ( let k = 0; k < 4; k ++ ) {\r\n\r\n\t\t\t\t\tsum += this.elm[ k * 4 + j ] * elm2[ k + i * 4 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdist[ j + i * 4 ] = sum;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.elm = dist;\r\n\r\n\t}\r\n\r\n\tpublic multiply( m: Matrix4 ) {\r\n\r\n\t\tthis.matmul( m.elm );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic preMultiply( m: Matrix4 ) {\r\n\r\n\t\tconst tmp = this.copyToArray( [] );\r\n\r\n\t\tthis.set( m.elm );\r\n\r\n\t\tthis.matmul( tmp );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic copyToArray( array: number[] ) {\r\n\r\n\t\tarray.length = this.elm.length;\r\n\r\n\t\tfor ( let i = 0; i < this.elm.length; i ++ ) {\r\n\r\n\t\t\tarray[ i ] = this.elm[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\r\n}\r\n","import { BufferType } from \"../Buffer\";\r\nimport { Core } from \"../Core\";\r\nimport { Attribute, AttributeBuffer } from \"../VAO\";\r\n\r\ntype DefaultAttributeName = 'position' | 'uv' | 'normal' | 'index';\r\n\r\nexport class Geometry {\r\n\r\n\tpublic count: number = 0;\r\n\r\n\tpublic attributes: {[key: string]: Attribute} = {};\r\n\r\n\tconstructor() {\r\n\t}\r\n\r\n\tpublic setAttribute( name: DefaultAttributeName | ( string & {} ), array: number[], size: number ) {\r\n\r\n\t\tthis.attributes[ name ] = {\r\n\t\t\tarray,\r\n\t\t\tsize\r\n\t\t};\r\n\r\n\t\tthis.updateVertCount();\r\n\r\n\t}\r\n\r\n\tpublic getAttribute( name: DefaultAttributeName | ( string & {} ) ) {\r\n\r\n\t\treturn this.attributes[ name ];\r\n\r\n\t}\r\n\r\n\tprivate updateVertCount() {\r\n\r\n\t\tconst keys = Object.keys( this.attributes );\r\n\r\n\t\tthis.count = keys.length > 0 ? Infinity : 0;\r\n\r\n\t\tkeys.forEach( name => {\r\n\r\n\t\t\tconst attribute = this.attributes[ name ];\r\n\r\n\t\t\tif ( name != 'index' ) {\r\n\r\n\t\t\t\tthis.count = Math.min( attribute.array.length / attribute.size, this.count );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t// ecs\r\n\r\n\tpublic getAttributeBuffer( core: Core, name: DefaultAttributeName | ( string & {} ), constructor: Float32ArrayConstructor | Uint16ArrayConstructor, bufferType: BufferType = 'vbo' ): AttributeBuffer {\r\n\r\n\t\tconst attr = this.getAttribute( name );\r\n\r\n\t\treturn {\r\n\t\t\tbuffer: core.createBuffer().setData( new constructor( attr.array ), bufferType ),\r\n\t\t\tsize: attr.size,\r\n\t\t\tcount: attr.array.length / attr.size\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tpublic getComponent( core: Core ) {\r\n\r\n\t\treturn {\r\n\t\t\tattributes: [\r\n\t\t\t\t{ name: 'position', ...this.getAttributeBuffer( core, 'position', Float32Array ) },\r\n\t\t\t\t{ name: 'uv', ...this.getAttributeBuffer( core, 'uv', Float32Array ) },\r\n\t\t\t\t{ name: 'normal', ...this.getAttributeBuffer( core, 'normal', Float32Array ) },\r\n\t\t\t],\r\n\t\t\tindex: this.getAttributeBuffer( core, 'index', Uint16Array, 'ibo' )\r\n\t\t};\r\n\r\n\t}\r\n\r\n}\r\n","import { Geometry } from './Geometry';\r\n\r\nexport class CubeGeometry extends Geometry {\r\n\r\n\tconstructor( width: number = 1, height: number = 1, depth: number = 1 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tconst hx = width / 2;\r\n\t\tconst hy = height / 2;\r\n\t\tconst hz = depth / 2;\r\n\r\n\t\tconst posArray = [\r\n\t\t\t- hx, hy, hz,\r\n\t\t\thx, hy, hz,\r\n\t\t\t- hx, - hy, hz,\r\n\t\t\thx, - hy, hz,\r\n\r\n\t\t\thx, hy, - hz,\r\n\t\t\t- hx, hy, - hz,\r\n\t\t\thx, - hy, - hz,\r\n\t\t\t- hx, - hy, - hz,\r\n\r\n\t\t\thx, hy, hz,\r\n\t\t\thx, hy, - hz,\r\n\t\t\thx, - hy, hz,\r\n\t\t\thx, - hy, - hz,\r\n\r\n\t\t\t- hx, hy, - hz,\r\n\t\t\t- hx, hy, hz,\r\n\t\t\t- hx, - hy, - hz,\r\n\t\t\t- hx, - hy, hz,\r\n\r\n\t\t\thx, hy, - hz,\r\n\t\t\thx, hy, hz,\r\n\t\t\t- hx, hy, - hz,\r\n\t\t\t- hx, hy, hz,\r\n\r\n\t\t\t- hx, - hy, - hz,\r\n\t\t\t- hx, - hy, hz,\r\n\t\t\thx, - hy, - hz,\r\n\t\t\thx, - hy, hz,\r\n\r\n\t\t];\r\n\r\n\t\tconst normalArray = [\r\n\t\t\t0, 0, 1,\r\n\t\t\t0, 0, 1,\r\n\t\t\t0, 0, 1,\r\n\t\t\t0, 0, 1,\r\n\t\t\t0, 0, - 1,\r\n\t\t\t0, 0, - 1,\r\n\t\t\t0, 0, - 1,\r\n\t\t\t0, 0, - 1,\r\n\t\t\t1, 0, 0,\r\n\t\t\t1, 0, 0,\r\n\t\t\t1, 0, 0,\r\n\t\t\t1, 0, 0,\r\n\t\t\t- 1, 0, 0,\r\n\t\t\t- 1, 0, 0,\r\n\t\t\t- 1, 0, 0,\r\n\t\t\t- 1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, - 1, 0,\r\n\t\t\t0, - 1, 0,\r\n\t\t\t0, - 1, 0,\r\n\t\t\t0, - 1, 0,\r\n\t\t];\r\n\r\n\t\tconst uvArray = [];\r\n\t\tconst indexArray = [];\r\n\r\n\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tuvArray.push(\r\n\t\t\t\t0, 1,\r\n\t\t\t\t1, 1,\r\n\t\t\t\t0, 0,\r\n\t\t\t\t1, 0\r\n\t\t\t);\r\n\r\n\t\t\tconst offset = 4 * i;\r\n\r\n\t\t\tindexArray.push(\r\n\t\t\t\t0 + offset, 2 + offset, 1 + offset, 1 + offset, 2 + offset, 3 + offset\r\n\t\t\t);\r\n\r\n\t\t}\r\n\r\n\t\tthis.setAttribute( 'position', posArray, 3 );\r\n\t\tthis.setAttribute( 'normal', normalArray, 3 );\r\n\t\tthis.setAttribute( 'uv', uvArray, 2 );\r\n\t\tthis.setAttribute( 'index', indexArray, 1 );\r\n\r\n\t}\r\n\r\n}\r\n","import { Geometry } from './Geometry';\r\nimport { Vector3 } from '../Math/Vector3';\r\n\r\nexport class CylinderGeometry extends Geometry {\r\n\r\n\tconstructor( radiusTop: number = 0.5, radiusBottom: number = 0.5, height: number = 1, radSegments: number = 10, heightSegments: number = 1 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tconst posArray = [];\r\n\t\tconst normalArray = [];\r\n\t\tconst uvArray = [];\r\n\t\tconst indexArray = [];\r\n\r\n\t\t//上下面分2回多くループ\r\n\t\tfor ( let i = 0; i <= heightSegments + 2; i ++ ) {\r\n\r\n\t\t\tfor ( let j = 0; j < radSegments; j ++ ) {\r\n\r\n\t\t\t\tconst theta = Math.PI * 2.0 / radSegments * j;\r\n\r\n\t\t\t\tif ( i <= heightSegments ) {\r\n\r\n\t\t\t\t\t//side\r\n\t\t\t\t\tconst w = i / heightSegments;\r\n\t\t\t\t\tconst radius = ( 1.0 - w ) * radiusBottom + w * radiusTop;\r\n\r\n\t\t\t\t\tconst x = Math.cos( theta ) * radius;\r\n\t\t\t\t\tconst y = - ( height / 2 ) + ( height / heightSegments ) * i;\r\n\t\t\t\t\tconst z = Math.sin( theta ) * radius;\r\n\r\n\t\t\t\t\tposArray.push( x, y, z );\r\n\r\n\t\t\t\t\tuvArray.push(\r\n\t\t\t\t\t\tj / radSegments,\r\n\t\t\t\t\t\ti / heightSegments\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tconst normal = new Vector3( Math.cos( theta ), 0, Math.sin( theta ) ).normalize();\r\n\r\n\t\t\t\t\tnormalArray.push(\r\n\t\t\t\t\t\tnormal.x,\r\n\t\t\t\t\t\tnormal.y,\r\n\t\t\t\t\t\tnormal.z\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tif ( i < heightSegments ) {\r\n\r\n\t\t\t\t\t\tindexArray.push(\r\n\t\t\t\t\t\t\ti * radSegments + j,\r\n\t\t\t\t\t\t\t( i + 1 ) * radSegments + ( j + 1 ) % radSegments,\r\n\t\t\t\t\t\t\ti * radSegments + ( j + 1 ) % radSegments,\r\n\r\n\t\t\t\t\t\t\ti * radSegments + j,\r\n\t\t\t\t\t\t\t( i + 1 ) * radSegments + j,\r\n\t\t\t\t\t\t\t( i + 1 ) * radSegments + ( j + 1 ) % radSegments,\r\n\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t//bottom, top\r\n\r\n\t\t\t\t\tconst side = i - heightSegments - 1;\r\n\r\n\t\t\t\t\tconst radius = side ? radiusTop : radiusBottom;\r\n\r\n\t\t\t\t\tconst x = Math.cos( theta ) * radius;\r\n\t\t\t\t\tconst y = - ( height / 2 ) + height * ( side );\r\n\t\t\t\t\tconst z = Math.sin( theta ) * radius;\r\n\r\n\t\t\t\t\tposArray.push( x, y, z );\r\n\r\n\t\t\t\t\tuvArray.push(\r\n\t\t\t\t\t\t( x + radius ) * 0.5 / radius,\r\n\t\t\t\t\t\t( z + radius ) * 0.5 / radius,\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tnormalArray.push( 0, - 1 + side * 2, 0 );\r\n\r\n\t\t\t\t\tconst offset = radSegments * ( heightSegments + ( side + 1 ) );\r\n\r\n\t\t\t\t\tif ( j <= radSegments - 2 ) {\r\n\r\n\t\t\t\t\t\tif ( side == 0 ) {\r\n\r\n\t\t\t\t\t\t\tindexArray.push(\r\n\t\t\t\t\t\t\t\toffset, offset + j, offset + j + 1,\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tindexArray.push(\r\n\t\t\t\t\t\t\t\toffset, offset + j + 1, offset + j\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// let offset = radSegments * heightSegments;\r\n\t\t// for( let i = 2; i < radSegments; i++ ){\r\n\r\n\t\t// \tindexArray.push(\r\n\t\t// \t\t0, i, i - 1,\r\n\t\t// \t\t0 + offset, i + offset, i - 1 + offset,\r\n\t\t// \t);\r\n\r\n\t\t// }\r\n\r\n\t\tthis.setAttribute( 'position', posArray, 3 );\r\n\t\tthis.setAttribute( 'normal', normalArray, 3 );\r\n\t\tthis.setAttribute( 'uv', uvArray, 2 );\r\n\t\tthis.setAttribute( 'index', indexArray, 1 );\r\n\r\n\t}\r\n\r\n}\r\n","import { Geometry } from './Geometry';\r\n\r\nexport class PlaneGeometry extends Geometry {\r\n\r\n\tconstructor( width: number = 1, height: number = 1, widthSegments: number = 1, heightSegments: number = 1 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tconst hx = width / 2;\r\n\t\tconst hy = height / 2;\r\n\r\n\t\tconst posArray = [];\r\n\t\tconst normalArray = [];\r\n\t\tconst uvArray = [];\r\n\t\tconst indexArray = [];\r\n\r\n\t\tfor ( let i = 0; i <= heightSegments; i ++ ) {\r\n\r\n\t\t\tfor ( let j = 0; j <= widthSegments; j ++ ) {\r\n\r\n\t\t\t\tconst x = ( j / widthSegments );\r\n\t\t\t\tconst y = ( i / widthSegments );\r\n\r\n\t\t\t\tposArray.push(\r\n\t\t\t\t\t- hx + width * x,\r\n\t\t\t\t\t- hy + height * y,\r\n\t\t\t\t\t0\r\n\t\t\t\t);\r\n\r\n\t\t\t\tuvArray.push( x, y );\r\n\r\n\t\t\t\tnormalArray.push( 0, 1, 0 );\r\n\r\n\t\t\t\tif ( i > 0 && j > 0 ) {\r\n\r\n\t\t\t\t\tconst n = ( widthSegments + 1 );\r\n\t\t\t\t\tconst ru = n * i + j;\r\n\t\t\t\t\tconst lb = n * ( i - 1 ) + j - 1;\r\n\r\n\t\t\t\t\tindexArray.push(\r\n\t\t\t\t\t\tru, n * i + j - 1, lb,\r\n\t\t\t\t\t\tru, lb, n * ( i - 1 ) + j,\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.setAttribute( 'position', posArray, 3 );\r\n\t\tthis.setAttribute( 'normal', normalArray, 3 );\r\n\t\tthis.setAttribute( 'uv', uvArray, 2 );\r\n\t\tthis.setAttribute( 'index', indexArray, 1 );\r\n\r\n\t}\r\n\r\n}\r\n","import { Geometry } from './Geometry';\r\nimport { Vector3 } from '../Math/Vector3';\r\n\r\nexport class SphereGeometry extends Geometry {\r\n\r\n\tconstructor( radius: number = 0.5, widthSegments: number = 20, heightSegments: number = 10 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tconst posArray = [];\r\n\t\tconst normalArray = [];\r\n\t\tconst uvArray = [];\r\n\t\tconst indexArray = [];\r\n\r\n\t\tfor ( let i = 0; i <= heightSegments; i ++ ) {\r\n\r\n\t\t\tconst thetaI = i / heightSegments * Math.PI;\r\n\r\n\t\t\tconst segments = ( i != 0 && i != heightSegments ) ? widthSegments : widthSegments;\r\n\r\n\t\t\tfor ( let j = 0; j < segments; j ++ ) {\r\n\r\n\t\t\t\t// pos\r\n\r\n\t\t\t\tconst thetaJ = j / segments * Math.PI * 2.0;\r\n\t\t\t\tconst widthRadius = Math.sin( thetaI ) * radius;\r\n\r\n\t\t\t\tconst x = Math.cos( thetaJ ) * widthRadius;\r\n\t\t\t\tconst y = - Math.cos( thetaI ) * radius;\r\n\t\t\t\tconst z = Math.sin( thetaJ ) * widthRadius;\r\n\r\n\t\t\t\tposArray.push( x, y, z );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuvArray.push(\r\n\t\t\t\t\tj / segments,\r\n\t\t\t\t\ti / heightSegments\r\n\t\t\t\t);\r\n\r\n\t\t\t\t//normal\r\n\r\n\t\t\t\tconst normal = new Vector3( x, y, z ).normalize();\r\n\r\n\t\t\t\tnormalArray.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t// index\r\n\r\n\t\t\t\tindexArray.push(\r\n\t\t\t\t\ti * widthSegments + j,\r\n\t\t\t\t\t( i + 1 ) * widthSegments + ( j + 1 ) % widthSegments,\r\n\t\t\t\t\ti * widthSegments + ( j + 1 ) % widthSegments,\r\n\r\n\t\t\t\t\ti * widthSegments + j,\r\n\t\t\t\t\t( i + 1 ) * widthSegments + j,\r\n\t\t\t\t\t( i + 1 ) * widthSegments + ( j + 1 ) % widthSegments,\r\n\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.setAttribute( 'position', posArray, 3 );\r\n\t\tthis.setAttribute( 'normal', normalArray, 3 );\r\n\t\tthis.setAttribute( 'uv', uvArray, 2 );\r\n\t\tthis.setAttribute( 'index', indexArray, 1 );\r\n\r\n\t}\r\n\r\n\tpublic setAttribute( name: ( 'position' | 'uv' | 'normal' | 'index' ) | ( string & {} ), array: number[], size: number ): void {\r\n\r\n\t\tif ( name == 'index' ) {\r\n\r\n\t\t\tarray.forEach( ( item, index ) => {\r\n\r\n\t\t\t\t// クソ\r\n\t\t\t\tarray[ index ] = item % this.count;\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\tsuper.setAttribute( name, array, size );\r\n\r\n\r\n\r\n\t}\r\n\r\n}\r\n","import { Component, ComponentName } from \"./Component\";\r\nimport { Entity } from \"./Entity\";\r\nimport { EntityQuery, System } from \"./System\";\r\nimport { World } from \"./World\";\r\n\r\nexport interface ECSUpdateEvent {\r\n\tworld: World,\r\n\ttime: number,\r\n\tdeltaTime: number,\r\n}\r\n\r\nexport class ECS {\r\n\r\n\t// time\r\n\tprivate time: number;\r\n\tprivate lastUpdateTime: number;\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.time = 0;\r\n\t\tthis.lastUpdateTime = new Date().getTime();\r\n\r\n\t}\r\n\r\n\tpublic createWorld(): World {\r\n\r\n\t\treturn {\r\n\t\t\tentitiesTotalCount: 0,\r\n\t\t\tentities: [],\r\n\t\t\tcomponents: new Map(),\r\n\t\t\tsystems: new Map()\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t// entity\r\n\r\n\tpublic createEntity( world: World ): Entity {\r\n\r\n\t\tconst entity: Entity = world.entitiesTotalCount ++;\r\n\r\n\t\tworld.entities.push( entity );\r\n\r\n\t\treturn entity;\r\n\r\n\t}\r\n\r\n\tpublic removeEntity( world: World, entity: Entity ): void {\r\n\r\n\t\tconst index = world.entities.findIndex( e => e == entity );\r\n\r\n\t\tif ( index > - 1 ) {\r\n\r\n\t\t\tworld.entities.slice( index, 1 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// component\r\n\r\n\tpublic addComponent<T extends Component >( world: World, entity: Entity, componentName: ComponentName, component: T ) {\r\n\r\n\t\tlet componentArray = world.components.get( componentName );\r\n\r\n\t\tif ( componentArray === undefined ) {\r\n\r\n\t\t\tcomponentArray = [];\r\n\r\n\t\t\tworld.components.set( componentName, componentArray );\r\n\r\n\t\t}\r\n\r\n\t\tif ( componentArray.length < entity + 1 ) {\r\n\r\n\t\t\tcomponentArray.length = entity + 1;\r\n\r\n\t\t}\r\n\r\n\t\tcomponentArray[ entity ] = component;\r\n\r\n\t}\r\n\r\n\tpublic removeComponent( world: World, entity: Entity, componentName: ComponentName ) {\r\n\r\n\t\tconst componentArray = world.components.get( componentName );\r\n\r\n\t\tif ( componentArray && componentArray.length > entity ) {\r\n\r\n\t\t\tcomponentArray[ entity ] = null;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic getComponent<T extends Component >( world: World, entity: Entity, componentName: ComponentName ): T | null {\r\n\r\n\t\tconst component = world.components.get( componentName );\r\n\r\n\t\tif ( component !== undefined ) {\r\n\r\n\t\t\treturn ( component[ entity ] || null ) as T;\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\t// system\r\n\r\n\tpublic addSystem<T extends System >( world: World, systemName: string, system: T ) {\r\n\r\n\t\tworld.systems.set( systemName, system );\r\n\r\n\t}\r\n\r\n\tpublic removeSystem( world: World, componentName: ComponentName ) {\r\n\r\n\t\tworld.systems.delete( componentName );\r\n\r\n\t}\r\n\r\n\t// update\r\n\r\n\tpublic update( world: World ) {\r\n\r\n\t\tconst now = new Date().getTime();\r\n\t\tconst deltaTime = ( now - this.lastUpdateTime ) / 1000;\r\n\t\tthis.time += deltaTime;\r\n\t\tthis.lastUpdateTime = now;\r\n\r\n\t\tconst systemList = world.systems;\r\n\r\n\t\tsystemList.forEach( system => {\r\n\r\n\t\t\tsystem.update( {\r\n\t\t\t\tworld,\r\n\t\t\t\tdeltaTime,\r\n\t\t\t\ttime: this.time,\r\n\t\t\t\tecs: this,\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t// entities\r\n\r\n\tpublic getEntities( world: World, query: EntityQuery ): Entity[] {\r\n\r\n\t\tconst entities = world.entities.filter( entt => {\r\n\r\n\t\t\tfor ( let i = 0; i < query.length; i ++ ) {\r\n\r\n\t\t\t\tconst componentName = query[ i ];\r\n\r\n\t\t\t\tconst component = world.components.get( componentName );\r\n\r\n\t\t\t\tif ( component === undefined || component[ entt ] === undefined ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t} );\r\n\r\n\t\treturn entities;\r\n\r\n\t}\r\n\r\n}\r\n","import { ECS, ECSUpdateEvent } from \"..\";\r\nimport { ComponentName } from \"../Component\";\r\nimport { Entity } from \"../Entity\";\r\n\r\nexport type EntityQuery = ComponentName[]\r\n\r\nexport interface SystemUpdateEvent extends ECSUpdateEvent {\r\n\tecs: ECS\r\n}\r\n\r\nexport class System {\r\n\r\n\tprotected queries: {name: string, query: EntityQuery}[];\r\n\r\n\tconstructor( queries: {[key: string]:EntityQuery} ) {\r\n\r\n\t\tthis.queries = [];\r\n\r\n\t\tconst keys = Object.keys( queries );\r\n\r\n\t\tfor ( let i = 0; i < keys.length; i ++ ) {\r\n\r\n\t\t\tconst name = keys[ i ];\r\n\r\n\t\t\tthis.queries.push( { name, query: queries[ name ] } );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic update( event: SystemUpdateEvent ): void {\r\n\r\n\t\tfor ( let i = 0; i < this.queries.length; i ++ ) {\r\n\r\n\t\t\tconst q = this.queries[ i ];\r\n\r\n\t\t\tconst entities = event.ecs.getEntities( event.world, q.query );\r\n\r\n\t\t\tthis.beforeUpdateImpl( q.name, event );\r\n\r\n\t\t\tfor ( let j = 0; j < entities.length; j ++ ) {\r\n\r\n\t\t\t\tthis.updateImpl( q.name, entities[ j ], event );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.afterUpdateImpl( q.name, event );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprotected beforeUpdateImpl( logicName: string, event: SystemUpdateEvent ) { // eslint-disable-line\r\n\t}\r\n\r\n\tprotected updateImpl( logicName: string, entity: Entity, event: SystemUpdateEvent ) { // eslint-disable-line\r\n\t}\r\n\r\n\tprotected afterUpdateImpl( logicName: string, event: SystemUpdateEvent ) { // eslint-disable-line\r\n\t}\r\n\r\n}\r\n","import { ECS } from '../ECS';\r\nimport { ComponentSceneNode } from '../ECS/Component';\r\nimport { Entity } from '../ECS/Entity';\r\nimport { World } from '../ECS/World';\r\n\r\nexport class SceneGraph {\r\n\r\n\tprivate ecs: ECS;\r\n\tprivate world: World;\r\n\r\n\tprivate entities: Entity[];\r\n\r\n\tprivate cacheTransformUpdateOrder: Entity[] | null;\r\n\tprivate cacheRenderOrder: Entity[] | null;\r\n\r\n\tconstructor( ecs: ECS, world: World ) {\r\n\r\n\t\tthis.ecs = ecs;\r\n\t\tthis.world = world;\r\n\r\n\t\tthis.entities = [];\r\n\r\n\t\tthis.cacheTransformUpdateOrder = null;\r\n\t\tthis.cacheRenderOrder = null;\r\n\r\n\t}\r\n\r\n\tpublic add( parent: Entity, child: Entity ) {\r\n\r\n\t\tconst parentNode = this.ecs.getComponent<ComponentSceneNode>( this.world, parent, 'sceneNode' );\r\n\r\n\t\tif ( parentNode === null ) {\r\n\r\n\t\t\tconsole.log( 'parent not exists.' );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tconst childNode = this.ecs.getComponent<ComponentSceneNode>( this.world, child, 'sceneNode' );\r\n\r\n\t\tif ( childNode === null ) {\r\n\r\n\t\t\tconsole.log( 'children not exists.' );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( childNode.parent !== undefined ) {\r\n\r\n\t\t\tthis.remove( childNode.parent, child );\r\n\r\n\t\t}\r\n\r\n\t\tparentNode.children.push( child );\r\n\t\tchildNode.parent = parent;\r\n\r\n\t\tthis.entities = Array.from( new Set( [ parent, child, ...this.entities ] ) );\r\n\r\n\t\tthis.cacheTransformUpdateOrder = null;\r\n\r\n\t}\r\n\r\n\tpublic remove( parent: Entity, child: Entity ) {\r\n\r\n\t\tconst parentNode = this.ecs.getComponent<ComponentSceneNode>( this.world, parent, 'sceneNode' );\r\n\r\n\t\tif ( parentNode === null ) {\r\n\r\n\t\t\tconsole.log( 'parent not exists.' );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tconst childNode = this.ecs.getComponent<ComponentSceneNode>( this.world, child, 'sceneNode' );\r\n\r\n\t\tif ( childNode === null ) {\r\n\r\n\t\t\tconsole.log( 'children not exists.' );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\t// remove from parent\r\n\r\n\t\tlet i = parentNode.children.findIndex( entity => entity == child );\r\n\r\n\t\tif ( i > - 1 ) {\r\n\r\n\t\t\tparentNode.children.splice( i, 1 );\r\n\r\n\t\t}\r\n\r\n\t\tchildNode.parent = undefined;\r\n\r\n\t\t// remove from entity array\r\n\r\n\t\ti = this.entities.findIndex( entity => entity === child );\r\n\r\n\t\tif ( i > - 1 ) {\r\n\r\n\t\t\tthis.entities.splice( i, 1 );\r\n\r\n\t\t}\r\n\r\n\t\tthis.cacheTransformUpdateOrder = null;\r\n\r\n\t}\r\n\r\n\tpublic getTransformUpdateOrder() {\r\n\r\n\t\tif ( this.cacheTransformUpdateOrder ) return this.cacheTransformUpdateOrder;\r\n\r\n\t\tconst updateOrder: Entity[] = [];\r\n\r\n\t\tconst _ = ( entity: Entity ) => {\r\n\r\n\t\t\tupdateOrder.push( entity );\r\n\r\n\t\t\tconst sceneNode = this.ecs.getComponent<ComponentSceneNode>( this.world, entity, 'sceneNode' );\r\n\r\n\t\t\tif ( sceneNode ) {\r\n\r\n\t\t\t\tfor ( let i = 0; i < sceneNode.children.length; i ++ ) {\r\n\r\n\t\t\t\t\t_( sceneNode.children[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tfor ( let i = 0; i < this.entities.length; i ++ ) {\r\n\r\n\t\t\tconst entity = this.entities[ i ];\r\n\r\n\t\t\tconst sceneNode = this.ecs.getComponent<ComponentSceneNode>( this.world, entity, 'sceneNode' );\r\n\r\n\t\t\tif ( sceneNode && sceneNode.parent === undefined ) {\r\n\r\n\t\t\t\t_( entity );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t}\r\n\r\n\t\tthis.cacheTransformUpdateOrder = updateOrder;\r\n\r\n\t\treturn updateOrder;\r\n\r\n\t}\r\n\r\n\r\n}\r\n"],"names":["VAO","gl","program","name","buffer","size","count","attr","force","attrNameList","i","attribute","indexBuffer","Program","vertexShaderSrc","fragmentShaderSrc","vs","fs","shaderSrc","type","shader","value","uniform","key","id","vao","Buffer","data","usage","target","Texture","src","img","unitId","Core","Vector2","x","y","a","Vector3","z","v","ax","ay","az","bx","by","bz","Matrix4","elm","mat","fov","aspect","near","far","d","eye","up","zAxis","xAxis","yAxis","b","c","e","f","g","h","j","k","l","n","o","p","q","r","s","t","u","w","A","B","det","ivd","_a","pos","rot","scale","position","rotation","elm2","dist","sum","m","tmp","array","Geometry","keys","core","constructor","bufferType","CubeGeometry","width","height","depth","hx","hy","hz","posArray","normalArray","uvArray","indexArray","offset","CylinderGeometry","radiusTop","radiusBottom","radSegments","heightSegments","theta","radius","normal","side","PlaneGeometry","widthSegments","ru","lb","SphereGeometry","thetaI","segments","thetaJ","widthRadius","item","index","ECS","world","entity","componentName","component","componentArray","systemName","system","now","deltaTime","query","entt","System","queries","event","entities","logicName","SceneGraph","ecs","parent","child","parentNode","childNode","updateOrder","_","sceneNode"],"mappings":"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"}