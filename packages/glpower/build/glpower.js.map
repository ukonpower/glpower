{"version":3,"file":"glpower.js","sources":["../src/GLPowerVAO.ts","../src/GLPowerProgram.ts","../src/GLPowerBuffer.ts","../src/Math/Vector.ts","../src/GLPowerTexture.ts","../src/GLPowerFrameBuffer.ts","../src/Power.ts","../src/Math/Matrix.ts","../src/Math/Quaternion.ts","../src/Geometries/Geometry.ts","../src/Geometries/CubeGeometry.ts","../src/Geometries/CylinderGeometry.ts","../src/Geometries/PlaneGeometry.ts","../src/Geometries/SphereGeometry.ts","../src/ECS/index.ts","../../../node_modules/wolfy87-eventemitter/EventEmitter.js","../src/ECS/System/index.ts","../src/SceneGraph/index.ts","../src/Animation/AnimationAction.ts","../src/Animation/Bezier.ts","../src/Animation/Easings.ts","../src/Animation/FCurve.ts","../src/Animation/FCurveGroup.ts","../src/Animation/FCurveKeyFrame.ts","../src/BLidge/index.ts"],"sourcesContent":["import { GLPowerBuffer } from \"./GLPowerBuffer\";\r\n\r\nexport type Attribute = {\r\n\tarray: number[];\r\n\tsize: number;\r\n}\r\n\r\nexport type AttributeBuffer = {\r\n\tbuffer: GLPowerBuffer;\r\n\tsize: number;\r\n\tcount: number;\r\n}\r\n\r\nexport type AttributeBufferWithLocation = {\r\n\tlocation: number | null;\r\n} & AttributeBuffer\r\n\r\nexport class GLPowerVAO {\r\n\r\n\tprivate gl: WebGL2RenderingContext;\r\n\r\n\tpublic vao: WebGLVertexArrayObject | null;\r\n\r\n\tpublic program: WebGLProgram;\r\n\r\n\tprotected indexBuffer: GLPowerBuffer | null;\r\n\r\n\tprotected attributes: {[key: string]: AttributeBufferWithLocation};\r\n\r\n\tpublic vertCount: number;\r\n\tpublic indexCount: number;\r\n\r\n\tconstructor( gl: WebGL2RenderingContext, program: WebGLProgram ) {\r\n\r\n\t\tthis.gl = gl;\r\n\r\n\t\tthis.program = program;\r\n\r\n\t\tthis.vao = this.gl.createVertexArray();\r\n\t\tthis.attributes = {};\r\n\t\tthis.indexBuffer = null;\r\n\r\n\t\tthis.vertCount = 0;\r\n\t\tthis.indexCount = 0;\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tAttribute\r\n\t-------------------------------*/\r\n\r\n\tpublic setAttribute( name: string, buffer: GLPowerBuffer, size: number, count: number ) {\r\n\r\n\t\tlet attr = this.attributes[ name ];\r\n\r\n\t\tif ( ! attr ) {\r\n\r\n\t\t\tattr = {\r\n\t\t\t\tbuffer,\r\n\t\t\t\tlocation: null,\r\n\t\t\t\tsize,\r\n\t\t\t\tcount\r\n\t\t\t};\r\n\r\n\t\t\tthis.attributes[ name ] = attr;\r\n\r\n\t\t}\r\n\r\n\t\tthis.updateAttributes();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic removeAttribute( name: string ) {\r\n\r\n\t\tdelete this.attributes[ name ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic updateAttributes( force?: boolean ) {\r\n\r\n\t\tif ( ! this.vao ) return;\r\n\r\n\t\tthis.vertCount = 0;\r\n\r\n\t\tconst attrNameList = Object.keys( this.attributes );\r\n\r\n\t\tthis.gl.bindVertexArray( this.vao );\r\n\r\n\t\tfor ( let i = 0; i < attrNameList.length; i ++ ) {\r\n\r\n\t\t\tconst name = attrNameList[ i ];\r\n\t\t\tconst attribute = this.attributes[ name ];\r\n\r\n\t\t\tif ( ( attribute.location === null || force ) ) {\r\n\r\n\t\t\t\tattribute.location = this.gl.getAttribLocation( this.program, name );\r\n\r\n\t\t\t\tif ( attribute.location > - 1 ) {\r\n\r\n\t\t\t\t\tthis.gl.bindBuffer( this.gl.ARRAY_BUFFER, attribute.buffer.buffer );\r\n\t\t\t\t\tthis.gl.enableVertexAttribArray( attribute.location );\r\n\t\t\t\t\tthis.gl.vertexAttribPointer( attribute.location, attribute.size, this.gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.vertCount = Math.max( this.vertCount, attribute.count );\r\n\r\n\t\t}\r\n\r\n\t\tthis.gl.bindVertexArray( null );\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tIndex\r\n\t-------------------------------*/\r\n\r\n\tpublic setIndex( indexBuffer: GLPowerBuffer | null ) {\r\n\r\n\t\tthis.indexBuffer = indexBuffer;\r\n\r\n\t\tif ( ! this.vao ) return;\r\n\r\n\t\tthis.gl.bindVertexArray( this.vao );\r\n\r\n\t\tthis.gl.bindBuffer( this.gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer ? this.indexBuffer.buffer : null );\r\n\r\n\t\tthis.gl.bindVertexArray( null );\r\n\r\n\t\tif ( this.indexBuffer && this.indexBuffer.array ) {\r\n\r\n\t\t\tthis.indexCount = this.indexBuffer.array.length;\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\tpublic getVAO() {\r\n\r\n\t\treturn this.vao;\r\n\r\n\t}\r\n\r\n}\r\n","import { Matrix } from \"./Math/Matrix\";\r\nimport { Vector } from \"./Math/Vector\";\r\nimport { GLPowerVAO } from \"./GLPowerVAO\";\r\n\r\nexport type Uniformable = boolean | number | Vector | Matrix;\r\nexport type UniformType =\r\n\t'1f' | '1fv' | '2f' | '2fv' | '3f' | '3fv' | '4f' | '4fv' |\r\n\t'1i' | '1iv' | '2i' | '2iv' | '3i' | '3iv' | '4i' | '4iv' |\r\n\t'Matrix2fv' | 'Matrix3fv' | 'Matrix4fv';\r\n\r\nexport type Uniform = {\r\n\tlocation: WebGLUniformLocation | null;\r\n\tvalue: ( number | boolean )[];\r\n\ttype: string;\r\n\tcache?: ( number | boolean )[];\r\n\tneedsUpdate?: boolean\r\n}\r\n\r\nexport class GLPowerProgram {\r\n\r\n\tpublic gl: WebGL2RenderingContext;\r\n\tpublic program: WebGLProgram | null;\r\n\r\n\tprivate vao: Map<string, GLPowerVAO>;\r\n\tprotected uniforms: Map<string, Uniform>;\r\n\r\n\tconstructor( gl: WebGL2RenderingContext ) {\r\n\r\n\t\tthis.gl = gl;\r\n\r\n\t\tthis.program = this.gl.createProgram();\r\n\r\n\t\tthis.vao = new Map();\r\n\t\tthis.uniforms = new Map();\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tShader\r\n\t-------------------------------*/\r\n\r\n\tpublic setShader( vertexShaderSrc: string, fragmentShaderSrc: string ) {\r\n\r\n\t\tif ( this.program === null ) {\r\n\r\n\t\t\tconsole.warn( 'program is null.' );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tconst vs = this.createShader( vertexShaderSrc, this.gl.VERTEX_SHADER );\r\n\t\tconst fs = this.createShader( fragmentShaderSrc, this.gl.FRAGMENT_SHADER );\r\n\r\n\t\tif ( ! vs || ! fs ) return;\r\n\r\n\t\tthis.gl.attachShader( this.program, vs );\r\n\t\tthis.gl.attachShader( this.program, fs );\r\n\r\n\t\tthis.gl.linkProgram( this.program );\r\n\r\n\t\tif ( ! this.gl.getProgramParameter( this.program, this.gl.LINK_STATUS ) ) {\r\n\r\n\t\t\tconsole.warn( 'program link error.' );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tprotected createShader( shaderSrc: string, type: number ) {\r\n\r\n\t\tconst shader = this.gl.createShader( type );\r\n\r\n\t\tif ( ! shader ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tthis.gl.shaderSource( shader, shaderSrc );\r\n\t\tthis.gl.compileShader( shader );\r\n\r\n\t\tif ( this.gl.getShaderParameter( shader, this.gl.COMPILE_STATUS ) ) {\r\n\r\n\t\t\treturn shader;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.error( this.gl.getShaderInfoLog( shader ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tUniforms\r\n\t-------------------------------*/\r\n\r\n\tpublic setUniform( name: string, type: UniformType, value: ( number | boolean )[] ) {\r\n\r\n\t\tconst uniform = this.uniforms.get( name );\r\n\r\n\t\tif ( uniform ) {\r\n\r\n\t\t\tuniform.type = type;\r\n\t\t\tuniform.value = value;\r\n\r\n\t\t\tif ( uniform.cache ) {\r\n\r\n\t\t\t\tfor ( let i = 0; i < value.length; i ++ ) {\r\n\r\n\t\t\t\t\tif ( uniform.cache[ i ] !== value[ i ] ) {\r\n\r\n\t\t\t\t\t\tuniform.needsUpdate = true;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tuniform.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.uniforms.set( name, {\r\n\t\t\t\tvalue,\r\n\t\t\t\ttype: type,\r\n\t\t\t\tlocation: null,\r\n\t\t\t\tneedsUpdate: true\r\n\t\t\t} );\r\n\r\n\t\t\tthis.updateUniformLocations();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate updateUniformLocations( force?: boolean ) {\r\n\r\n\t\tif ( ! this.program ) return;\r\n\r\n\t\tthis.uniforms.forEach( ( uniform, key ) => {\r\n\r\n\t\t\tif ( uniform.location === null || force ) {\r\n\r\n\t\t\t\tuniform.location = this.gl.getUniformLocation( this.program!, key );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tpublic uploadUniforms() {\r\n\r\n\t\tthis.uniforms.forEach( uniform => {\r\n\r\n\t\t\tif ( uniform.needsUpdate ) {\r\n\r\n\t\t\t\tif ( /Matrix[2|3|4]fv/.test( uniform.type ) ) {\r\n\r\n\t\t\t\t\t( this.gl as any )[ 'uniform' + uniform.type ]( uniform.location, false, uniform.value );\r\n\r\n\t\t\t\t} else if ( /[1|2|3|4][f|i]$/.test( uniform.type ) ) {\r\n\r\n\t\t\t\t\t( this.gl as any )[ 'uniform' + uniform.type ]( uniform.location, ...uniform.value );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t( this.gl as any )[ 'uniform' + uniform.type ]( uniform.location, uniform.value );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniform.cache = uniform.value.concat();\r\n\t\t\t\tuniform.needsUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tVAO\r\n\t-------------------------------*/\r\n\r\n\tpublic getVAO( id: string = '_' ) {\r\n\r\n\t\tif ( ! this.program ) return null;\r\n\r\n\t\tlet vao = this.vao.get( id );\r\n\r\n\t\tif ( vao ) return vao;\r\n\r\n\t\tvao = new GLPowerVAO( this.gl, this.program );\r\n\r\n\t\tthis.vao.set( id, vao );\r\n\r\n\t\treturn vao;\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tDraw??\r\n\t-------------------------------*/\r\n\r\n\tpublic use() {\r\n\r\n\t\tif ( ! this.program ) return;\r\n\r\n\t\tthis.gl.useProgram( this.program );\r\n\r\n\t}\r\n\r\n\tpublic clean() {\r\n\r\n\t\tthis.gl.useProgram( null );\r\n\r\n\t}\r\n\r\n\tpublic getProgram() {\r\n\r\n\t\treturn this.program;\r\n\r\n\t}\r\n\r\n}\r\n","export type BufferType = 'vbo' | 'ibo';\r\nexport type TArrayBuffer = Uint8Array | Uint16Array | Uint32Array | Float32Array | Float64Array\r\n\r\nexport class GLPowerBuffer {\r\n\r\n\tprivate gl: WebGL2RenderingContext;\r\n\tpublic buffer: WebGLBuffer | null;\r\n\tpublic array: TArrayBuffer | null;\r\n\r\n\tconstructor( gl: WebGL2RenderingContext ) {\r\n\r\n\t\tthis.gl = gl;\r\n\r\n\t\tthis.buffer = this.gl.createBuffer();\r\n\r\n\t\tthis.array = null;\r\n\r\n\t}\r\n\r\n\tpublic setData( data: TArrayBuffer, type: BufferType = 'vbo', usage?: number ) {\r\n\r\n\t\tconst target = type == 'vbo' ? this.gl.ARRAY_BUFFER : this.gl.ELEMENT_ARRAY_BUFFER;\r\n\r\n\t\tthis.gl.bindBuffer( target, this.buffer );\r\n\r\n\t\tthis.gl.bufferData( target, data, usage || this.gl.STATIC_DRAW );\r\n\r\n\t\tthis.gl.bindBuffer( target, null );\r\n\r\n\t\tthis.array = data;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n","import { Types } from \"..\";\r\n\r\nexport type IVector2 = {\r\n\tx: number,\r\n\ty: number,\r\n}\r\n\r\nexport type IVector3 = IVector2 & {\r\n\tz: number,\r\n}\r\n\r\nexport type IVector4 = IVector3 & {\r\n\tw: number,\r\n}\r\n\r\nexport class Vector {\r\n\r\n\tpublic x: number;\r\n\tpublic y: number;\r\n\tpublic z: number;\r\n\tpublic w: number;\r\n\r\n\tconstructor( x?: number, y?: number, z?: number, w?: number ) {\r\n\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\tthis.z = z || 0;\r\n\t\tthis.w = w || 0;\r\n\r\n\t}\r\n\r\n\tpublic get isVector() {\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tpublic set( x: number, y?: number, z?: number, w?: number ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y ?? this.y;\r\n\t\tthis.z = z ?? this.z;\r\n\t\tthis.w = w ?? this.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic add( a: number ): Vector\r\n\r\n\tpublic add( a: Vector | Types.Nullable<IVector4> ): Vector\r\n\r\n\tpublic add( a: Vector | Types.Nullable<IVector4> | number ): Vector {\r\n\r\n\t\tif ( typeof a == 'number' ) {\r\n\r\n\t\t\tthis.x += a;\r\n\t\t\tthis.y += a;\r\n\t\t\tthis.z += a;\r\n\t\t\tthis.w += a;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x += a.x ?? 0;\r\n\t\t\tthis.y += a.y ?? 0;\r\n\t\t\tthis.z += a.z ?? 0;\r\n\t\t\tthis.w += a.w ?? 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic sub( a: number ): Vector\r\n\r\n\tpublic sub( a: Vector | Types.Nullable<IVector4> ): Vector\r\n\r\n\tpublic sub( a: Vector | Types.Nullable<IVector4> | number ) {\r\n\r\n\t\tif ( typeof ( a ) == 'number' ) {\r\n\r\n\t\t\tthis.x -= a;\r\n\t\t\tthis.y -= a;\r\n\t\t\tthis.z -= a;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x -= a.x ?? 0;\r\n\t\t\tthis.y -= a.y ?? 0;\r\n\t\t\tthis.z -= a.z ?? 0;\r\n\t\t\tthis.w -= a.w ?? 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic multiply( a: number ) {\r\n\r\n\t\tthis.x *= a;\r\n\t\tthis.y *= a;\r\n\t\tthis.z *= a;\r\n\t\tthis.w *= a;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic divide( a: number ) {\r\n\r\n\t\tthis.x /= a;\r\n\t\tthis.y /= a;\r\n\t\tthis.z /= a;\r\n\t\tthis.w /= a;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic length() {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\r\n\t}\r\n\r\n\tpublic normalize() {\r\n\r\n\t\treturn this.divide( this.length() || 1 );\r\n\r\n\t}\r\n\r\n\tpublic cross( v: Vector | IVector3 ) {\r\n\r\n\t\tconst ax = this.x, ay = this.y, az = this.z;\r\n\t\tconst bx = v.x, by = v.y, bz = v.z;\r\n\r\n\t\tthis.x = ay * bz - az * by;\r\n\t\tthis.y = az * bx - ax * bz;\r\n\t\tthis.z = ax * by - ay * bx;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic dot( v: Vector | IVector3 ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\r\n\t}\r\n\r\n\tpublic copy( a: Vector | Types.Nullable<IVector4> ) {\r\n\r\n\t\tthis.x = a.x ?? 0;\r\n\t\tthis.y = a.y ?? 0;\r\n\t\tthis.z = a.z ?? 0;\r\n\t\tthis.w = a.w ?? 0;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic clone() {\r\n\r\n\t\treturn new Vector( this.x, this.y, this.z, this.w );\r\n\r\n\t}\r\n\r\n\tpublic getElm( type?: 'vec2' | 'vec3' | 'vec4' ) {\r\n\r\n\t\tif ( type == 'vec2' ) {\r\n\r\n\t\t\treturn [ this.x, this.y, this.z ];\r\n\r\n\t\t} else if ( type == 'vec3' ) {\r\n\r\n\t\t\treturn [ this.x, this.y, this.z ];\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn [ this.x, this.y, this.z, this.w ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n","import { Vector } from \"./Math/Vector\";\r\nimport { Types } from \"./types\";\r\n\r\ntype ImagePretense = {\r\n\twidth: number,\r\n\theight: number\r\n}\r\n\r\ntype GLPowerTextureSetting = {\r\n\ttype: number,\r\n\tinternalFormat: number,\r\n\tformat: number,\r\n\tmagFilter: number,\r\n\tminFilter: number,\r\n\tgenerateMipmap: boolean\r\n}\r\n\r\nexport class GLPowerTexture {\r\n\r\n\tpublic unit: number;\r\n\tpublic image: HTMLImageElement | ImagePretense | null;\r\n\tpublic size: Vector;\r\n\r\n\tprivate gl: WebGL2RenderingContext;\r\n\tprivate texture: WebGLTexture | null;\r\n\r\n\tprivate _setting: GLPowerTextureSetting;\r\n\r\n\tconstructor( gl: WebGL2RenderingContext ) {\r\n\r\n\t\tthis.gl = gl;\r\n\t\tthis.image = null;\r\n\t\tthis.unit = 0;\r\n\t\tthis.size = new Vector();\r\n\t\tthis.texture = this.gl.createTexture();\r\n\r\n\t\tthis._setting = {\r\n\t\t\ttype: this.gl.UNSIGNED_BYTE,\r\n\t\t\tinternalFormat: this.gl.RGBA,\r\n\t\t\tformat: this.gl.RGBA,\r\n\t\t\tmagFilter: this.gl.NEAREST,\r\n\t\t\tminFilter: this.gl.NEAREST,\r\n\t\t\tgenerateMipmap: false\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tpublic setting( param: Types.Nullable<GLPowerTextureSetting> ) {\r\n\r\n\t\tthis._setting = {\r\n\t\t\t...this._setting,\r\n\t\t\t...param\r\n\t\t};\r\n\r\n\t\tthis.attach( this.image );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic attach( img: HTMLImageElement | ImagePretense | null ) {\r\n\r\n\t\tthis.image = img;\r\n\r\n\t\tthis.gl.bindTexture( this.gl.TEXTURE_2D, this.texture );\r\n\r\n\t\tif ( this.image ) {\r\n\r\n\t\t\tthis.size.set( this.image.width, this.image.height );\r\n\r\n\t\t\tif ( this.image instanceof HTMLImageElement ) {\r\n\r\n\t\t\t\tthis.gl.texImage2D( this.gl.TEXTURE_2D, 0, this._setting.internalFormat, this._setting.format, this._setting.type, this.image );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.gl.texImage2D( this.gl.TEXTURE_2D, 0, this._setting.internalFormat, this.image.width, this.image.height, 0, this._setting.format, this._setting.type, null );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.size.set( 1, 1 );\r\n\r\n\t\t\tthis.gl.texImage2D( this.gl.TEXTURE_2D, 0, this._setting.internalFormat, this.size.x, this.size.y, 0, this._setting.format, this._setting.type, null );\r\n\r\n\t\t}\r\n\r\n\t\tthis.gl.texParameteri( this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this._setting.magFilter );\r\n\t\tthis.gl.texParameteri( this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this._setting.minFilter );\r\n\r\n\t\tif ( this._setting.generateMipmap ) {\r\n\r\n\t\t\tthis.gl.generateMipmap( this.gl.TEXTURE_2D );\r\n\r\n\t\t}\r\n\r\n\t\tthis.gl.bindTexture( this.gl.TEXTURE_2D, null );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic activate( unitNumber: number ) {\r\n\r\n\t\tthis.gl.activeTexture( this.gl.TEXTURE0 + unitNumber );\r\n\t\tthis.gl.bindTexture( this.gl.TEXTURE_2D, this.texture );\r\n\r\n\t\tthis.unit = unitNumber;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic load( src: string, callBack?: () => void ) {\r\n\r\n\t\tconst img = new Image();\r\n\r\n\t\timg.onload = () => {\r\n\r\n\t\t\tthis.attach( img );\r\n\r\n\t\t\tif ( callBack ) callBack();\r\n\r\n\t\t};\r\n\r\n\t\timg.src = src;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic getTexture() {\r\n\r\n\t\treturn this.texture;\r\n\r\n\t}\r\n\r\n\tpublic loadAsync( src: string ) {\r\n\r\n\t\treturn new Promise( ( resolve, reject ) => {\r\n\r\n\t\t\tconst img = new Image();\r\n\r\n\t\t\timg.onload = () => {\r\n\r\n\t\t\t\tthis.attach( img );\r\n\r\n\t\t\t\tresolve( this );\r\n\r\n\t\t\t};\r\n\r\n\t\t\timg.onerror = () => {\r\n\r\n\t\t\t\treject( 'img error, ' + src );\r\n\r\n\t\t\t};\r\n\r\n\t\t\timg.src = src;\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n}\r\n","import { GLPowerTexture } from \"./GLPowerTexture\";\r\nimport { Vector } from \"./Math/Vector\";\r\n\r\nexport class GLPowerFrameBuffer {\r\n\r\n\tpublic size: Vector;\r\n\r\n\tprivate gl: WebGL2RenderingContext;\r\n\tprivate frameBuffer: WebGLFramebuffer | null;\r\n\tprivate depthRenderBuffer: WebGLRenderbuffer | null;\r\n\r\n\tpublic textures: GLPowerTexture[];\r\n\tpublic textureAttachmentList: number[];\r\n\r\n\tconstructor( gl: WebGL2RenderingContext ) {\r\n\r\n\t\tthis.gl = gl;\r\n\r\n\t\tthis.size = new Vector( 1, 1 );\r\n\r\n\t\tthis.frameBuffer = this.gl.createFramebuffer();\r\n\t\tthis.depthRenderBuffer = this.gl.createRenderbuffer();\r\n\r\n\t\tthis.textures = [];\r\n\t\tthis.textureAttachmentList = [];\r\n\r\n\t\t// depth buffer\r\n\r\n\t\tthis.gl.bindRenderbuffer( this.gl.RENDERBUFFER, this.depthRenderBuffer );\r\n\t\tthis.gl.bindFramebuffer( this.gl.FRAMEBUFFER, this.frameBuffer );\r\n\t\tthis.gl.framebufferRenderbuffer( this.gl.FRAMEBUFFER, this.gl.DEPTH_ATTACHMENT, this.gl.RENDERBUFFER, this.depthRenderBuffer );\r\n\t\tthis.gl.bindFramebuffer( this.gl.FRAMEBUFFER, null );\r\n\t\tthis.gl.bindRenderbuffer( this.gl.RENDERBUFFER, null );\r\n\r\n\t}\r\n\r\n\tpublic setTexture( textures: GLPowerTexture[] ) {\r\n\r\n\t\tthis.textures = textures;\r\n\t\tthis.textureAttachmentList.length = 0;\r\n\r\n\t\tthis.gl.bindFramebuffer( this.gl.FRAMEBUFFER, this.frameBuffer );\r\n\r\n\t\tthis.textures.forEach( ( t, i ) => {\r\n\r\n\t\t\tt.attach( { width: this.size.x, height: this.size.y } );\r\n\r\n\t\t\tthis.gl.bindTexture( this.gl.TEXTURE_2D, t.getTexture() );\r\n\t\t\tthis.gl.texParameteri( this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR );\r\n\t\t\tthis.gl.texParameteri( this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR );\r\n\t\t\tthis.gl.bindTexture( this.gl.TEXTURE_2D, null );\r\n\r\n\t\t\tconst attachment = this.gl.COLOR_ATTACHMENT0 + i;\r\n\t\t\tthis.gl.framebufferTexture2D( this.gl.FRAMEBUFFER, attachment, this.gl.TEXTURE_2D, t.getTexture(), 0 );\r\n\r\n\t\t\tthis.textureAttachmentList.push( attachment );\r\n\r\n\t\t} );\r\n\r\n\t\tthis.gl.bindFramebuffer( this.gl.FRAMEBUFFER, null );\r\n\r\n\t}\r\n\r\n\tpublic setSize( size: Vector ): void\r\n\r\n\tpublic setSize( width: number, height: number ) : void\r\n\r\n\tpublic setSize( width_size: number | Vector, height?: number ) {\r\n\r\n\t\tif ( typeof width_size == 'number' ) {\r\n\r\n\t\t\tthis.size.x = width_size;\r\n\r\n\t\t\tif ( height !== undefined ) {\r\n\r\n\t\t\t\tthis.size.y = height;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.size.copy( width_size );\r\n\r\n\t\t}\r\n\r\n\t\tthis.setTexture( this.textures );\r\n\r\n\t\tthis.textures.forEach( t => {\r\n\r\n\t\t\tt.attach( { width: this.size.x, height: this.size.y } );\r\n\r\n\t\t} );\r\n\r\n\t\tif ( this.depthRenderBuffer ) {\r\n\r\n\t\t\tthis.gl.bindRenderbuffer( this.gl.RENDERBUFFER, this.depthRenderBuffer );\r\n\t\t\tthis.gl.renderbufferStorage( this.gl.RENDERBUFFER, this.gl.DEPTH_COMPONENT16, this.size.x, this.size.y );\r\n\t\t\tthis.gl.bindRenderbuffer( this.gl.RENDERBUFFER, null );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic getFrameBuffer() {\r\n\r\n\t\treturn this.frameBuffer;\r\n\r\n\t}\r\n\r\n}\r\n","import { GLPowerProgram } from \"./GLPowerProgram\";\r\nimport { GLPowerBuffer } from \"./GLPowerBuffer\";\r\nimport { GLPowerTexture } from \"./GLPowerTexture\";\r\nimport { GLPowerFrameBuffer } from \"./GLPowerFrameBuffer\";\r\n\r\nexport class Power {\r\n\r\n\tpublic gl: WebGL2RenderingContext;\r\n\r\n\tconstructor( gl: WebGL2RenderingContext ) {\r\n\r\n\t\tthis.gl = gl;\r\n\r\n\t\tthis.gl.pixelStorei( gl.UNPACK_FLIP_Y_WEBGL, true );\r\n\r\n\t\tthis.gl.getExtension( \"EXT_color_buffer_float\" );\r\n\t\tthis.gl.getExtension( \"EXT_color_buffer_half_float\" );\r\n\r\n\t}\r\n\r\n\tpublic createProgram() {\r\n\r\n\t\tconst program = new GLPowerProgram( this.gl );\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n\tpublic createBuffer() {\r\n\r\n\t\tconst vertexBuffer = new GLPowerBuffer( this.gl );\r\n\r\n\t\treturn vertexBuffer;\r\n\r\n\t}\r\n\r\n\tpublic createTexture() {\r\n\r\n\t\tconst texture = new GLPowerTexture( this.gl );\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n\tpublic createFrameBuffer() {\r\n\r\n\t\tconst frameBuffer = new GLPowerFrameBuffer( this.gl );\r\n\r\n\t\treturn frameBuffer;\r\n\r\n\t}\r\n\r\n}\r\n\r\n","import { IVector4 } from \"..\";\r\nimport { Quaternion } from \"./Quaternion\";\r\nimport { IVector3, Vector } from \"./Vector\";\r\n\r\nexport class Matrix {\r\n\r\n\tpublic elm: number[];\r\n\r\n\tconstructor( elm?: number [] ) {\r\n\r\n\t\tthis.elm = [\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1,\r\n\t\t];\r\n\r\n\t\tif ( elm ) {\r\n\r\n\t\t\tthis.set( elm );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic identity() {\r\n\r\n\t\tthis.elm = [\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1,\r\n\t\t];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic clone() {\r\n\r\n\t\treturn new Matrix().copy( this );\r\n\r\n\t}\r\n\r\n\tpublic copy( mat: Matrix ) {\r\n\r\n\t\tthis.set( mat.elm );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic perspective( fov: number, aspect: number, near: number, far: number ) {\r\n\r\n\t\tvar r = 1 / Math.tan( fov * Math.PI / 360 );\r\n\t\tvar d = far - near;\r\n\r\n\t\tthis.elm = [\r\n\t\t\tr / aspect, 0, 0, 0,\r\n\t\t\t0, r, 0, 0,\r\n\t\t\t0, 0, - ( far + near ) / d, - 1,\r\n\t\t\t0, 0, - ( far * near * 2 ) / d, 0\r\n\t\t];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic lookAt( eye: Vector, target: Vector, up: Vector ) {\r\n\r\n\t\tconst zAxis = eye.clone().sub( target ).normalize();\r\n\t\tconst xAxis = up.clone().cross( zAxis ).normalize();\r\n\t\tconst yAxis = zAxis.clone().cross( xAxis ).normalize();\r\n\r\n\t\tthis.elm = [\r\n\t\t   xAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t   xAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t   xAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t   - eye.dot( xAxis ),\r\n\t\t   - eye.dot( yAxis ),\r\n\t\t   - eye.dot( zAxis ),\r\n\t\t   1,\r\n\t\t];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic inverse() {\r\n\r\n\t\tconst a = this.elm[ 0 ], b = this.elm[ 1 ], c = this.elm[ 2 ], d = this.elm[ 3 ],\r\n\t\t\te = this.elm[ 4 ], f = this.elm[ 5 ], g = this.elm[ 6 ], h = this.elm[ 7 ],\r\n\t\t\ti = this.elm[ 8 ], j = this.elm[ 9 ], k = this.elm[ 10 ], l = this.elm[ 11 ],\r\n\t\t\tm = this.elm[ 12 ], n = this.elm[ 13 ], o = this.elm[ 14 ], p = this.elm[ 15 ],\r\n\t\t\tq = a * f - b * e, r = a * g - c * e,\r\n\t\t\ts = a * h - d * e, t = b * g - c * f,\r\n\t\t\tu = b * h - d * f, v = c * h - d * g,\r\n\t\t\tw = i * n - j * m, x = i * o - k * m,\r\n\t\t\ty = i * p - l * m, z = j * o - k * n,\r\n\t\t\tA = j * p - l * n, B = k * p - l * o,\r\n\t\t\tdet = ( q * B - r * A + s * z + t * y - u * x + v * w ),\r\n\t\t\tivd = 1 / det;\r\n\r\n\t\tif ( det == 0 ) return this.identity();\r\n\r\n\t\tthis.elm[ 0 ] = ( f * B - g * A + h * z ) * ivd;\r\n\t\tthis.elm[ 1 ] = ( - b * B + c * A - d * z ) * ivd;\r\n\t\tthis.elm[ 2 ] = ( n * v - o * u + p * t ) * ivd;\r\n\t\tthis.elm[ 3 ] = ( - j * v + k * u - l * t ) * ivd;\r\n\t\tthis.elm[ 4 ] = ( - e * B + g * y - h * x ) * ivd;\r\n\t\tthis.elm[ 5 ] = ( a * B - c * y + d * x ) * ivd;\r\n\t\tthis.elm[ 6 ] = ( - m * v + o * s - p * r ) * ivd;\r\n\t\tthis.elm[ 7 ] = ( i * v - k * s + l * r ) * ivd;\r\n\t\tthis.elm[ 8 ] = ( e * A - f * y + h * w ) * ivd;\r\n\t\tthis.elm[ 9 ] = ( - a * A + b * y - d * w ) * ivd;\r\n\t\tthis.elm[ 10 ] = ( m * u - n * s + p * q ) * ivd;\r\n\t\tthis.elm[ 11 ] = ( - i * u + j * s - l * q ) * ivd;\r\n\t\tthis.elm[ 12 ] = ( - e * z + f * x - g * w ) * ivd;\r\n\t\tthis.elm[ 13 ] = ( a * z - b * x + c * w ) * ivd;\r\n\t\tthis.elm[ 14 ] = ( - m * t + n * r - o * q ) * ivd;\r\n\t\tthis.elm[ 15 ] = ( i * t - j * r + k * q ) * ivd;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic transpose() {\r\n\r\n\t\t// this.elm = [\r\n\t\t// \t1, 0, 0, 0,\r\n\t\t// \t0, 1, 0, 0,\r\n\t\t// \t0, 0, 1, 0,\r\n\t\t// \t0, 0, 0, 1,\r\n\t\t// ];\r\n\r\n\t\tconst e11 = this.elm[ 0 ], e12 = this.elm[ 1 ], e13 = this.elm[ 2 ], e14 = this.elm[ 3 ],\r\n\t\t\te21 = this.elm[ 4 ], e22 = this.elm[ 5 ], e23 = this.elm[ 6 ], e24 = this.elm[ 7 ],\r\n\t\t\te31 = this.elm[ 8 ], e32 = this.elm[ 9 ], e33 = this.elm[ 10 ], e34 = this.elm[ 11 ],\r\n\t\t\te41 = this.elm[ 12 ], e42 = this.elm[ 13 ], e43 = this.elm[ 14 ], e44 = this.elm[ 15 ];\r\n\r\n\r\n\t\tthis.elm[ 0 ] = e11; this.elm[ 1 ] = e21; this.elm[ 2 ] = e31; this.elm[ 3 ] = e41;\r\n\t\tthis.elm[ 4 ] = e12; this.elm[ 5 ] = e22; this.elm[ 6 ] = e32; this.elm[ 7 ] = e42;\r\n\t\tthis.elm[ 8 ] = e13; this.elm[ 9 ] = e23; this.elm[ 10 ] = e33; this.elm[ 11 ] = e43;\r\n\t\tthis.elm[ 12 ] = e14; this.elm[ 13 ] = e24; this.elm[ 14 ] = e34; this.elm[ 15 ] = e44;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic set( elm: number[] ) {\r\n\r\n\t\tfor ( let i = 0; i < this.elm.length; i ++ ) {\r\n\r\n\t\t\tthis.elm[ i ] = elm[ i ] ?? 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic setFromTransform( pos: IVector3, qua: Quaternion | IVector4, scale: IVector3 ) {\r\n\r\n\t\tthis.identity();\r\n\r\n\t\tthis.applyPosition( pos );\r\n\r\n\t\tthis.applyQuaternion( qua );\r\n\r\n\t\tthis.applyScale( scale );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic decompose( pos?: IVector3, rot?: IVector3, scale?: IVector3 ) {\r\n\r\n\t\tif ( pos ) {\r\n\r\n\t\t\tpos.x = this.elm[ 12 ];\r\n\t\t\tpos.y = this.elm[ 13 ];\r\n\t\t\tpos.z = this.elm[ 14 ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic applyPosition( position: IVector3 ) {\r\n\r\n\t\tthis.matmul( [\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\tposition.x, position.y, position.z, 1\r\n\t\t] );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic applyQuaternion( q: Quaternion | IVector4 ) {\r\n\r\n\t\tconst x = q.x, y = q.y, z = q.z, w = q.w;\r\n\t\tconst xx = x * x, yy = y * y, zz = z * z, ww = w * w;\r\n\t\tconst xy = x * y, xz = x * z, xw = x * w, yz = y * z, yw = y * w, zw = z * w;\r\n\r\n\t\tthis.matmul( [\r\n\t\t\txx - yy - zz + ww,\r\n\t\t\t2 * ( xy + zw ),\r\n\t\t\t2 * ( xz - yw ),\r\n\t\t\t0,\r\n\r\n\t\t\t2 * ( xy - zw ),\r\n\t\t\t- xx + yy - zz + ww,\r\n\t\t\t2 * ( yz + xw ),\r\n\t\t\t0,\r\n\r\n\t\t\t2 * ( xz + yw ),\r\n\t\t\t2 * ( yz - xw ),\r\n\t\t\t- xx - yy + zz + ww,\r\n\r\n\t\t\t0, 0, 0, 0, 1\r\n\t\t] );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic applyScale( scale: IVector3 ) {\r\n\r\n\t\tthis.matmul( [\r\n\t\t\tscale.x, 0, 0, 0,\r\n\t\t\t0, scale.y, 0, 0,\r\n\t\t\t0, 0, scale.z, 0,\r\n\t\t\t0, 0, 0, 1\r\n\t\t] );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tprotected matmul( elm2: number[] ) {\r\n\r\n\t\tconst dist = new Array( 16 );\r\n\r\n\t\tfor ( let i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\tfor ( let j = 0; j < 4; j ++ ) {\r\n\r\n\t\t\t\tlet sum = 0;\r\n\r\n\t\t\t\tfor ( let k = 0; k < 4; k ++ ) {\r\n\r\n\t\t\t\t\tsum += this.elm[ k * 4 + j ] * elm2[ k + i * 4 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdist[ j + i * 4 ] = sum;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.elm = dist;\r\n\r\n\t}\r\n\r\n\tpublic multiply( m: Matrix ) {\r\n\r\n\t\tthis.matmul( m.elm );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic preMultiply( m: Matrix ) {\r\n\r\n\t\tconst tmp = this.copyToArray( [] );\r\n\r\n\t\tthis.set( m.elm );\r\n\r\n\t\tthis.matmul( tmp );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic copyToArray( array: number[] ) {\r\n\r\n\t\tarray.length = this.elm.length;\r\n\r\n\t\tfor ( let i = 0; i < this.elm.length; i ++ ) {\r\n\r\n\t\t\tarray[ i ] = this.elm[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\r\n}\r\n","import { IVector3 } from \"..\";\r\nimport { Vector } from \"./Vector\";\r\n\r\nexport type Quat = {\r\n\tx: number,\r\n\ty: number,\r\n\tz: number\r\n}\r\n\r\nexport type EulerOrder = 'XYZ' | 'XZY' | 'ZYX' | 'YZX'\r\n\r\nexport class Quaternion {\r\n\r\n\tpublic x: number;\r\n\tpublic y: number;\r\n\tpublic z: number;\r\n\tpublic w: number;\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\t\tthis.z = 0;\r\n\t\tthis.w = 1;\r\n\r\n\t}\r\n\r\n\tpublic euler( euler: Vector | IVector3, order: EulerOrder = 'XYZ' ) {\r\n\r\n\t\tconst sx = Math.sin( euler.x / 2 );\r\n\t\tconst sy = Math.sin( euler.y / 2 );\r\n\t\tconst sz = Math.sin( euler.z / 2 );\r\n\r\n\t\tconst cx = Math.cos( euler.x / 2 );\r\n\t\tconst cy = Math.cos( euler.y / 2 );\r\n\t\tconst cz = Math.cos( euler.z / 2 );\r\n\r\n\t\tif ( order == 'XYZ' ) {\r\n\r\n\t\t\tthis.x = cx * sy * sz + sx * cy * cz;\r\n\t\t\tthis.y = - sx * cy * sz + cx * sy * cz;\r\n\t\t\tthis.z = cx * cy * sz + sx * sy * cz;\r\n\t\t\tthis.w = - sx * sy * sz + cx * cy * cz;\r\n\r\n\t\t} else if ( order == 'XZY' ) {\r\n\r\n\t\t\tthis.x = - cx * sy * sz + sx * cy * cz;\r\n\t\t\tthis.y = cx * sy * cz - sx * cy * sz;\r\n\t\t\tthis.z = sx * sy * cz + cx * cy * sz;\r\n\t\t\tthis.w = sx * sy * sz + cx * cy * cz;\r\n\r\n\t\t} else if ( order == 'YZX' ) {\r\n\r\n\t\t\tthis.x = sx * cy * cz + cx * sy * sz;\r\n\t\t\tthis.y = sx * cy * sz + cx * sy * cz;\r\n\t\t\tthis.z = - sx * sy * cz + cx * cy * sz;\r\n\t\t\tthis.w = - sx * sy * sz + cx * cy * cz;\r\n\r\n\t\t} else if ( order == 'ZYX' ) {\r\n\r\n\t\t\tthis.x = sx * cy * cz - cx * sy * sz;\r\n\t\t\tthis.y = sx * cy * sz + cx * sy * cz;\r\n\t\t\tthis.z = - sx * sy * cz + cx * cy * sz;\r\n\t\t\tthis.w = sx * sy * sz + cx * cy * cz;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tpublic multiply() {\r\n\t}\r\n\r\n}\r\n","import { BufferType } from \"../GLPowerBuffer\";\r\nimport { Power } from \"../Power\";\r\nimport { Attribute, AttributeBuffer } from \"../GLPowerVAO\";\r\n\r\ntype DefaultAttributeName = 'position' | 'uv' | 'normal' | 'index';\r\n\r\nexport class Geometry {\r\n\r\n\tpublic count: number = 0;\r\n\r\n\tpublic attributes: {[key: string]: Attribute} = {};\r\n\r\n\tconstructor() {\r\n\t}\r\n\r\n\tpublic setAttribute( name: DefaultAttributeName | ( string & {} ), array: number[], size: number ) {\r\n\r\n\t\tthis.attributes[ name ] = {\r\n\t\t\tarray,\r\n\t\t\tsize\r\n\t\t};\r\n\r\n\t\tthis.updateVertCount();\r\n\r\n\t}\r\n\r\n\tpublic getAttribute( name: DefaultAttributeName | ( string & {} ) ) {\r\n\r\n\t\treturn this.attributes[ name ];\r\n\r\n\t}\r\n\r\n\tprivate updateVertCount() {\r\n\r\n\t\tconst keys = Object.keys( this.attributes );\r\n\r\n\t\tthis.count = keys.length > 0 ? Infinity : 0;\r\n\r\n\t\tkeys.forEach( name => {\r\n\r\n\t\t\tconst attribute = this.attributes[ name ];\r\n\r\n\t\t\tif ( name != 'index' ) {\r\n\r\n\t\t\t\tthis.count = Math.min( attribute.array.length / attribute.size, this.count );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t// ecs\r\n\r\n\tpublic getAttributeBuffer( core: Power, name: DefaultAttributeName | ( string & {} ), constructor: Float32ArrayConstructor | Uint16ArrayConstructor, bufferType: BufferType = 'vbo' ): AttributeBuffer {\r\n\r\n\t\tconst attr = this.getAttribute( name );\r\n\r\n\t\treturn {\r\n\t\t\tbuffer: core.createBuffer().setData( new constructor( attr.array ), bufferType ),\r\n\t\t\tsize: attr.size,\r\n\t\t\tcount: attr.array.length / attr.size\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tpublic getComponent( core: Power ) {\r\n\r\n\t\treturn {\r\n\t\t\tattributes: [\r\n\t\t\t\t{ name: 'position', ...this.getAttributeBuffer( core, 'position', Float32Array ) },\r\n\t\t\t\t{ name: 'uv', ...this.getAttributeBuffer( core, 'uv', Float32Array ) },\r\n\t\t\t\t{ name: 'normal', ...this.getAttributeBuffer( core, 'normal', Float32Array ) },\r\n\t\t\t],\r\n\t\t\tindex: this.getAttributeBuffer( core, 'index', Uint16Array, 'ibo' )\r\n\t\t};\r\n\r\n\t}\r\n\r\n}\r\n","import { Geometry } from './Geometry';\r\n\r\nexport class CubeGeometry extends Geometry {\r\n\r\n\tconstructor( width: number = 1, height: number = 1, depth: number = 1 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tconst hx = width / 2;\r\n\t\tconst hy = height / 2;\r\n\t\tconst hz = depth / 2;\r\n\r\n\t\tconst posArray = [\r\n\t\t\t- hx, hy, hz,\r\n\t\t\thx, hy, hz,\r\n\t\t\t- hx, - hy, hz,\r\n\t\t\thx, - hy, hz,\r\n\r\n\t\t\thx, hy, - hz,\r\n\t\t\t- hx, hy, - hz,\r\n\t\t\thx, - hy, - hz,\r\n\t\t\t- hx, - hy, - hz,\r\n\r\n\t\t\thx, hy, hz,\r\n\t\t\thx, hy, - hz,\r\n\t\t\thx, - hy, hz,\r\n\t\t\thx, - hy, - hz,\r\n\r\n\t\t\t- hx, hy, - hz,\r\n\t\t\t- hx, hy, hz,\r\n\t\t\t- hx, - hy, - hz,\r\n\t\t\t- hx, - hy, hz,\r\n\r\n\t\t\t- hx, hy, - hz,\r\n\t\t\thx, hy, - hz,\r\n\t\t\t- hx, hy, hz,\r\n\t\t\thx, hy, hz,\r\n\r\n\t\t\t- hx, - hy, hz,\r\n\t\t\thx, - hy, hz,\r\n\t\t\t- hx, - hy, - hz,\r\n\t\t\thx, - hy, - hz,\r\n\r\n\t\t];\r\n\r\n\t\tconst normalArray = [\r\n\t\t\t0, 0, 1,\r\n\t\t\t0, 0, 1,\r\n\t\t\t0, 0, 1,\r\n\t\t\t0, 0, 1,\r\n\t\t\t0, 0, - 1,\r\n\t\t\t0, 0, - 1,\r\n\t\t\t0, 0, - 1,\r\n\t\t\t0, 0, - 1,\r\n\t\t\t1, 0, 0,\r\n\t\t\t1, 0, 0,\r\n\t\t\t1, 0, 0,\r\n\t\t\t1, 0, 0,\r\n\t\t\t- 1, 0, 0,\r\n\t\t\t- 1, 0, 0,\r\n\t\t\t- 1, 0, 0,\r\n\t\t\t- 1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, - 1, 0,\r\n\t\t\t0, - 1, 0,\r\n\t\t\t0, - 1, 0,\r\n\t\t\t0, - 1, 0,\r\n\t\t];\r\n\r\n\t\tconst uvArray = [];\r\n\t\tconst indexArray = [];\r\n\r\n\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tuvArray.push(\r\n\t\t\t\t0, 1,\r\n\t\t\t\t1, 1,\r\n\t\t\t\t0, 0,\r\n\t\t\t\t1, 0\r\n\t\t\t);\r\n\r\n\t\t\tconst offset = 4 * i;\r\n\r\n\t\t\tindexArray.push(\r\n\t\t\t\t0 + offset, 2 + offset, 1 + offset, 1 + offset, 2 + offset, 3 + offset\r\n\t\t\t);\r\n\r\n\t\t}\r\n\r\n\t\tthis.setAttribute( 'position', posArray, 3 );\r\n\t\tthis.setAttribute( 'normal', normalArray, 3 );\r\n\t\tthis.setAttribute( 'uv', uvArray, 2 );\r\n\t\tthis.setAttribute( 'index', indexArray, 1 );\r\n\r\n\t}\r\n\r\n}\r\n","import { Geometry } from './Geometry';\r\nimport { Vector } from '../Math/Vector';\r\n\r\nexport class CylinderGeometry extends Geometry {\r\n\r\n\tconstructor( radiusTop: number = 0.5, radiusBottom: number = 0.5, height: number = 1, radSegments: number = 10, heightSegments: number = 1 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tconst posArray = [];\r\n\t\tconst normalArray = [];\r\n\t\tconst uvArray = [];\r\n\t\tconst indexArray = [];\r\n\r\n\t\t//上下面分2回多くループ\r\n\t\tfor ( let i = 0; i <= heightSegments + 2; i ++ ) {\r\n\r\n\t\t\tfor ( let j = 0; j < radSegments; j ++ ) {\r\n\r\n\t\t\t\tconst theta = Math.PI * 2.0 / radSegments * j;\r\n\r\n\t\t\t\tif ( i <= heightSegments ) {\r\n\r\n\t\t\t\t\t//side\r\n\t\t\t\t\tconst w = i / heightSegments;\r\n\t\t\t\t\tconst radius = ( 1.0 - w ) * radiusBottom + w * radiusTop;\r\n\r\n\t\t\t\t\tconst x = Math.cos( theta ) * radius;\r\n\t\t\t\t\tconst y = - ( height / 2 ) + ( height / heightSegments ) * i;\r\n\t\t\t\t\tconst z = Math.sin( theta ) * radius;\r\n\r\n\t\t\t\t\tposArray.push( x, y, z );\r\n\r\n\t\t\t\t\tuvArray.push(\r\n\t\t\t\t\t\tj / radSegments,\r\n\t\t\t\t\t\ti / heightSegments\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tconst normal = new Vector( Math.cos( theta ), 0, Math.sin( theta ) ).normalize();\r\n\r\n\t\t\t\t\tnormalArray.push(\r\n\t\t\t\t\t\tnormal.x,\r\n\t\t\t\t\t\tnormal.y,\r\n\t\t\t\t\t\tnormal.z\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tif ( i < heightSegments ) {\r\n\r\n\t\t\t\t\t\tindexArray.push(\r\n\t\t\t\t\t\t\ti * radSegments + j,\r\n\t\t\t\t\t\t\t( i + 1 ) * radSegments + ( j + 1 ) % radSegments,\r\n\t\t\t\t\t\t\ti * radSegments + ( j + 1 ) % radSegments,\r\n\r\n\t\t\t\t\t\t\ti * radSegments + j,\r\n\t\t\t\t\t\t\t( i + 1 ) * radSegments + j,\r\n\t\t\t\t\t\t\t( i + 1 ) * radSegments + ( j + 1 ) % radSegments,\r\n\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t//bottom, top\r\n\r\n\t\t\t\t\tconst side = i - heightSegments - 1;\r\n\r\n\t\t\t\t\tconst radius = side ? radiusTop : radiusBottom;\r\n\r\n\t\t\t\t\tconst x = Math.cos( theta ) * radius;\r\n\t\t\t\t\tconst y = - ( height / 2 ) + height * ( side );\r\n\t\t\t\t\tconst z = Math.sin( theta ) * radius;\r\n\r\n\t\t\t\t\tposArray.push( x, y, z );\r\n\r\n\t\t\t\t\tuvArray.push(\r\n\t\t\t\t\t\t( x + radius ) * 0.5 / radius,\r\n\t\t\t\t\t\t( z + radius ) * 0.5 / radius,\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tnormalArray.push( 0, - 1 + side * 2, 0 );\r\n\r\n\t\t\t\t\tconst offset = radSegments * ( heightSegments + ( side + 1 ) );\r\n\r\n\t\t\t\t\tif ( j <= radSegments - 2 ) {\r\n\r\n\t\t\t\t\t\tif ( side == 0 ) {\r\n\r\n\t\t\t\t\t\t\tindexArray.push(\r\n\t\t\t\t\t\t\t\toffset, offset + j, offset + j + 1,\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tindexArray.push(\r\n\t\t\t\t\t\t\t\toffset, offset + j + 1, offset + j\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// let offset = radSegments * heightSegments;\r\n\t\t// for( let i = 2; i < radSegments; i++ ){\r\n\r\n\t\t// \tindexArray.push(\r\n\t\t// \t\t0, i, i - 1,\r\n\t\t// \t\t0 + offset, i + offset, i - 1 + offset,\r\n\t\t// \t);\r\n\r\n\t\t// }\r\n\r\n\t\tthis.setAttribute( 'position', posArray, 3 );\r\n\t\tthis.setAttribute( 'normal', normalArray, 3 );\r\n\t\tthis.setAttribute( 'uv', uvArray, 2 );\r\n\t\tthis.setAttribute( 'index', indexArray, 1 );\r\n\r\n\t}\r\n\r\n}\r\n","import { Geometry } from './Geometry';\r\n\r\nexport class PlaneGeometry extends Geometry {\r\n\r\n\tconstructor( width: number = 1, height: number = 1, widthSegments: number = 1, heightSegments: number = 1 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tconst hx = width / 2;\r\n\t\tconst hy = height / 2;\r\n\r\n\t\tconst posArray = [];\r\n\t\tconst normalArray = [];\r\n\t\tconst uvArray = [];\r\n\t\tconst indexArray = [];\r\n\r\n\t\tfor ( let i = 0; i <= heightSegments; i ++ ) {\r\n\r\n\t\t\tfor ( let j = 0; j <= widthSegments; j ++ ) {\r\n\r\n\t\t\t\tconst x = ( j / widthSegments );\r\n\t\t\t\tconst y = ( i / widthSegments );\r\n\r\n\t\t\t\tposArray.push(\r\n\t\t\t\t\t- hx + width * x,\r\n\t\t\t\t\t- hy + height * y,\r\n\t\t\t\t\t0\r\n\t\t\t\t);\r\n\r\n\t\t\t\tuvArray.push( x, y );\r\n\r\n\t\t\t\tnormalArray.push( 0, 0, 1 );\r\n\r\n\t\t\t\tif ( i > 0 && j > 0 ) {\r\n\r\n\t\t\t\t\tconst n = ( widthSegments + 1 );\r\n\t\t\t\t\tconst ru = n * i + j;\r\n\t\t\t\t\tconst lb = n * ( i - 1 ) + j - 1;\r\n\r\n\t\t\t\t\tindexArray.push(\r\n\t\t\t\t\t\tru, n * i + j - 1, lb,\r\n\t\t\t\t\t\tru, lb, n * ( i - 1 ) + j,\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.setAttribute( 'position', posArray, 3 );\r\n\t\tthis.setAttribute( 'normal', normalArray, 3 );\r\n\t\tthis.setAttribute( 'uv', uvArray, 2 );\r\n\t\tthis.setAttribute( 'index', indexArray, 1 );\r\n\r\n\t}\r\n\r\n}\r\n","import { Geometry } from './Geometry';\r\nimport { Vector } from '../Math/Vector';\r\n\r\nexport class SphereGeometry extends Geometry {\r\n\r\n\tconstructor( radius: number = 0.5, widthSegments: number = 20, heightSegments: number = 10 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tconst posArray = [];\r\n\t\tconst normalArray = [];\r\n\t\tconst uvArray = [];\r\n\t\tconst indexArray = [];\r\n\r\n\t\tfor ( let i = 0; i <= heightSegments; i ++ ) {\r\n\r\n\t\t\tconst thetaI = i / heightSegments * Math.PI;\r\n\r\n\t\t\tconst segments = ( i != 0 && i != heightSegments ) ? widthSegments : widthSegments;\r\n\r\n\t\t\tfor ( let j = 0; j < segments; j ++ ) {\r\n\r\n\t\t\t\t// pos\r\n\r\n\t\t\t\tconst thetaJ = j / segments * Math.PI * 2.0;\r\n\t\t\t\tconst widthRadius = Math.sin( thetaI ) * radius;\r\n\r\n\t\t\t\tconst x = Math.cos( thetaJ ) * widthRadius;\r\n\t\t\t\tconst y = - Math.cos( thetaI ) * radius;\r\n\t\t\t\tconst z = - Math.sin( thetaJ ) * widthRadius;\r\n\r\n\t\t\t\tposArray.push( x, y, z );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuvArray.push(\r\n\t\t\t\t\tj / segments,\r\n\t\t\t\t\ti / heightSegments\r\n\t\t\t\t);\r\n\r\n\t\t\t\t//normal\r\n\r\n\t\t\t\tconst normal = new Vector( x, y, z ).normalize();\r\n\r\n\t\t\t\tnormalArray.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t// index\r\n\r\n\t\t\t\tindexArray.push(\r\n\t\t\t\t\ti * widthSegments + j,\r\n\t\t\t\t\t( i + 1 ) * widthSegments + ( j + 1 ) % widthSegments,\r\n\t\t\t\t\ti * widthSegments + ( j + 1 ) % widthSegments,\r\n\r\n\t\t\t\t\ti * widthSegments + j,\r\n\t\t\t\t\t( i + 1 ) * widthSegments + j,\r\n\t\t\t\t\t( i + 1 ) * widthSegments + ( j + 1 ) % widthSegments,\r\n\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.setAttribute( 'position', posArray, 3 );\r\n\t\tthis.setAttribute( 'normal', normalArray, 3 );\r\n\t\tthis.setAttribute( 'uv', uvArray, 2 );\r\n\t\tthis.setAttribute( 'index', indexArray, 1 );\r\n\r\n\t}\r\n\r\n\tpublic setAttribute( name: ( 'position' | 'uv' | 'normal' | 'index' ) | ( string & {} ), array: number[], size: number ): void {\r\n\r\n\t\tif ( name == 'index' ) {\r\n\r\n\t\t\tarray.forEach( ( item, index ) => {\r\n\r\n\t\t\t\t// クソ\r\n\t\t\t\tarray[ index ] = item % this.count;\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\tsuper.setAttribute( name, array, size );\r\n\r\n\r\n\r\n\t}\r\n\r\n}\r\n","import { Component, ComponentName } from \"./Component\";\r\nimport { Entity } from \"./Entity\";\r\nimport { EntityQuery, System } from \"./System\";\r\nimport { World } from \"./World\";\r\n\r\nexport interface ECSUpdateEvent {\r\n\tworld: World,\r\n\ttime: number,\r\n\tdeltaTime: number,\r\n}\r\n\r\nexport class ECS {\r\n\r\n\t// time\r\n\tprivate time: number;\r\n\tprivate lastUpdateTime: number;\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.time = 0;\r\n\t\tthis.lastUpdateTime = new Date().getTime();\r\n\r\n\t}\r\n\r\n\tpublic createWorld(): World {\r\n\r\n\t\treturn {\r\n\t\t\tentitiesTotalCount: 0,\r\n\t\t\tentities: [],\r\n\t\t\tcomponents: new Map(),\r\n\t\t\tsystems: new Map()\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t// entity\r\n\r\n\tpublic createEntity( world: World ): Entity {\r\n\r\n\t\tconst entity: Entity = world.entitiesTotalCount ++;\r\n\r\n\t\tworld.entities.push( entity );\r\n\r\n\t\treturn entity;\r\n\r\n\t}\r\n\r\n\tpublic removeEntity( world: World, entity: Entity ): void {\r\n\r\n\t\tconst index = world.entities.findIndex( e => e == entity );\r\n\r\n\t\t// remove entity\r\n\r\n\t\tif ( index > - 1 ) {\r\n\r\n\t\t\tworld.entities.slice( index, 1 );\r\n\r\n\t\t}\r\n\r\n\t\t// remove components\r\n\r\n\t\tworld.components.forEach( component => {\r\n\r\n\t\t\tif ( component[ entity ] !== null && component[ entity ] !== undefined ) {\r\n\r\n\t\t\t\tcomponent[ entity ] = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t// component\r\n\r\n\tpublic addComponent<T extends Component >( world: World, entity: Entity, componentName: ComponentName, component: T ) {\r\n\r\n\t\tlet componentArray = world.components.get( componentName );\r\n\r\n\t\tif ( componentArray === undefined ) {\r\n\r\n\t\t\tcomponentArray = [];\r\n\r\n\t\t\tworld.components.set( componentName, componentArray );\r\n\r\n\t\t}\r\n\r\n\t\tif ( componentArray.length < entity + 1 ) {\r\n\r\n\t\t\tcomponentArray.length = entity + 1;\r\n\r\n\t\t}\r\n\r\n\t\tcomponentArray[ entity ] = component;\r\n\r\n\t\treturn component;\r\n\r\n\t}\r\n\r\n\tpublic removeComponent( world: World, entity: Entity, componentName: ComponentName ) {\r\n\r\n\t\tconst componentArray = world.components.get( componentName );\r\n\r\n\t\tif ( componentArray && componentArray.length > entity ) {\r\n\r\n\t\t\tcomponentArray[ entity ] = null;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic getComponent<T extends Component >( world: World, entity: Entity, componentName: ComponentName ): T | null {\r\n\r\n\t\tconst component = world.components.get( componentName );\r\n\r\n\t\tif ( component !== undefined ) {\r\n\r\n\t\t\treturn ( component[ entity ] || null ) as T;\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\t// system\r\n\r\n\tpublic addSystem<T extends System >( world: World, systemName: string, system: T ) {\r\n\r\n\t\tworld.systems.set( systemName, system );\r\n\r\n\t}\r\n\r\n\tpublic removeSystem( world: World, componentName: ComponentName ) {\r\n\r\n\t\tworld.systems.delete( componentName );\r\n\r\n\t}\r\n\r\n\t// update\r\n\r\n\tpublic update( world: World ) {\r\n\r\n\t\tconst now = new Date().getTime();\r\n\t\tconst deltaTime = ( now - this.lastUpdateTime ) / 1000;\r\n\t\tthis.time += deltaTime;\r\n\t\tthis.lastUpdateTime = now;\r\n\r\n\t\tconst systemList = world.systems;\r\n\r\n\t\tsystemList.forEach( system => {\r\n\r\n\t\t\tsystem.update( {\r\n\t\t\t\tworld,\r\n\t\t\t\tdeltaTime,\r\n\t\t\t\ttime: this.time,\r\n\t\t\t\tecs: this,\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t// entities\r\n\r\n\tpublic getEntities( world: World, query: EntityQuery ): Entity[] {\r\n\r\n\t\tconst entities = world.entities.filter( entt => {\r\n\r\n\t\t\tfor ( let i = 0; i < query.length; i ++ ) {\r\n\r\n\t\t\t\tconst componentName = query[ i ];\r\n\r\n\t\t\t\tconst component = world.components.get( componentName );\r\n\r\n\t\t\t\tif ( component === undefined || component[ entt ] === undefined ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t} );\r\n\r\n\t\treturn entities;\r\n\r\n\t}\r\n\r\n}\r\n","/*!\n * EventEmitter v5.2.9 - git.io/ee\n * Unlicense - http://unlicense.org/\n * Oliver Caldwell - https://oli.me.uk/\n * @preserve\n */\n\n;(function (exports) {\n    'use strict';\n\n    /**\n     * Class for managing events.\n     * Can be extended to provide event functionality in other classes.\n     *\n     * @class EventEmitter Manages event registering and emitting.\n     */\n    function EventEmitter() {}\n\n    // Shortcuts to improve speed and size\n    var proto = EventEmitter.prototype;\n    var originalGlobalValue = exports.EventEmitter;\n\n    /**\n     * Finds the index of the listener for the event in its storage array.\n     *\n     * @param {Function[]} listeners Array of listeners to search through.\n     * @param {Function} listener Method to look for.\n     * @return {Number} Index of the specified listener, -1 if not found\n     * @api private\n     */\n    function indexOfListener(listeners, listener) {\n        var i = listeners.length;\n        while (i--) {\n            if (listeners[i].listener === listener) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    /**\n     * Alias a method while keeping the context correct, to allow for overwriting of target method.\n     *\n     * @param {String} name The name of the target method.\n     * @return {Function} The aliased method\n     * @api private\n     */\n    function alias(name) {\n        return function aliasClosure() {\n            return this[name].apply(this, arguments);\n        };\n    }\n\n    /**\n     * Returns the listener array for the specified event.\n     * Will initialise the event object and listener arrays if required.\n     * Will return an object if you use a regex search. The object contains keys for each matched event. So /ba[rz]/ might return an object containing bar and baz. But only if you have either defined them with defineEvent or added some listeners to them.\n     * Each property in the object response is an array of listener functions.\n     *\n     * @param {String|RegExp} evt Name of the event to return the listeners from.\n     * @return {Function[]|Object} All listener functions for the event.\n     */\n    proto.getListeners = function getListeners(evt) {\n        var events = this._getEvents();\n        var response;\n        var key;\n\n        // Return a concatenated array of all matching events if\n        // the selector is a regular expression.\n        if (evt instanceof RegExp) {\n            response = {};\n            for (key in events) {\n                if (events.hasOwnProperty(key) && evt.test(key)) {\n                    response[key] = events[key];\n                }\n            }\n        }\n        else {\n            response = events[evt] || (events[evt] = []);\n        }\n\n        return response;\n    };\n\n    /**\n     * Takes a list of listener objects and flattens it into a list of listener functions.\n     *\n     * @param {Object[]} listeners Raw listener objects.\n     * @return {Function[]} Just the listener functions.\n     */\n    proto.flattenListeners = function flattenListeners(listeners) {\n        var flatListeners = [];\n        var i;\n\n        for (i = 0; i < listeners.length; i += 1) {\n            flatListeners.push(listeners[i].listener);\n        }\n\n        return flatListeners;\n    };\n\n    /**\n     * Fetches the requested listeners via getListeners but will always return the results inside an object. This is mainly for internal use but others may find it useful.\n     *\n     * @param {String|RegExp} evt Name of the event to return the listeners from.\n     * @return {Object} All listener functions for an event in an object.\n     */\n    proto.getListenersAsObject = function getListenersAsObject(evt) {\n        var listeners = this.getListeners(evt);\n        var response;\n\n        if (listeners instanceof Array) {\n            response = {};\n            response[evt] = listeners;\n        }\n\n        return response || listeners;\n    };\n\n    function isValidListener (listener) {\n        if (typeof listener === 'function' || listener instanceof RegExp) {\n            return true\n        } else if (listener && typeof listener === 'object') {\n            return isValidListener(listener.listener)\n        } else {\n            return false\n        }\n    }\n\n    /**\n     * Adds a listener function to the specified event.\n     * The listener will not be added if it is a duplicate.\n     * If the listener returns true then it will be removed after it is called.\n     * If you pass a regular expression as the event name then the listener will be added to all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to attach the listener to.\n     * @param {Function} listener Method to be called when the event is emitted. If the function returns true then it will be removed after calling.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.addListener = function addListener(evt, listener) {\n        if (!isValidListener(listener)) {\n            throw new TypeError('listener must be a function');\n        }\n\n        var listeners = this.getListenersAsObject(evt);\n        var listenerIsWrapped = typeof listener === 'object';\n        var key;\n\n        for (key in listeners) {\n            if (listeners.hasOwnProperty(key) && indexOfListener(listeners[key], listener) === -1) {\n                listeners[key].push(listenerIsWrapped ? listener : {\n                    listener: listener,\n                    once: false\n                });\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of addListener\n     */\n    proto.on = alias('addListener');\n\n    /**\n     * Semi-alias of addListener. It will add a listener that will be\n     * automatically removed after its first execution.\n     *\n     * @param {String|RegExp} evt Name of the event to attach the listener to.\n     * @param {Function} listener Method to be called when the event is emitted. If the function returns true then it will be removed after calling.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.addOnceListener = function addOnceListener(evt, listener) {\n        return this.addListener(evt, {\n            listener: listener,\n            once: true\n        });\n    };\n\n    /**\n     * Alias of addOnceListener.\n     */\n    proto.once = alias('addOnceListener');\n\n    /**\n     * Defines an event name. This is required if you want to use a regex to add a listener to multiple events at once. If you don't do this then how do you expect it to know what event to add to? Should it just add to every possible match for a regex? No. That is scary and bad.\n     * You need to tell it what event names should be matched by a regex.\n     *\n     * @param {String} evt Name of the event to create.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.defineEvent = function defineEvent(evt) {\n        this.getListeners(evt);\n        return this;\n    };\n\n    /**\n     * Uses defineEvent to define multiple events.\n     *\n     * @param {String[]} evts An array of event names to define.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.defineEvents = function defineEvents(evts) {\n        for (var i = 0; i < evts.length; i += 1) {\n            this.defineEvent(evts[i]);\n        }\n        return this;\n    };\n\n    /**\n     * Removes a listener function from the specified event.\n     * When passed a regular expression as the event name, it will remove the listener from all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to remove the listener from.\n     * @param {Function} listener Method to remove from the event.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.removeListener = function removeListener(evt, listener) {\n        var listeners = this.getListenersAsObject(evt);\n        var index;\n        var key;\n\n        for (key in listeners) {\n            if (listeners.hasOwnProperty(key)) {\n                index = indexOfListener(listeners[key], listener);\n\n                if (index !== -1) {\n                    listeners[key].splice(index, 1);\n                }\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of removeListener\n     */\n    proto.off = alias('removeListener');\n\n    /**\n     * Adds listeners in bulk using the manipulateListeners method.\n     * If you pass an object as the first argument you can add to multiple events at once. The object should contain key value pairs of events and listeners or listener arrays. You can also pass it an event name and an array of listeners to be added.\n     * You can also pass it a regular expression to add the array of listeners to all events that match it.\n     * Yeah, this function does quite a bit. That's probably a bad thing.\n     *\n     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to add to multiple events at once.\n     * @param {Function[]} [listeners] An optional array of listener functions to add.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.addListeners = function addListeners(evt, listeners) {\n        // Pass through to manipulateListeners\n        return this.manipulateListeners(false, evt, listeners);\n    };\n\n    /**\n     * Removes listeners in bulk using the manipulateListeners method.\n     * If you pass an object as the first argument you can remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\n     * You can also pass it an event name and an array of listeners to be removed.\n     * You can also pass it a regular expression to remove the listeners from all events that match it.\n     *\n     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to remove from multiple events at once.\n     * @param {Function[]} [listeners] An optional array of listener functions to remove.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.removeListeners = function removeListeners(evt, listeners) {\n        // Pass through to manipulateListeners\n        return this.manipulateListeners(true, evt, listeners);\n    };\n\n    /**\n     * Edits listeners in bulk. The addListeners and removeListeners methods both use this to do their job. You should really use those instead, this is a little lower level.\n     * The first argument will determine if the listeners are removed (true) or added (false).\n     * If you pass an object as the second argument you can add/remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\n     * You can also pass it an event name and an array of listeners to be added/removed.\n     * You can also pass it a regular expression to manipulate the listeners of all events that match it.\n     *\n     * @param {Boolean} remove True if you want to remove listeners, false if you want to add.\n     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to add/remove from multiple events at once.\n     * @param {Function[]} [listeners] An optional array of listener functions to add/remove.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.manipulateListeners = function manipulateListeners(remove, evt, listeners) {\n        var i;\n        var value;\n        var single = remove ? this.removeListener : this.addListener;\n        var multiple = remove ? this.removeListeners : this.addListeners;\n\n        // If evt is an object then pass each of its properties to this method\n        if (typeof evt === 'object' && !(evt instanceof RegExp)) {\n            for (i in evt) {\n                if (evt.hasOwnProperty(i) && (value = evt[i])) {\n                    // Pass the single listener straight through to the singular method\n                    if (typeof value === 'function') {\n                        single.call(this, i, value);\n                    }\n                    else {\n                        // Otherwise pass back to the multiple function\n                        multiple.call(this, i, value);\n                    }\n                }\n            }\n        }\n        else {\n            // So evt must be a string\n            // And listeners must be an array of listeners\n            // Loop over it and pass each one to the multiple method\n            i = listeners.length;\n            while (i--) {\n                single.call(this, evt, listeners[i]);\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Removes all listeners from a specified event.\n     * If you do not specify an event then all listeners will be removed.\n     * That means every event will be emptied.\n     * You can also pass a regex to remove all events that match it.\n     *\n     * @param {String|RegExp} [evt] Optional name of the event to remove all listeners for. Will remove from every event if not passed.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.removeEvent = function removeEvent(evt) {\n        var type = typeof evt;\n        var events = this._getEvents();\n        var key;\n\n        // Remove different things depending on the state of evt\n        if (type === 'string') {\n            // Remove all listeners for the specified event\n            delete events[evt];\n        }\n        else if (evt instanceof RegExp) {\n            // Remove all events matching the regex.\n            for (key in events) {\n                if (events.hasOwnProperty(key) && evt.test(key)) {\n                    delete events[key];\n                }\n            }\n        }\n        else {\n            // Remove all listeners in all events\n            delete this._events;\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of removeEvent.\n     *\n     * Added to mirror the node API.\n     */\n    proto.removeAllListeners = alias('removeEvent');\n\n    /**\n     * Emits an event of your choice.\n     * When emitted, every listener attached to that event will be executed.\n     * If you pass the optional argument array then those arguments will be passed to every listener upon execution.\n     * Because it uses `apply`, your array of arguments will be passed as if you wrote them out separately.\n     * So they will not arrive within the array on the other side, they will be separate.\n     * You can also pass a regular expression to emit to all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to emit and execute listeners for.\n     * @param {Array} [args] Optional array of arguments to be passed to each listener.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.emitEvent = function emitEvent(evt, args) {\n        var listenersMap = this.getListenersAsObject(evt);\n        var listeners;\n        var listener;\n        var i;\n        var key;\n        var response;\n\n        for (key in listenersMap) {\n            if (listenersMap.hasOwnProperty(key)) {\n                listeners = listenersMap[key].slice(0);\n\n                for (i = 0; i < listeners.length; i++) {\n                    // If the listener returns true then it shall be removed from the event\n                    // The function is executed either with a basic call or an apply if there is an args array\n                    listener = listeners[i];\n\n                    if (listener.once === true) {\n                        this.removeListener(evt, listener.listener);\n                    }\n\n                    response = listener.listener.apply(this, args || []);\n\n                    if (response === this._getOnceReturnValue()) {\n                        this.removeListener(evt, listener.listener);\n                    }\n                }\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of emitEvent\n     */\n    proto.trigger = alias('emitEvent');\n\n    /**\n     * Subtly different from emitEvent in that it will pass its arguments on to the listeners, as opposed to taking a single array of arguments to pass on.\n     * As with emitEvent, you can pass a regex in place of the event name to emit to all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to emit and execute listeners for.\n     * @param {...*} Optional additional arguments to be passed to each listener.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.emit = function emit(evt) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        return this.emitEvent(evt, args);\n    };\n\n    /**\n     * Sets the current value to check against when executing listeners. If a\n     * listeners return value matches the one set here then it will be removed\n     * after execution. This value defaults to true.\n     *\n     * @param {*} value The new value to check for when executing listeners.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.setOnceReturnValue = function setOnceReturnValue(value) {\n        this._onceReturnValue = value;\n        return this;\n    };\n\n    /**\n     * Fetches the current value to check against when executing listeners. If\n     * the listeners return value matches this one then it should be removed\n     * automatically. It will return true by default.\n     *\n     * @return {*|Boolean} The current value to check for or the default, true.\n     * @api private\n     */\n    proto._getOnceReturnValue = function _getOnceReturnValue() {\n        if (this.hasOwnProperty('_onceReturnValue')) {\n            return this._onceReturnValue;\n        }\n        else {\n            return true;\n        }\n    };\n\n    /**\n     * Fetches the events object and creates one if required.\n     *\n     * @return {Object} The events storage object.\n     * @api private\n     */\n    proto._getEvents = function _getEvents() {\n        return this._events || (this._events = {});\n    };\n\n    /**\n     * Reverts the global {@link EventEmitter} to its previous value and returns a reference to this version.\n     *\n     * @return {Function} Non conflicting EventEmitter class.\n     */\n    EventEmitter.noConflict = function noConflict() {\n        exports.EventEmitter = originalGlobalValue;\n        return EventEmitter;\n    };\n\n    // Expose the class either via AMD, CommonJS or the global object\n    if (typeof define === 'function' && define.amd) {\n        define(function () {\n            return EventEmitter;\n        });\n    }\n    else if (typeof module === 'object' && module.exports){\n        module.exports = EventEmitter;\n    }\n    else {\n        exports.EventEmitter = EventEmitter;\n    }\n}(typeof window !== 'undefined' ? window : this || {}));\n","import EventEmitter from \"wolfy87-eventemitter\";\r\nimport { ECS, ECSUpdateEvent } from \"..\";\r\nimport { ComponentName } from \"../Component\";\r\nimport { Entity } from \"../Entity\";\r\n\r\nexport type EntityQuery = ComponentName[]\r\n\r\nexport interface SystemUpdateEvent extends ECSUpdateEvent {\r\n\tecs: ECS\r\n}\r\n\r\nexport class System extends EventEmitter {\r\n\r\n\tprotected ecs: ECS;\r\n\tprotected queries: {name: string, query: EntityQuery}[];\r\n\r\n\tconstructor( ecs: ECS, queries?: {[key: string]:EntityQuery} ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.ecs = ecs;\r\n\t\tthis.queries = [];\r\n\r\n\t\tif ( queries ) {\r\n\r\n\t\t\tconst keys = Object.keys( queries );\r\n\r\n\t\t\tfor ( let i = 0; i < keys.length; i ++ ) {\r\n\r\n\t\t\t\tconst name = keys[ i ];\r\n\r\n\t\t\t\tthis.queries.push( { name, query: queries[ name ] } );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\tpublic update( event: SystemUpdateEvent ): void {\r\n\r\n\t\tfor ( let i = 0; i < this.queries.length; i ++ ) {\r\n\r\n\t\t\tconst q = this.queries[ i ];\r\n\r\n\t\t\tconst entities = event.ecs.getEntities( event.world, q.query );\r\n\r\n\t\t\tthis.beforeUpdateImpl( q.name, event );\r\n\r\n\t\t\tfor ( let j = 0; j < entities.length; j ++ ) {\r\n\r\n\t\t\t\tthis.updateImpl( q.name, entities[ j ], event );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.afterUpdateImpl( q.name, event );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprotected beforeUpdateImpl( logicName: string, event: SystemUpdateEvent ) { // eslint-disable-line\r\n\t}\r\n\r\n\tprotected updateImpl( logicName: string, entity: Entity, event: SystemUpdateEvent ) { // eslint-disable-line\r\n\t}\r\n\r\n\tprotected afterUpdateImpl( logicName: string, event: SystemUpdateEvent ) { // eslint-disable-line\r\n\t}\r\n\r\n\tpublic dispose() {\r\n\r\n\t\tthis.emitEvent( 'dispose' );\r\n\r\n\t}\r\n\r\n}\r\n","import { ECS } from '../ECS';\r\nimport { ComponentSceneNode } from '../ECS/Component';\r\nimport { Entity } from '../ECS/Entity';\r\nimport { World } from '../ECS/World';\r\n\r\nexport class SceneGraph {\r\n\r\n\tprivate ecs: ECS;\r\n\tprivate world: World;\r\n\r\n\tprivate entities: Entity[];\r\n\r\n\tprivate cacheTransformUpdateOrder: Entity[] | null;\r\n\tprivate cacheRenderOrder: Entity[] | null;\r\n\r\n\tconstructor( ecs: ECS, world: World ) {\r\n\r\n\t\tthis.ecs = ecs;\r\n\t\tthis.world = world;\r\n\r\n\t\tthis.entities = [];\r\n\r\n\t\tthis.cacheTransformUpdateOrder = null;\r\n\t\tthis.cacheRenderOrder = null;\r\n\r\n\t}\r\n\r\n\tpublic add( parent: Entity, child: Entity ) {\r\n\r\n\t\tconst parentNode = this.ecs.getComponent<ComponentSceneNode>( this.world, parent, 'sceneNode' );\r\n\r\n\t\tif ( parentNode === null ) {\r\n\r\n\t\t\tconsole.log( 'parent not exists.' );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tconst childNode = this.ecs.getComponent<ComponentSceneNode>( this.world, child, 'sceneNode' );\r\n\r\n\t\tif ( childNode === null ) {\r\n\r\n\t\t\tconsole.log( 'children not exists.' );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( childNode.parent !== undefined ) {\r\n\r\n\t\t\tthis.remove( childNode.parent, child );\r\n\r\n\t\t}\r\n\r\n\t\tparentNode.children.push( child );\r\n\t\tchildNode.parent = parent;\r\n\r\n\t\tthis.entities = Array.from( new Set( [ parent, child, ...this.entities ] ) );\r\n\r\n\t\tthis.cacheTransformUpdateOrder = null;\r\n\r\n\t}\r\n\r\n\tpublic remove( parent: Entity, child: Entity ) {\r\n\r\n\t\tconst parentNode = this.ecs.getComponent<ComponentSceneNode>( this.world, parent, 'sceneNode' );\r\n\r\n\t\tif ( parentNode === null ) {\r\n\r\n\t\t\tconsole.log( 'parent not exists.' );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tconst childNode = this.ecs.getComponent<ComponentSceneNode>( this.world, child, 'sceneNode' );\r\n\r\n\t\tif ( childNode === null ) {\r\n\r\n\t\t\tconsole.log( 'children not exists.' );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\t// remove from parent\r\n\r\n\t\tlet i = parentNode.children.findIndex( entity => entity == child );\r\n\r\n\t\tif ( i > - 1 ) {\r\n\r\n\t\t\tparentNode.children.splice( i, 1 );\r\n\r\n\t\t}\r\n\r\n\t\tchildNode.parent = undefined;\r\n\r\n\t\t// remove from entity array\r\n\r\n\t\ti = this.entities.findIndex( entity => entity === child );\r\n\r\n\t\tif ( i > - 1 ) {\r\n\r\n\t\t\tthis.entities.splice( i, 1 );\r\n\r\n\t\t}\r\n\r\n\t\tthis.cacheTransformUpdateOrder = null;\r\n\r\n\t}\r\n\r\n\tpublic getTransformUpdateOrder() {\r\n\r\n\t\tif ( this.cacheTransformUpdateOrder ) return this.cacheTransformUpdateOrder;\r\n\r\n\t\tconst updateOrder: Entity[] = [];\r\n\r\n\t\tconst _ = ( entity: Entity ) => {\r\n\r\n\t\t\tupdateOrder.push( entity );\r\n\r\n\t\t\tconst sceneNode = this.ecs.getComponent<ComponentSceneNode>( this.world, entity, 'sceneNode' );\r\n\r\n\t\t\tif ( sceneNode ) {\r\n\r\n\t\t\t\tfor ( let i = 0; i < sceneNode.children.length; i ++ ) {\r\n\r\n\t\t\t\t\t_( sceneNode.children[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tfor ( let i = 0; i < this.entities.length; i ++ ) {\r\n\r\n\t\t\tconst entity = this.entities[ i ];\r\n\r\n\t\t\tconst sceneNode = this.ecs.getComponent<ComponentSceneNode>( this.world, entity, 'sceneNode' );\r\n\r\n\t\t\tif ( sceneNode && sceneNode.parent === undefined ) {\r\n\r\n\t\t\t\t_( entity );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t}\r\n\r\n\t\tthis.cacheTransformUpdateOrder = updateOrder;\r\n\r\n\t\treturn updateOrder;\r\n\r\n\t}\r\n\r\n\r\n}\r\n","import EventEmitter from 'wolfy87-eventemitter';\r\nimport { Types } from '..';\r\nimport { IVector4, Vector } from '../Math/Vector';\r\nimport { FCurveGroup } from './FCurveGroup';\r\n\r\nexport type AnimationFrameInfo = {\r\n\tstart: number\r\n\tend: number\r\n\tduration: number\r\n}\r\n\r\nexport class AnimationAction extends EventEmitter {\r\n\r\n\tpublic name: string;\r\n\tpublic curves: {[key:string]:FCurveGroup} = {};\r\n\tprivate uniforms: {[key: string]: { value: IVector4}};\r\n\r\n\tpublic frame: AnimationFrameInfo;\r\n\r\n\tconstructor( name?: string ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.name = name || '';\r\n\t\tthis.uniforms = {};\r\n\r\n\t\tthis.frame = {\r\n\t\t\tstart: 0,\r\n\t\t\tend: 0,\r\n\t\t\tduration: 0,\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tpublic addFcurveGroup( propertyName: string, fcurveGroup: FCurveGroup ) {\r\n\r\n\t\tthis.curves[ propertyName ] = fcurveGroup;\r\n\r\n\t\tthis.calcFrame();\r\n\r\n\t}\r\n\r\n\tpublic removeFCurve( propertyName: string ) {\r\n\r\n\t\tdelete this.curves[ propertyName ];\r\n\r\n\t\tthis.calcFrame();\r\n\r\n\t}\r\n\r\n\tprivate calcFrame() {\r\n\r\n\t\tconst curveKeys = Object.keys( this.curves );\r\n\r\n\t\tlet minStart = Infinity;\r\n\t\tlet maxEnd = - Infinity;\r\n\r\n\t\tfor ( let i = 0; i < curveKeys.length; i ++ ) {\r\n\r\n\t\t\tconst curve = ( this.curves )[ curveKeys[ i ] ];\r\n\r\n\t\t\tif ( curve.frameStart < minStart ) {\r\n\r\n\t\t\t\tminStart = curve.frameStart;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( curve.frameEnd > maxEnd ) {\r\n\r\n\t\t\t\tmaxEnd = curve.frameEnd;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( minStart == - Infinity || maxEnd == Infinity ) {\r\n\r\n\t\t\tminStart = 0;\r\n\t\t\tmaxEnd = 1;\r\n\r\n\t\t}\r\n\r\n\t\tthis.frame.start = minStart;\r\n\t\tthis.frame.end = maxEnd;\r\n\t\tthis.frame.duration = this.frame.end - this.frame.start;\r\n\r\n\t}\r\n\r\n\tpublic getFCurveGroup( propertyName: string ): FCurveGroup | null {\r\n\r\n\t\treturn this.curves[ propertyName ] || null;\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tget values\r\n\t-------------------------------*/\r\n\r\n\tpublic assignUniforms( propertyName: string, uniform: any ) {\r\n\r\n\t\tthis.uniforms[ propertyName ] = uniform;\r\n\r\n\t}\r\n\r\n\tpublic getUniforms( propertyName: string ): Types.Uniform<IVector4> | null {\r\n\r\n\t\tif ( this.uniforms[ propertyName ] ) {\r\n\r\n\t\t\treturn this.uniforms[ propertyName ];\r\n\r\n\t\t}\r\n\r\n\t\tconst curveGroup = this.getFCurveGroup( propertyName );\r\n\r\n\t\tif ( curveGroup ) {\r\n\r\n\t\t\tconst uni: Types.Uniform<IVector4> = {\r\n\t\t\t\tvalue: { x: 0, y: 0, z: 0, w: 0 }\r\n\t\t\t};\r\n\r\n\t\t\tthis.uniforms[ propertyName ] = uni;\r\n\r\n\t\t\treturn uni;\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\tpublic getValue( accessor: string ): Vector | null;\r\n\r\n\tpublic getValue<T extends Types.Nullable<IVector4>>( accessor: string, target: T ): T;\r\n\r\n\tpublic getValue<T extends Types.Nullable<IVector4>>( accessor: string, target?: T ): T | IVector4 | null {\r\n\r\n\t\tconst uniform = this.getUniforms( accessor );\r\n\r\n\t\tif ( ! uniform ) return target || null;\r\n\r\n\t\tconst value = uniform.value;\r\n\r\n\t\tif ( ! target ) return value;\r\n\r\n\t\ttarget.x = value.x;\r\n\t\ttarget.y = value.y;\r\n\t\ttarget.z = value.z;\r\n\t\ttarget.w = value.w;\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tpublic getValueAt<T extends number>( propertyName: string, frame: number ): T | null;\r\n\r\n\tpublic getValueAt<T extends Vector | IVector4 >( propertyName: string, frame: number, target: T ): T;\r\n\r\n\tpublic getValueAt( propertyName: string, frame: number, target?: Vector | IVector4 ): Vector | IVector4 | null {\r\n\r\n\t\tconst curveGroup = this.getFCurveGroup( propertyName );\r\n\r\n\t\tif ( target ) {\r\n\r\n\t\t\tif ( ! curveGroup ) return target;\r\n\r\n\t\t\treturn curveGroup.getValue( frame || 0, target );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( ! curveGroup ) return null;\r\n\r\n\t\t\treturn curveGroup.getValue( frame );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tUpdateFrame\r\n\t-------------------------------*/\r\n\r\n\tpublic updateFrame( frame: number ) {\r\n\r\n\t\tconst curveKeys = Object.keys( this.curves );\r\n\r\n\t\tfor ( let i = 0; i < curveKeys.length; i ++ ) {\r\n\r\n\t\t\tconst fcurveGroup = this.curves[ curveKeys[ i ] ];\r\n\t\t\tconst uni = this.getUniforms( curveKeys[ i ] );\r\n\r\n\t\t\tif ( ! uni ) continue;\r\n\r\n\t\t\tfcurveGroup.getValue( frame, uni.value );\r\n\r\n\t\t}\r\n\r\n\t\tthis.emitEvent( 'update', [ this ] );\r\n\r\n\t}\r\n\r\n}\r\n","\n/*-------------------------------\n\t\tBezier\n-------------------------------*/\n\nexport namespace Bezier {\n\n\texport type BezierControlPoints = {\n\t\tp0: number;\n\t\tp1: number;\n\t\tp2: number;\n\t\tp3: number;\n\t}\n\n\t// inspired https://github.com/gre/bezier-easing/blob/master/src/index.js and https://github.com/0b5vr/automaton/blob/872420e798d9054d4a7a06c972cbb4261a67b4bc/src/bezierEasing.ts\n\n\texport const NEWTON_ITERATIONS = 4;\n\texport const NEWTON_MIN_SLOPE = 0.001;\n\texport const SUBDIVISION_PRECISION = 0.0000001;\n\texport const SUBDIVISION_MAX_ITERATIONS = 10;\n\texport const BEZIER_EASING_CACHE_SIZE = 11;\n\texport const BEZIER_EASING_SAMPLE_STEP_SIZE = 1.0 / BEZIER_EASING_CACHE_SIZE;\n\n\tfunction calcBezierA( p: BezierControlPoints ) {\n\n\t\treturn - p.p0 + 3.0 * p.p1 - 3.0 * p.p2 + p.p3;\n\n\t}\n\tfunction calcBezierB( p: BezierControlPoints ) {\n\n\t\treturn 3.0 * p.p0 - 6.0 * p.p1 + 3.0 * p.p2;\n\n\t}\n\tfunction calcBezierC( p: BezierControlPoints ) {\n\n\t\treturn - 3.0 * p.p0 + 3.0 * p.p1;\n\n\t}\n\n\texport function calcBezierSlope( p: BezierControlPoints, t: number ) {\n\n\t\treturn 3.0 * calcBezierA( p ) * t * t + 2.0 * calcBezierB( p ) * t + calcBezierC( p );\n\n\t}\n\n\texport function calcBezier( p: BezierControlPoints, t: number ) {\n\n\t\treturn ( ( calcBezierA( p ) * t + calcBezierB( p ) ) * t + calcBezierC( p ) ) * t + p.p0;\n\n\t}\n\n\tfunction subdiv( x: number, startT: number, endT: number, p: BezierControlPoints ) {\n\n\t\tlet currentX = 0;\n\t\tlet currentT = 0;\n\n\t\tfor ( let i = 0; i < SUBDIVISION_MAX_ITERATIONS; i ++ ) {\n\n\t\t\tcurrentT = startT + ( endT - startT ) / 2;\n\t\t\tcurrentX = calcBezier( p, currentT );\n\n\t\t\tif ( currentX > x ) {\n\n\t\t\t\tendT = currentT;\n\n\t\t\t} else {\n\n\t\t\t\tstartT = currentT;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn currentT;\n\n\t}\n\n\tfunction newton( x:number, p: BezierControlPoints, t: number ) {\n\n\t\tfor ( let i = 0; i < NEWTON_ITERATIONS; i ++ ) {\n\n\t\t\tconst slope = calcBezierSlope( p, t );\n\n\t\t\tif ( slope == 0.0 ) {\n\n\t\t\t\treturn t;\n\n\t\t\t}\n\n\t\t\tconst currentX = ( calcBezier( p, t ) ) - x;\n\t\t\tt -= currentX / slope;\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\texport function getBezierTfromX( p: BezierControlPoints, x: number, cache: number[] ) {\n\n\t\tp.p1 = Math.max( p.p0, Math.min( p.p3, p.p1 ) );\n\t\tp.p2 = Math.max( p.p0, Math.min( p.p3, p.p2 ) );\n\n\t\tlet sample = 0;\n\n\t\tfor ( let i = 1; i < cache.length; i ++ ) {\n\n\t\t\tsample = i - 1;\n\t\t\tif ( x < cache[ i ] ) break;\n\n\t\t}\n\n\t\tconst t = sample / ( BEZIER_EASING_CACHE_SIZE - 1.0 );\n\t\tconst diff = calcBezierSlope( p, t ) / ( p.p3 - p.p0 );\n\n\t\tif ( diff == 0.0 ) {\n\n\t\t\treturn t;\n\n\t\t} else if ( diff > 0.01 ) {\n\n\t\t\treturn newton( x, p, t );\n\n\t\t} else {\n\n\t\t\treturn subdiv( x, t, t + BEZIER_EASING_SAMPLE_STEP_SIZE, p );\n\n\t\t}\n\n\n\t}\n\n}\n","import { IVector2 } from \"..\";\nimport { Bezier } from \"./Bezier\";\n\nexport type EasingFunc = ( t: number ) => any\n\nexport namespace Easings {\n\n\texport function sigmoid( weight: number = 6 ): EasingFunc {\n\n\t\treturn ( x: number ) => {\n\n\t\t\tvar e1 = Math.exp( - weight * ( 2 * x - 1 ) );\n\t\t\tvar e2 = Math.exp( - weight );\n\n\t\t\treturn ( 1 + ( 1 - e1 ) / ( 1 + e1 ) * ( 1 + e2 ) / ( 1 - e2 ) ) / 2;\n\n\t\t};\n\n\t}\n\n\texport function smoothstep( min: number, max: number, value: number ): number {\n\n\t\tconst x = Math.max( 0, Math.min( 1, ( value - min ) / ( max - min ) ) );\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t}\n\n\t/*\n\t@auther https://gist.github.com/gre/1650294\n\t*/\n\n\texport function linear( t: number ) {\n\n\t\treturn t;\n\n\t}\n\n\texport function easeInQuad( t: number ) {\n\n\t\treturn t * t;\n\n\t}\n\n\texport function easeOutQuad( t: number ) {\n\n\t\treturn t * ( 2 - t );\n\n\t}\n\n\texport function easeInOutQuad( t: number ) {\n\n\t\treturn t < .5 ? 2 * t * t : - 1 + ( 4 - 2 * t ) * t;\n\n\t}\n\n\texport function easeInCubic( t: number ) {\n\n\t\treturn t * t * t;\n\n\t}\n\n\texport function easeOutCubic( t: number ) {\n\n\t\treturn ( -- t ) * t * t + 1;\n\n\t}\n\n\texport function easeInOutCubic( t: number ) {\n\n\t\treturn t < .5 ? 4 * t * t * t : ( t - 1 ) * ( 2 * t - 2 ) * ( 2 * t - 2 ) + 1;\n\n\t}\n\n\texport function easeInQuart( t: number ) {\n\n\t\treturn t * t * t * t;\n\n\t}\n\n\texport function easeOutQuart( t: number ) {\n\n\t\treturn 1 - ( -- t ) * t * t * t;\n\n\t}\n\n\texport function easeInOutQuart( t: number ) {\n\n\t\treturn t < .5 ? 8 * t * t * t * t : 1 - 8 * ( -- t ) * t * t * t;\n\n\t}\n\n\texport function easeInQuint( t: number ) {\n\n\t\treturn t * t * t * t * t;\n\n\t}\n\n\texport function easeOutQuint( t: number ) {\n\n\t\treturn 1 + ( -- t ) * t * t * t * t;\n\n\t}\n\n  \texport function easeInOutQuint( t: number ) {\n\n  \t\treturn t < .5 ? 16 * t * t * t * t * t : 1 + 16 * ( -- t ) * t * t * t * t;\n\n  \t}\n\n\texport function bezier( c1: IVector2, h1: IVector2, h2: IVector2, c2: IVector2 ): EasingFunc {\n\n\t\tvar cache = new Array( Bezier.BEZIER_EASING_CACHE_SIZE );\n\n\t\tfor ( var i = 0; i < Bezier.BEZIER_EASING_CACHE_SIZE; ++ i ) {\n\n\t\t\tcache[ i ] = Bezier.calcBezier( { p0: c1.x, p1: h1.x, p2: h2.x, p3: c2.x }, i / ( Bezier.BEZIER_EASING_CACHE_SIZE - 1.0 ) );\n\n\t\t}\n\n\t\treturn ( x: number ) => {\n\n\t\t\tif ( x <= c1.x ) return c1.y;\n\t\t\tif ( c2.x <= x ) return c2.y;\n\n\t\t\treturn Bezier.calcBezier( { p0: c1.y, p1: h1.y, p2: h2.y, p3: c2.y }, Bezier.getBezierTfromX( { p0: c1.x, p1: h1.x, p2: h2.x, p3: c2.x }, x, cache ) );\n\n\t\t};\n\n\t}\n\n\texport function cubicBezier( h1X: number, h1Y: number, h2X: number, h2Y: number ) {\n\n\t\treturn bezier(\n\t\t\t{ x: 0.0, y: 0.0 },\n\t\t\t{ x: h1X, y: h1Y },\n\t\t\t{ x: h2X, y: h2Y },\n\t\t\t{ x: 1.0, y: 1.0 },\n\t\t);\n\n\t}\n\n}\n","import EventEmitter from 'wolfy87-eventemitter';\r\nimport { FCurveKeyFrame } from './FCurveKeyFrame';\r\n\r\nexport class FCurve extends EventEmitter {\r\n\r\n\tpublic keyframes: FCurveKeyFrame[] = [];\r\n\r\n\tprivate cache: { frame: number, value: number } = { frame: NaN, value: NaN };\r\n\r\n\tpublic frameStart: number;\r\n\tpublic frameEnd: number;\r\n\tpublic frameDuration: number;\r\n\r\n\tconstructor( frames?: FCurveKeyFrame[] ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.frameStart = 0;\r\n\t\tthis.frameEnd = 0;\r\n\t\tthis.frameDuration = 0;\r\n\r\n\t\tthis.set( frames );\r\n\r\n\t}\r\n\r\n\tpublic set( frames?: FCurveKeyFrame[] ) {\r\n\r\n\t\tif ( frames ) {\r\n\r\n\t\t\tthis.keyframes.length = 0;\r\n\r\n\t\t\tframes.forEach( keyframe => {\r\n\r\n\t\t\t\tthis.addKeyFrame( keyframe );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic addKeyFrame( keyframe: FCurveKeyFrame ) {\r\n\r\n\t\tlet index = 0;\r\n\r\n\t\tfor ( let i = 0; i < this.keyframes.length; i ++ ) {\r\n\r\n\t\t\tconst frame = this.keyframes[ i ];\r\n\r\n\t\t\tif ( frame.coordinate.x < keyframe.coordinate.x ) {\r\n\r\n\t\t\t\tindex ++;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.keyframes.splice( index, 0, keyframe );\r\n\r\n\t\t// set frame info\r\n\r\n\t\tthis.frameStart = this.keyframes[ 0 ].coordinate.x;\r\n\t\tthis.frameEnd = this.keyframes[ this.keyframes.length - 1 ].coordinate.x;\r\n\r\n\t}\r\n\r\n\tpublic getValue( frame: number ) {\r\n\r\n\t\tif ( frame == this.cache.frame ) {\r\n\r\n\t\t\treturn this.cache.value;\r\n\r\n\t\t}\r\n\r\n\t\tlet value: number | null = null;\r\n\r\n\t\tfor ( let i = 0; i < this.keyframes.length; i ++ ) {\r\n\r\n\t\t\tconst keyframe = this.keyframes[ i ];\r\n\r\n\t\t\tif ( frame <= keyframe.coordinate.x ) {\r\n\r\n\t\t\t\tconst beforeKeyFrame = this.keyframes[ i - 1 ];\r\n\r\n\t\t\t\tif ( beforeKeyFrame ) {\r\n\r\n\t\t\t\t\tvalue = beforeKeyFrame.to( keyframe, frame );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvalue = keyframe.coordinate.y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( value === null && this.keyframes.length > 0 ) {\r\n\r\n\t\t\tvalue = this.keyframes[ this.keyframes.length - 1 ].coordinate.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( value !== null ) {\r\n\r\n\t\t\tthis.cache = {\r\n\t\t\t\tframe: frame,\r\n\t\t\t\tvalue: value\r\n\t\t\t};\r\n\r\n\t\t\treturn value;\r\n\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n}\r\n","import EventEmitter from 'wolfy87-eventemitter';\r\nimport { Types } from '..';\r\nimport { IVector4 } from '../Math/Vector';\r\nimport { FCurve } from './FCurve';\r\n\r\nexport class FCurveGroup extends EventEmitter {\r\n\r\n\tpublic name: string;\r\n\r\n\tprivate curves: Map<Types.RecommendString<Types.Axis>, FCurve>\r\n\r\n\tpublic frameStart: number;\r\n\tpublic frameEnd: number;\r\n\tpublic frameDuration: number;\r\n\r\n\tconstructor( name?: string, x?: FCurve, y?: FCurve, z?: FCurve, w?: FCurve ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.name = name || '';\r\n\r\n\t\tthis.frameStart = 0;\r\n\t\tthis.frameEnd = 0;\r\n\t\tthis.frameDuration = 0;\r\n\r\n\t\tthis.curves = new Map();\r\n\r\n\t\tif ( x ) this.setFCurve( x, 'x' );\r\n\t\tif ( y ) this.setFCurve( y, 'y' );\r\n\t\tif ( z ) this.setFCurve( z, 'z' );\r\n\t\tif ( w ) this.setFCurve( w, 'w' );\r\n\r\n\t}\r\n\r\n\tpublic setFCurve( curve: FCurve, axis: Types.RecommendString<Types.Axis> ) {\r\n\r\n\t\tthis.curves.set( axis, curve );\r\n\r\n\t\tlet minStart = Infinity;\r\n\t\tlet maxEnd = - Infinity;\r\n\r\n\t\tthis.curves.forEach( curve => {\r\n\r\n\t\t\tif ( curve.frameStart < minStart ) {\r\n\r\n\t\t\t\tminStart = curve.frameStart;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( curve.frameEnd > maxEnd ) {\r\n\r\n\t\t\t\tmaxEnd = curve.frameEnd;\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\tif ( minStart == - Infinity || maxEnd == Infinity ) {\r\n\r\n\t\t\tminStart = 0;\r\n\t\t\tmaxEnd = 1;\r\n\r\n\t\t}\r\n\r\n\t\tthis.frameStart = minStart;\r\n\t\tthis.frameEnd = maxEnd;\r\n\t\tthis.frameDuration = this.frameEnd - this.frameStart;\r\n\r\n\t}\r\n\r\n\r\n\tpublic getValue( frame: number ): IVector4 | null;\r\n\r\n\tpublic getValue<T extends Types.Nullable<IVector4>>( frame: number, target: T ): T;\r\n\r\n\tpublic getValue<T extends Types.Nullable<IVector4>>( frame: number, target?: T ): T | IVector4 | null {\r\n\r\n\t\tconst x = this.curves.get( 'x' );\r\n\t\tconst y = this.curves.get( 'y' );\r\n\t\tconst z = this.curves.get( 'z' );\r\n\t\tconst w = this.curves.get( 'w' );\r\n\r\n\t\tif ( target ) {\r\n\r\n\t\t\tif ( x ) target.x = x.getValue( frame );\r\n\t\t\tif ( y ) target.y = y.getValue( frame );\r\n\t\t\tif ( z ) target.z = z.getValue( frame );\r\n\t\t\tif ( w ) target.w = w.getValue( frame );\r\n\r\n\t\t\treturn target;\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tx: x ? x.getValue( frame ) : 0,\r\n\t\t\ty: y ? y.getValue( frame ) : 0,\r\n\t\t\tz: z ? z.getValue( frame ) : 0,\r\n\t\t\tw: w ? w.getValue( frame ) : 0,\r\n\t\t};\r\n\r\n\t}\r\n\r\n}\r\n","import EventEmitter from 'wolfy87-eventemitter';\r\nimport { IVector2 } from '..';\r\nimport { EasingFunc, Easings } from './Easings';\r\n\r\nexport type FCurveInterpolation = \"BEZIER\" | \"LINEAR\";\r\n\r\nexport class FCurveKeyFrame extends EventEmitter {\r\n\r\n\tpublic coordinate: IVector2 = { x: 0, y: 0 };\r\n\tpublic handleLeft: IVector2 = { x: 0, y: 0 };\r\n\tpublic handleRight: IVector2 = { x: 0, y: 0 };\r\n\tpublic interpolation: FCurveInterpolation = 'BEZIER';\r\n\r\n\tprivate easing: EasingFunc | null = null;\r\n\tprivate nextFrame: FCurveKeyFrame | null = null;\r\n\r\n\tconstructor( coordinate: IVector2, handleLeft?: IVector2, handleRight?: IVector2, interpolation?: FCurveInterpolation ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.set( coordinate, handleLeft, handleRight, interpolation );\r\n\r\n\t}\r\n\r\n\tpublic set( coordinate: IVector2, handleLeft?: IVector2, handleRight?: IVector2, interpolation?: FCurveInterpolation ) {\r\n\r\n\t\tthis.coordinate = coordinate;\r\n\t\tthis.handleLeft = handleLeft || coordinate;\r\n\t\tthis.handleRight = handleRight || coordinate;\r\n\t\tthis.interpolation = interpolation || 'BEZIER';\r\n\r\n\t}\r\n\r\n\tprivate getEasing( interpolation: FCurveInterpolation, nextFrame: FCurveKeyFrame ) {\r\n\r\n\t\tif ( interpolation == 'BEZIER' ) {\r\n\r\n\t\t\treturn Easings.bezier( this.coordinate, this.handleRight, nextFrame.handleLeft, nextFrame.coordinate );\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn ( t: number ) => {\r\n\r\n\t\t\t\tconst d = ( nextFrame.coordinate.y - this.coordinate.y );\r\n\t\t\t\tt = ( t - this.coordinate.x ) / ( nextFrame.coordinate.x - this.coordinate.x );\r\n\r\n\t\t\t\treturn this.coordinate.y + t * d;\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic to( nextFrame: FCurveKeyFrame, t: number ) {\r\n\r\n\t\tif ( this.nextFrame == null || this.nextFrame.coordinate.x != nextFrame.coordinate.x || this.nextFrame.coordinate.y != nextFrame.coordinate.y ) {\r\n\r\n\t\t\tthis.easing = this.getEasing( this.interpolation, nextFrame );\r\n\t\t\tthis.nextFrame = nextFrame;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.easing ) {\r\n\r\n\t\t\treturn this.easing( t );\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn 0;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n","import EventEmitter from \"wolfy87-eventemitter\";\r\nimport { IVector2, IVector3 } from \"..\";\r\nimport { AnimationAction } from \"../Animation/AnimationAction\";\r\nimport { FCurve } from \"../Animation/FCurve\";\r\nimport { FCurveGroup } from '../Animation/FCurveGroup';\r\nimport { FCurveInterpolation, FCurveKeyFrame } from \"../Animation/FCurveKeyFrame\";\r\n\r\nexport type BLidgeMessage = BLidgeSyncSceneMessage | BLidgeSyncFrameMessage\r\nexport type BLidgeAnimationCurveAxis = 'x' | 'y' | 'z' | 'w'\r\n\r\nexport type BLidgeSyncSceneMessage = {\r\n\ttype: \"sync/scene\",\r\n    data: BLidgeScene;\r\n}\r\n\r\nexport type BLidgeObjectType = 'empty' | 'cube' | 'sphere' | 'mesh' | 'camera' | 'plane';\r\n\r\nexport type BLidgeCameraParams = {\r\n\tfov: number\r\n}\r\n\r\nexport type BLidgeObject = {\r\n\tname: string,\r\n\tparent: string,\r\n\tchildren: BLidgeObject[],\r\n\tactions: string[],\r\n\tposition: IVector3,\r\n\trotation: IVector3,\r\n\tscale: IVector3,\r\n\ttype: BLidgeObjectType,\r\n\tcamera?: BLidgeCameraParams,\r\n}\r\n\r\nexport type BLidgeScene = {\r\n\tactions: BLidgeAnimationActionParam[];\r\n\tscene: BLidgeObject\r\n}\r\n\r\nexport type BLidgeAnimationActionParam = {\r\n    name: string;\r\n    fcurve_groups: {[key: string]: BLidgeAnimationCurveParam[]};\r\n}\r\n\r\nexport type BLidgeAnimationCurveParam = {\r\n    keyframes: BLidgeAnimationCurveKeyFrameParam[];\r\n\taxis: BLidgeAnimationCurveAxis\r\n}\r\n\r\nexport type BLidgeAnimationCurveKeyFrameParam = {\r\n    c: IVector2;\r\n    h_l: IVector2;\r\n    h_r: IVector2;\r\n    e: string;\r\n    i: FCurveInterpolation;\r\n}\r\n\r\nexport type BLidgeSyncFrameMessage = {\r\n\ttype: \"sync/timeline\";\r\n\tdata: BLidgeTimelineData;\r\n}\r\n\r\nexport type BLidgeTimelineData = {\r\n\tstart: number;\r\n\tend: number;\r\n\tcurrent: number;\r\n}\r\n\r\nexport class BLidge extends EventEmitter {\r\n\r\n\t// ws\r\n\r\n\tprivate url?: string;\r\n\tprivate ws?: WebSocket;\r\n\tpublic connected: boolean = false;\r\n\r\n\t// frame\r\n\r\n\tpublic frameCurrent: number = 0;\r\n\tpublic frameStart: number = 0;\r\n\tpublic frameEnd: number = 0;\r\n\r\n\t// animation\r\n\r\n\tpublic objects: BLidgeObject[] = [];\r\n\tpublic actions: AnimationAction[] = [];\r\n\tpublic scene: BLidgeObject | null;\r\n\r\n\tconstructor( url?: string ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.scene = null;\r\n\r\n\t\tif ( url ) {\r\n\r\n\t\t\tthis.url = url;\r\n\t\t\tthis.connect( this.url );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic connect( url: string ) {\r\n\r\n\t\tthis.url = url;\r\n\t\tthis.ws = new WebSocket( this.url );\r\n\t\tthis.ws.onopen = this.onOpen.bind( this );\r\n\t\tthis.ws.onmessage = this.onMessage.bind( this );\r\n\t\tthis.ws.onclose = this.onClose.bind( this );\r\n\t\tthis.ws.onerror = ( e ) => {\r\n\r\n\t\t\tconsole.error( e );\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tpublic syncJsonScene( jsonPath: string ) {\r\n\r\n\t\tconst req = new XMLHttpRequest();\r\n\r\n\t\treq.onreadystatechange = () => {\r\n\r\n\t\t\tif ( req.readyState == 4 ) {\r\n\r\n\t\t\t\tif ( req.status == 200 ) {\r\n\r\n\t\t\t\t\tthis.onSyncScene( JSON.parse( req.response ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\treq.open( 'GET', jsonPath );\r\n\t\treq.send( );\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tEvents\r\n\t-------------------------------*/\r\n\r\n\tprivate onSyncScene( data: BLidgeScene ) {\r\n\r\n\t\tthis.actions.length = 0;\r\n\t\tthis.objects.length = 0;\r\n\r\n\t\t// actions\r\n\r\n\t\tdata.actions.forEach( actionData => {\r\n\r\n\t\t\tconst action = new AnimationAction( actionData.name );\r\n\r\n\t\t\tconst fcurveGroupNames = Object.keys( actionData.fcurve_groups );\r\n\r\n\t\t\tfor ( let i = 0; i < fcurveGroupNames.length; i ++ ) {\r\n\r\n\t\t\t\tconst fcurveGroupName = fcurveGroupNames[ i ];\r\n\r\n\t\t\t\tconst fcurveGroup = new FCurveGroup( fcurveGroupName );\r\n\r\n\t\t\t\tactionData.fcurve_groups[ fcurveGroupName ].forEach( fcurveData => {\r\n\r\n\t\t\t\t\tconst curve = new FCurve();\r\n\r\n\t\t\t\t\tcurve.set( fcurveData.keyframes.map( frame => {\r\n\r\n\t\t\t\t\t\treturn new FCurveKeyFrame( frame.c, frame.h_l, frame.h_r, frame.i );\r\n\r\n\t\t\t\t\t} ) );\r\n\r\n\t\t\t\t\tfcurveGroup.setFCurve( curve, fcurveData.axis );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\taction.addFcurveGroup( fcurveGroup.name, fcurveGroup );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.actions.push( action );\r\n\r\n\t\t} );\r\n\r\n\t\t// objects\r\n\r\n\t\tthis.scene = data.scene;\r\n\r\n\t\tthis.objects.length = 0;\r\n\r\n\t\tconst _ = ( obj: BLidgeObject ) => {\r\n\r\n\t\t\tthis.objects.push( obj );\r\n\r\n\t\t\tobj.children.forEach( item => _( item ) );\r\n\r\n\t\t};\r\n\r\n\t\t_( this.scene );\r\n\r\n\t\t// dispatch event\r\n\r\n\t\tthis.emitEvent( 'sync/scene', [ this ] );\r\n\r\n\t\tthis.setTimeline( this.frameCurrent );\r\n\r\n\t}\r\n\r\n\tprivate onSyncTimeline( data: BLidgeTimelineData ) {\r\n\r\n\t\tthis.setTimeline( data.current, data.start, data.end );\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tWS Events\r\n\t-------------------------------*/\r\n\r\n\tprivate onOpen( event: Event ) {\r\n\r\n\t\tthis.connected = true;\r\n\r\n\t}\r\n\r\n\tprivate onMessage( e: MessageEvent ) {\r\n\r\n\t\tconst msg = JSON.parse( e.data ) as BLidgeMessage;\r\n\r\n\t\tif ( msg.type == 'sync/scene' ) {\r\n\r\n\t\t\tthis.onSyncScene( msg.data );\r\n\r\n\t\t} else if ( msg.type == \"sync/timeline\" ) {\r\n\r\n\t\t\tthis.onSyncTimeline( msg.data );\r\n\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate onClose( e:CloseEvent ) {\r\n\r\n\t\tthis.disposeWS();\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tAPI\r\n\t-------------------------------*/\r\n\r\n\tpublic getActionNameList( objectName: string ) {\r\n\r\n\t\tfor ( let i = 0; i < this.objects.length; i ++ ) {\r\n\r\n\t\t\tif ( this.objects[ i ].name == objectName ) {\r\n\r\n\t\t\t\treturn this.objects[ i ].actions;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\r\n\t}\r\n\r\n\tpublic getAction( actionName: string ) {\r\n\r\n\t\tfor ( let i = 0; i < this.actions.length; i ++ ) {\r\n\r\n\t\t\tif ( this.actions[ i ].name == actionName ) {\r\n\r\n\t\t\t\treturn this.actions[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\tpublic getActionList( objectName: string ) {\r\n\r\n\t\tconst actions: AnimationAction[] = [];\r\n\t\tconst actionNameList = this.getActionNameList( objectName );\r\n\r\n\t\tactionNameList.forEach( actionName => {\r\n\r\n\t\t\tconst action = this.getAction( actionName );\r\n\r\n\t\t\tif ( action ) {\r\n\r\n\t\t\t\tactions.push( action );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\treturn actions;\r\n\r\n\t}\r\n\r\n\tpublic getActionContainsAccessor( accessor: string ) {\r\n\r\n\t\treturn this.actions.find( action => {\r\n\r\n\t\t\tconst curveKeys = Object.keys( action.curves );\r\n\r\n\t\t\treturn curveKeys.some( curveName => curveName == accessor );\r\n\r\n\t\t} ) || null;\r\n\r\n\t}\r\n\r\n\tpublic setTimeline( current: number, start?:number, end?:number ) {\r\n\r\n\t\tthis.frameCurrent = current;\r\n\t\tthis.frameStart = start || this.frameStart;\r\n\t\tthis.frameEnd = end || this.frameEnd;\r\n\r\n\t\tfor ( let i = 0; i < this.actions.length; i ++ ) {\r\n\r\n\t\t\tconst action = this.actions[ i ];\r\n\r\n\t\t\taction.updateFrame( this.frameCurrent );\r\n\r\n\t\t}\r\n\r\n\t\tthis.emitEvent( 'sync/timeline', [ this.frameCurrent, this.frameStart, this.frameEnd ] );\r\n\r\n\t}\r\n\r\n\t/*-------------------------------\r\n\t\tDispose\r\n\t-------------------------------*/\r\n\r\n\tpublic dispose() {\r\n\r\n\t\tthis.disposeWS();\r\n\r\n\t}\r\n\r\n\tpublic disposeWS() {\r\n\r\n\t\tif ( this.ws ) {\r\n\r\n\t\t\tthis.ws.close();\r\n\t\t\tthis.ws.onmessage = null;\r\n\t\t\tthis.ws.onclose = null;\r\n\t\t\tthis.ws.onopen = null;\r\n\r\n\t\t\tthis.connected = false;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n"],"names":["GLPowerVAO","gl","program","name","buffer","size","count","attr","force","attrNameList","i","attribute","indexBuffer","GLPowerProgram","vertexShaderSrc","fragmentShaderSrc","vs","fs","shaderSrc","type","shader","value","uniform","key","id","vao","GLPowerBuffer","data","usage","target","Vector","x","y","z","w","a","_a","_b","_c","_d","v","ax","ay","az","bx","by","bz","GLPowerTexture","param","img","unitNumber","src","callBack","resolve","reject","GLPowerFrameBuffer","textures","t","attachment","width_size","height","Power","Matrix","elm","mat","fov","aspect","near","far","d","eye","up","zAxis","xAxis","yAxis","b","c","e","f","g","h","j","k","l","m","n","o","p","q","r","s","u","A","B","det","ivd","e11","e12","e13","e14","e21","e22","e23","e24","e31","e32","e33","e34","e41","e42","e43","e44","pos","qua","scale","rot","position","xx","yy","zz","ww","xy","xz","xw","yz","yw","zw","elm2","dist","sum","tmp","array","Quaternion","euler","order","sx","sy","sz","cx","cy","cz","Geometry","keys","core","constructor","bufferType","CubeGeometry","width","depth","hx","hy","hz","posArray","normalArray","uvArray","indexArray","offset","CylinderGeometry","radiusTop","radiusBottom","radSegments","heightSegments","theta","radius","normal","side","PlaneGeometry","widthSegments","ru","lb","SphereGeometry","thetaI","segments","thetaJ","widthRadius","item","index","ECS","world","entity","component","componentName","componentArray","systemName","system","now","deltaTime","query","entt","exports","EventEmitter","proto","originalGlobalValue","indexOfListener","listeners","listener","alias","evt","events","response","flatListeners","isValidListener","listenerIsWrapped","evts","remove","single","multiple","args","listenersMap","module","this","System","ecs","queries","event","entities","logicName","SceneGraph","parent","child","parentNode","childNode","updateOrder","_","sceneNode","AnimationAction","propertyName","fcurveGroup","curveKeys","minStart","maxEnd","curve","uni","accessor","frame","curveGroup","Bezier","calcBezierA","calcBezierB","calcBezierC","calcBezierSlope","calcBezier","subdiv","startT","endT","currentX","currentT","newton","slope","getBezierTfromX","cache","sample","diff","Easings","sigmoid","weight","e1","e2","smoothstep","min","max","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","bezier","c1","h1","h2","c2","cubicBezier","h1X","h1Y","h2X","h2Y","FCurve","frames","keyframe","beforeKeyFrame","FCurveGroup","axis","FCurveKeyFrame","coordinate","handleLeft","handleRight","interpolation","nextFrame","BLidge","url","jsonPath","req","actionData","action","fcurveGroupNames","fcurveGroupName","fcurveData","obj","msg","objectName","actionName","actions","curveName","current","start","end"],"mappings":"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"}